{"version":3,"file":"game.bundle.js","mappings":"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","sources":["webpack://wolfenstein/webpack/runtime/create fake namespace object","webpack://wolfenstein/webpack/runtime/load script","webpack://wolfenstein/./src/game/style.css","webpack://wolfenstein/./node_modules/css-loader/dist/runtime/api.js","webpack://wolfenstein/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://wolfenstein/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://wolfenstein/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://wolfenstein/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://wolfenstein/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://wolfenstein/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://wolfenstein/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://wolfenstein/./src/game/levels|lazy|/^/.*/.json$/|groupOptions: {}|namespace object","webpack://wolfenstein/webpack/bootstrap","webpack://wolfenstein/webpack/runtime/compat get default export","webpack://wolfenstein/webpack/runtime/define property getters","webpack://wolfenstein/webpack/runtime/ensure chunk","webpack://wolfenstein/webpack/runtime/get javascript chunk filename","webpack://wolfenstein/webpack/runtime/hasOwnProperty shorthand","webpack://wolfenstein/webpack/runtime/make namespace object","webpack://wolfenstein/webpack/runtime/publicPath","webpack://wolfenstein/webpack/runtime/jsonp chunk loading","webpack://wolfenstein/./src/game/style.css?affd","webpack://wolfenstein/./src/game/components/programs/Program.ts","webpack://wolfenstein/./src/game/components/programs/ColorProgram.ts","webpack://wolfenstein/./src/game/shaders/color.vs","webpack://wolfenstein/./src/game/shaders/color.fs","webpack://wolfenstein/./src/game/components/programs/TextureProgram.ts","webpack://wolfenstein/./src/game/shaders/texture.vs","webpack://wolfenstein/./src/game/shaders/texture.fs","webpack://wolfenstein/./src/game/components/utils/utils.ts","webpack://wolfenstein/./src/game/components/utils/m4.ts","webpack://wolfenstein/./src/game/components/utils/Vec2.ts","webpack://wolfenstein/./src/game/components/utils/Vec3.ts","webpack://wolfenstein/./src/game/components/utils/Transform.ts","webpack://wolfenstein/./src/game/components/shapes/level/Shape.ts","webpack://wolfenstein/./src/game/components/shapes/level/CuboidBoundingBox.ts","webpack://wolfenstein/./src/game/components/shapes/level/Cuboid.ts","webpack://wolfenstein/./src/game/components/Config.ts","webpack://wolfenstein/./src/game/components/BetterAudio.ts","webpack://wolfenstein/./src/game/components/shapes/level/Door.ts","webpack://wolfenstein/./src/game/components/shapes/ui/Menu.ts","webpack://wolfenstein/./src/game/components/shapes/ui/LevelEnd.ts","webpack://wolfenstein/./src/game/components/shapes/ui/Weapon.ts","webpack://wolfenstein/./src/game/components/shapes/ui/Weapons.ts","webpack://wolfenstein/./src/game/components/shapes/ui/LoadingScreen.ts","webpack://wolfenstein/./src/game/components/shapes/ui/DeathScreen.ts","webpack://wolfenstein/./src/game/components/shapes/ui/UI.ts","webpack://wolfenstein/./src/game/components/Input.ts","webpack://wolfenstein/./src/game/components/Camera.ts","webpack://wolfenstein/./src/game/components/Textures.ts","webpack://wolfenstein/./src/game/components/shapes/level/Wall.ts","webpack://wolfenstein/./src/common/NotCollidingFieldValues.ts","webpack://wolfenstein/./src/game/components/Pathfinder.ts","webpack://wolfenstein/./src/game/components/Raycaster.ts","webpack://wolfenstein/./src/game/components/shapes/level/Plane.ts","webpack://wolfenstein/./src/game/components/shapes/level/pickups/Pickup.ts","webpack://wolfenstein/./src/game/components/shapes/level/pickups/Ammo.ts","webpack://wolfenstein/./src/game/components/shapes/level/pickups/Flag.ts","webpack://wolfenstein/./src/game/components/shapes/level/Enemy.ts","webpack://wolfenstein/./src/game/components/shapes/level/pickups/HealthItem.ts","webpack://wolfenstein/./src/game/components/shapes/level/pickups/DogFood.ts","webpack://wolfenstein/./src/game/components/shapes/level/pickups/Food.ts","webpack://wolfenstein/./src/game/components/shapes/level/pickups/HealthPack.ts","webpack://wolfenstein/./src/game/components/shapes/level/pickups/Machinegun.ts","webpack://wolfenstein/./src/common/DecorationMap.ts","webpack://wolfenstein/./src/game/components/shapes/level/GridBoundingBox.ts","webpack://wolfenstein/./src/game/components/shapes/level/decorations/Decoration.ts","webpack://wolfenstein/./src/game/components/shapes/level/pickups/PointItem.ts","webpack://wolfenstein/./src/game/components/shapes/level/pickups/GoldenCross.ts","webpack://wolfenstein/./src/game/components/shapes/level/pickups/GoldenCup.ts","webpack://wolfenstein/./src/game/components/shapes/level/pickups/GoldenBox.ts","webpack://wolfenstein/./src/game/components/shapes/level/pickups/GoldenCrown.ts","webpack://wolfenstein/./src/game/components/shapes/level/pickups/PowerUp.ts","webpack://wolfenstein/./src/game/components/shapes/level/Lever.ts","webpack://wolfenstein/./src/game/components/shapes/level/WallSecretDoor.ts","webpack://wolfenstein/./src/game/components/Level.ts","webpack://wolfenstein/./src/game/components/shapes/ui/Crosshair.ts","webpack://wolfenstein/./src/game/components/Game.ts","webpack://wolfenstein/./src/game/index.ts"],"sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"wolfenstein:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"html, body {\\r\\n    margin: 0;\\r\\n    height: 100%;\\r\\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\nbody {\\r\\n    height: 100vh;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n#canvas {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    /* display: block; */\\r\\n    visibility: hidden;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    /* width: 1; */\\r\\n    position: absolute;\\r\\n}\\r\\n\\r\\nmain {\\r\\n    /* height: 100%;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center; */\\r\\n}\\r\\n\\r\\n#uiCanvas {\\r\\n    /* width: 100%;\\r\\n    height: 100%; */\\r\\n    display: block;\\r\\n\\r\\n    image-rendering: -moz-crisp-edges;\\r\\n    image-rendering: -webkit-crisp-edges;\\r\\n    image-rendering: pixelated;\\r\\n    image-rendering: crisp-edges;\\r\\n}\\r\\n\\r\\n#ui {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    width: 100vw;\\r\\n    height: 50px;\\r\\n    opacity: 0.9;\\r\\n    background-color: black;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n#ui > * {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    min-width: 100px;\\r\\n}\\r\\n\\r\\n#levelEditor {\\r\\n    background-color: red;\\r\\n    opacity: 0.9;\\r\\n    position: absolute;\\r\\n    bottom: 0px;\\r\\n    left: 0px;\\r\\n    border-radius: 5px;\\r\\n    padding: 10px;\\r\\n    margin: 5px;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n#levelEditor > * {\\r\\n    text-decoration: none;\\r\\n    color: white;\\r\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/game/style.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,SAAS;IACT,YAAY;IACZ,4DAA4D;IAC5D,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,oBAAoB;IACpB,kBAAkB;IAClB,MAAM;IACN,SAAS;IACT,OAAO;IACP,QAAQ;IACR,cAAc;IACd,kBAAkB;AACtB;;AAEA;IACI;;;0BAGsB;AAC1B;;AAEA;IACI;mBACe;IACf,cAAc;;IAEd,iCAAiC;IACjC,oCAAoC;IACpC,0BAA0B;IAC1B,4BAA4B;AAChC;;AAEA;IACI,kBAAkB;IAClB,MAAM;IACN,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,uBAAuB;IACvB,aAAa;IACb,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,qBAAqB;IACrB,YAAY;IACZ,kBAAkB;IAClB,WAAW;IACX,SAAS;IACT,kBAAkB;IAClB,aAAa;IACb,WAAW;IACX,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,YAAY;AAChB\",\"sourcesContent\":[\"html, body {\\r\\n    margin: 0;\\r\\n    height: 100%;\\r\\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\nbody {\\r\\n    height: 100vh;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n#canvas {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    /* display: block; */\\r\\n    visibility: hidden;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    /* width: 1; */\\r\\n    position: absolute;\\r\\n}\\r\\n\\r\\nmain {\\r\\n    /* height: 100%;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center; */\\r\\n}\\r\\n\\r\\n#uiCanvas {\\r\\n    /* width: 100%;\\r\\n    height: 100%; */\\r\\n    display: block;\\r\\n\\r\\n    image-rendering: -moz-crisp-edges;\\r\\n    image-rendering: -webkit-crisp-edges;\\r\\n    image-rendering: pixelated;\\r\\n    image-rendering: crisp-edges;\\r\\n}\\r\\n\\r\\n#ui {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    width: 100vw;\\r\\n    height: 50px;\\r\\n    opacity: 0.9;\\r\\n    background-color: black;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n#ui > * {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    min-width: 100px;\\r\\n}\\r\\n\\r\\n#levelEditor {\\r\\n    background-color: red;\\r\\n    opacity: 0.9;\\r\\n    position: absolute;\\r\\n    bottom: 0px;\\r\\n    left: 0px;\\r\\n    border-radius: 5px;\\r\\n    padding: 10px;\\r\\n    margin: 5px;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n#levelEditor > * {\\r\\n    text-decoration: none;\\r\\n    color: white;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var _i = 0; _i < this.length; _i++) {\n        var id = this[_i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i2 = 0; _i2 < modules.length; _i2++) {\n      var item = [].concat(modules[_i2]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","var map = {\n\t\"./1.json\": [\n\t\t9244,\n\t\t244\n\t],\n\t\"./test 1.json\": [\n\t\t7918,\n\t\t918\n\t],\n\t\"./test 2.json\": [\n\t\t345,\n\t\t345\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 3 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 442;\nmodule.exports = webpackAsyncContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".bundle_\" + {\"244\":\"d7b103709ce9f074d1b5\",\"345\":\"0848b24577dca9d5e4e6\",\"918\":\"bc55be310ccd27075c00\"}[chunkId] + \".js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t757: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkwolfenstein\"] = self[\"webpackChunkwolfenstein\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","export interface ProgramInfo {\r\n    attributes: {\r\n        position: number,\r\n        color?: number,\r\n        texcoord?: number,\r\n    },\r\n    uniforms: {\r\n        matrix: WebGLUniformLocation\r\n    },\r\n}\r\n\r\nexport abstract class Program {\r\n    info: ProgramInfo\r\n    private readonly program: WebGLProgram\r\n    protected readonly gl: WebGLRenderingContext\r\n\r\n    constructor(\r\n        gl: WebGLRenderingContext,\r\n        vertexShaderSource: string,\r\n        fragmentShaderSource: string\r\n    ) {\r\n        this.gl = gl\r\n\r\n        const vertexShader = this.createShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\r\n        const fragmentShader = this.createShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\r\n\r\n        this.program = this.createProgram(gl, vertexShader, fragmentShader);\r\n    }\r\n\r\n    use() {\r\n        this.gl.useProgram(this.program);\r\n    }\r\n\r\n    attribute(name: string) {\r\n        return this.gl.getAttribLocation(this.program, name);\r\n    }\r\n\r\n    uniform(name: string) {\r\n        return this.gl.getUniformLocation(this.program, name);\r\n    }\r\n\r\n    private createShader(gl: WebGLRenderingContext, type: number, source: string) {\r\n        const shader = gl.createShader(type);\r\n        gl.shaderSource(shader, source);\r\n        gl.compileShader(shader);\r\n        const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n        if (success) {\r\n            return shader;\r\n        }\r\n\r\n        gl.deleteShader(shader);\r\n    }\r\n\r\n    private createProgram(gl: WebGLRenderingContext, vertexShader: WebGLShader, fragmentShader: WebGLShader) {\r\n        const program = gl.createProgram();\r\n        gl.attachShader(program, vertexShader);\r\n        gl.attachShader(program, fragmentShader);\r\n        gl.linkProgram(program);\r\n        const success = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n        if (success) {\r\n            return program;\r\n        }\r\n\r\n        gl.deleteProgram(program);\r\n    }\r\n}","import { Program, ProgramInfo } from \"./Program\";\r\nimport vertexShaderSource from '../../shaders/color.vs';\r\nimport fragmentShaderSource from '../../shaders/color.fs';\r\n\r\nexport interface ColorProgramInfo extends ProgramInfo {\r\n    attributes: {\r\n        position: number,\r\n        color: number,\r\n    },\r\n    uniforms: {\r\n        matrix: WebGLUniformLocation\r\n    },\r\n}\r\n\r\nexport class ColorProgram extends Program {\r\n    info: ColorProgramInfo = {\r\n        attributes: {\r\n            position: this.attribute(\"a_position\"),\r\n            color: this.attribute(\"a_color\"),\r\n        },\r\n        uniforms: {\r\n            matrix: this.uniform(\"u_matrix\")\r\n        },\r\n    }\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        super(gl, vertexShaderSource, fragmentShaderSource,)\r\n    }\r\n}","export default \"attribute vec4 a_position;\\r\\nattribute vec4 a_color;\\r\\n\\r\\nuniform mat4 u_matrix;\\r\\n\\r\\nvarying vec4 v_color;\\r\\n\\r\\nvoid main() {\\r\\n  gl_Position = u_matrix * a_position;    \\r\\n  // Pass the color to the fragment shader.\\r\\n  v_color = a_color;\\r\\n}\"","export default \"precision mediump float;\\r\\n\\r\\n// Passed in from the vertex shader.\\r\\nvarying vec4 v_color;\\r\\n\\r\\nvoid main() {\\r\\n   gl_FragColor = v_color;\\r\\n}\"","import { Program, ProgramInfo } from \"./Program\";\r\nimport vertexShaderSource from '../../shaders/texture.vs';\r\nimport fragmentShaderSource from '../../shaders/texture.fs';\r\n\r\nexport interface TextureProgramInfo extends ProgramInfo {\r\n    attributes: {\r\n        position: number,\r\n        texcoord: number,\r\n    },\r\n    uniforms: {\r\n        matrix: WebGLUniformLocation\r\n    },\r\n}\r\n\r\nexport class TextureProgram extends Program {\r\n    info: TextureProgramInfo = {\r\n        attributes: {\r\n            position: this.attribute(\"a_position\"),\r\n            texcoord: this.attribute(\"a_texcoord\"),\r\n        },\r\n        uniforms: {\r\n            matrix: this.uniform(\"u_matrix\")\r\n        },\r\n    }\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        super(gl, vertexShaderSource, fragmentShaderSource,)\r\n    }\r\n\r\n    loadTexture(src: string, callback: () => void) {\r\n        // Create a texture.\r\n        const texture = this.gl.createTexture();\r\n        this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\r\n\r\n        // Fill the texture with a 1x1 blue pixel.\r\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE,\r\n            new Uint8Array([0, 0, 255, 255]));\r\n\r\n        // Asynchronously load an image\r\n        var image = new Image();\r\n        image.src = src\r\n        image.addEventListener('load', () => {\r\n            // Now that the image has loaded make copy it to the texture.\r\n            // this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\r\n            // this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, image);\r\n            // this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR_MIPMAP_LINEAR);\r\n            // this.gl.generateMipmap(this.gl.TEXTURE_2D);\r\n\r\n            callback()\r\n        });\r\n    }\r\n}","export default \"attribute vec4 a_position;\\r\\nattribute vec2 a_texcoord;\\r\\n\\r\\nuniform mat4 u_matrix;\\r\\n\\r\\nvarying vec2 v_texcoord;\\r\\n\\r\\nvoid main() {\\r\\n  gl_Position = u_matrix * a_position;    \\r\\n  \\r\\n  // Pass the texcoord to the fragment shader.\\r\\n  v_texcoord = a_texcoord;\\r\\n}\"","export default \"precision mediump float;\\r\\n\\r\\n// Passed in from the vertex shader.\\r\\nvarying vec2 v_texcoord;\\r\\n\\r\\n// The texture.\\r\\nuniform sampler2D u_texture;\\r\\n\\r\\nvoid main() {\\r\\n    vec4 texColor = texture2D(u_texture, v_texcoord);\\r\\n    if(texColor.a < 0.1)\\r\\n        discard;\\r\\n    gl_FragColor = texColor;\\r\\n    // gl_FragColor = texture2D(u_texture, v_texcoord);\\r\\n}\"","import { Vec3 } from \".\";\r\n\r\nexport function radToDeg(r: number) {\r\n    return r * 180 / Math.PI;\r\n}\r\n\r\nexport function degToRad(d: number) {\r\n    return d * Math.PI / 180;\r\n}\r\n\r\nexport function hexToRgb(hex: string) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? new Vec3(\r\n        parseInt(result[1], 16),\r\n        parseInt(result[2], 16),\r\n        parseInt(result[3], 16)\r\n    ) : null;\r\n}","import { Vec3 } from '.'\r\n\r\nconst m4 = {\r\n    translation: (v: Vec3) => {\r\n        return [\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            v.x, v.y, v.z, 1,\r\n        ]\r\n    },\r\n\r\n    get identity() {\r\n        return [\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1,\r\n        ]\r\n    },\r\n\r\n    rotate: (mTarget: number[], v: Vec3) => {\r\n        let m = m4.multiply(mTarget, m4.xRotation(v.x))\r\n        m = m4.multiply(m, m4.yRotation(v.y))\r\n        m = m4.multiply(m, m4.zRotation(v.z))\r\n        return m\r\n    },\r\n\r\n    xRotation: (angleInRadians: number) => {\r\n        const c = Math.cos(angleInRadians)\r\n        const s = Math.sin(angleInRadians)\r\n\r\n        return [\r\n            1, 0, 0, 0,\r\n            0, c, s, 0,\r\n            0, -s, c, 0,\r\n            0, 0, 0, 1,\r\n        ]\r\n    },\r\n\r\n    yRotation: (angleInRadians: number) => {\r\n        const c = Math.cos(angleInRadians)\r\n        const s = Math.sin(angleInRadians)\r\n\r\n        return [\r\n            c, 0, -s, 0,\r\n            0, 1, 0, 0,\r\n            s, 0, c, 0,\r\n            0, 0, 0, 1,\r\n        ]\r\n    },\r\n\r\n    zRotation: (angleInRadians: number) => {\r\n        const c = Math.cos(angleInRadians)\r\n        const s = Math.sin(angleInRadians)\r\n\r\n        return [\r\n            c, s, 0, 0,\r\n            -s, c, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1,\r\n        ]\r\n    },\r\n\r\n    scaling: (v: Vec3) => {\r\n        return [\r\n            v.x, 0, 0, 0,\r\n            0, v.y, 0, 0,\r\n            0, 0, v.z, 0,\r\n            0, 0, 0, 1,\r\n        ]\r\n    },\r\n\r\n    translate: (m: number[], v: Vec3) => {\r\n        return m4.multiply(m, m4.translation(v))\r\n    },\r\n\r\n    xRotate: (m: number[], angleInRadians: number) => {\r\n        return m4.multiply(m, m4.xRotation(angleInRadians))\r\n    },\r\n\r\n    yRotate: (m: number[], angleInRadians: number) => {\r\n        return m4.multiply(m, m4.yRotation(angleInRadians))\r\n    },\r\n\r\n    zRotate: (m: number[], angleInRadians: number) => {\r\n        return m4.multiply(m, m4.zRotation(angleInRadians))\r\n    },\r\n\r\n    scale: (m: number[], v: Vec3) => {\r\n        return m4.multiply(m, m4.scaling(v))\r\n    },\r\n\r\n    perspective: (fieldOfViewInRadians: number, aspect: number, near: number, far: number) => {\r\n        var f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewInRadians);\r\n        var rangeInv = 1.0 / (near - far);\r\n\r\n        return [\r\n            f / aspect, 0, 0, 0,\r\n            0, f, 0, 0,\r\n            0, 0, (near + far) * rangeInv, -1,\r\n            0, 0, near * far * rangeInv * 2, 0\r\n        ];\r\n    },\r\n\r\n    makeZToWMatrix(fudgeFactor: number) {\r\n        return [\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, fudgeFactor,\r\n            0, 0, 0, 1,\r\n        ];\r\n    },\r\n\r\n    multiply: (a: number[], b: number[]) => {\r\n        const a11 = a[0 * 4 + 0]\r\n        const a12 = a[0 * 4 + 1]\r\n        const a13 = a[0 * 4 + 2]\r\n        const a14 = a[0 * 4 + 3]\r\n        const a21 = a[1 * 4 + 0]\r\n        const a22 = a[1 * 4 + 1]\r\n        const a23 = a[1 * 4 + 2]\r\n        const a24 = a[1 * 4 + 3]\r\n        const a31 = a[2 * 4 + 0]\r\n        const a32 = a[2 * 4 + 1]\r\n        const a33 = a[2 * 4 + 2]\r\n        const a34 = a[2 * 4 + 3]\r\n        const a41 = a[3 * 4 + 0]\r\n        const a42 = a[3 * 4 + 1]\r\n        const a43 = a[3 * 4 + 2]\r\n        const a44 = a[3 * 4 + 3]\r\n        const b11 = b[0 * 4 + 0]\r\n        const b12 = b[0 * 4 + 1]\r\n        const b13 = b[0 * 4 + 2]\r\n        const b14 = b[0 * 4 + 3]\r\n        const b21 = b[1 * 4 + 0]\r\n        const b22 = b[1 * 4 + 1]\r\n        const b23 = b[1 * 4 + 2]\r\n        const b24 = b[1 * 4 + 3]\r\n        const b31 = b[2 * 4 + 0]\r\n        const b32 = b[2 * 4 + 1]\r\n        const b33 = b[2 * 4 + 2]\r\n        const b34 = b[2 * 4 + 3]\r\n        const b41 = b[3 * 4 + 0]\r\n        const b42 = b[3 * 4 + 1]\r\n        const b43 = b[3 * 4 + 2]\r\n        const b44 = b[3 * 4 + 3]\r\n\r\n        return [\r\n            a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41,\r\n            a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42,\r\n            a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43,\r\n            a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44,\r\n            a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41,\r\n            a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42,\r\n            a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43,\r\n            a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44,\r\n            a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41,\r\n            a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42,\r\n            a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43,\r\n            a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44,\r\n            a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41,\r\n            a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42,\r\n            a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43,\r\n            a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44,\r\n        ]\r\n    },\r\n\r\n    multiplyScalar(m: number[], scalar: number) {\r\n        return m.map(el => el * scalar)\r\n    },\r\n\r\n    det: (m: number[]) => {\r\n        const m11 = m[0 * 4 + 0]\r\n        const m12 = m[0 * 4 + 1]\r\n        const m13 = m[0 * 4 + 2]\r\n        const m14 = m[0 * 4 + 3]\r\n        const m21 = m[1 * 4 + 0]\r\n        const m22 = m[1 * 4 + 1]\r\n        const m23 = m[1 * 4 + 2]\r\n        const m24 = m[1 * 4 + 3]\r\n        const m31 = m[2 * 4 + 0]\r\n        const m32 = m[2 * 4 + 1]\r\n        const m33 = m[2 * 4 + 2]\r\n        const m34 = m[2 * 4 + 3]\r\n        const m41 = m[3 * 4 + 0]\r\n        const m42 = m[3 * 4 + 1]\r\n        const m43 = m[3 * 4 + 2]\r\n        const m44 = m[3 * 4 + 3]\r\n\r\n        return (\r\n            m11 * m22 * m33 * m44 + m11 * m23 * m34 * m42 + m11 * m24 * m32 * m43 +\r\n            +m12 * m21 * m34 * m43 + m12 * m23 * m31 * m44 + m12 * m24 * m33 * m41 +\r\n            +m13 * m21 * m32 * m44 + m13 * m22 * m34 * m41 + m13 * m24 * m31 * m42 +\r\n            +m14 * m21 * m33 * m42 + m14 * m22 * m31 * m43 + m14 * m23 * m32 * m41 +\r\n            -m11 * m22 * m34 * m43 - m11 * m23 * m32 * m44 - m11 * m24 * m33 * m42 +\r\n            -m12 * m21 * m33 * m44 - m12 * m23 * m34 * m41 - m12 * m24 * m31 * m43 +\r\n            -m13 * m21 * m34 * m42 - m13 * m22 * m31 * m44 - m13 * m24 * m32 * m41 +\r\n            -m14 * m21 * m32 * m43 - m14 * m22 * m33 * m41 - m14 * m23 * m31 * m42\r\n        )\r\n    },\r\n\r\n    inverse(m: number[]) {\r\n        let dst = new Array(16);\r\n        var m00 = m[0 * 4 + 0];\r\n        var m01 = m[0 * 4 + 1];\r\n        var m02 = m[0 * 4 + 2];\r\n        var m03 = m[0 * 4 + 3];\r\n        var m10 = m[1 * 4 + 0];\r\n        var m11 = m[1 * 4 + 1];\r\n        var m12 = m[1 * 4 + 2];\r\n        var m13 = m[1 * 4 + 3];\r\n        var m20 = m[2 * 4 + 0];\r\n        var m21 = m[2 * 4 + 1];\r\n        var m22 = m[2 * 4 + 2];\r\n        var m23 = m[2 * 4 + 3];\r\n        var m30 = m[3 * 4 + 0];\r\n        var m31 = m[3 * 4 + 1];\r\n        var m32 = m[3 * 4 + 2];\r\n        var m33 = m[3 * 4 + 3];\r\n\r\n        var tmp_0 = m22 * m33;\r\n        var tmp_1 = m32 * m23;\r\n        var tmp_2 = m12 * m33;\r\n        var tmp_3 = m32 * m13;\r\n        var tmp_4 = m12 * m23;\r\n        var tmp_5 = m22 * m13;\r\n        var tmp_6 = m02 * m33;\r\n        var tmp_7 = m32 * m03;\r\n        var tmp_8 = m02 * m23;\r\n        var tmp_9 = m22 * m03;\r\n        var tmp_10 = m02 * m13;\r\n        var tmp_11 = m12 * m03;\r\n        var tmp_12 = m20 * m31;\r\n        var tmp_13 = m30 * m21;\r\n        var tmp_14 = m10 * m31;\r\n        var tmp_15 = m30 * m11;\r\n        var tmp_16 = m10 * m21;\r\n        var tmp_17 = m20 * m11;\r\n        var tmp_18 = m00 * m31;\r\n        var tmp_19 = m30 * m01;\r\n        var tmp_20 = m00 * m21;\r\n        var tmp_21 = m20 * m01;\r\n        var tmp_22 = m00 * m11;\r\n        var tmp_23 = m10 * m01;\r\n\r\n        var t0 = (tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31) - (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\r\n        var t1 = (tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31) - (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\r\n        var t2 = (tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31) - (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\r\n        var t3 = (tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21) - (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\r\n\r\n        var d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\r\n\r\n        dst[0] = d * t0;\r\n        dst[1] = d * t1;\r\n        dst[2] = d * t2;\r\n        dst[3] = d * t3;\r\n        dst[4] = d * ((tmp_1 * m10 + tmp_2 * m20 + tmp_5 * m30) - (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30));\r\n        dst[5] = d * ((tmp_0 * m00 + tmp_7 * m20 + tmp_8 * m30) - (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30));\r\n        dst[6] = d * ((tmp_3 * m00 + tmp_6 * m10 + tmp_11 * m30) - (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30));\r\n        dst[7] = d * ((tmp_4 * m00 + tmp_9 * m10 + tmp_10 * m20) - (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20));\r\n        dst[8] = d * ((tmp_12 * m13 + tmp_15 * m23 + tmp_16 * m33) - (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33));\r\n        dst[9] = d * ((tmp_13 * m03 + tmp_18 * m23 + tmp_21 * m33) - (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33));\r\n        dst[10] = d * ((tmp_14 * m03 + tmp_19 * m13 + tmp_22 * m33) - (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33));\r\n        dst[11] = d * ((tmp_17 * m03 + tmp_20 * m13 + tmp_23 * m23) - (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23));\r\n        dst[12] = d * ((tmp_14 * m22 + tmp_17 * m32 + tmp_13 * m12) - (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22));\r\n        dst[13] = d * ((tmp_20 * m32 + tmp_12 * m02 + tmp_19 * m22) - (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02));\r\n        dst[14] = d * ((tmp_18 * m12 + tmp_23 * m32 + tmp_15 * m02) - (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12));\r\n        dst[15] = d * ((tmp_22 * m22 + tmp_16 * m02 + tmp_21 * m12) - (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02));\r\n\r\n        return dst;\r\n    },\r\n\r\n    lookAt: function (source: Vec3, target: Vec3) {\r\n        var zAxis = source.substract(target).normalize;\r\n        var xAxis = Vec3.up.cross(zAxis).normalize;\r\n        var yAxis = zAxis.cross(xAxis).normalize;\r\n\r\n        return [\r\n            xAxis.x, xAxis.y, xAxis.z, 0,\r\n            yAxis.x, yAxis.y, yAxis.z, 0,\r\n            zAxis.x, zAxis.y, zAxis.z, 0,\r\n            source.x, source.y, source.z, 1,\r\n        ];\r\n    },\r\n\r\n    getPositionVector: function (m: number[]) {\r\n        return new Vec3(m[12], m[13], m[14]).map(v => v < 0.0000001 ? 0 : v)\r\n    },\r\n\r\n    getScaleVector: function (m: number[]) {\r\n        return new Vec3(\r\n            new Vec3(m[0], m[4], m[8]).magnitude,\r\n            new Vec3(m[1], m[5], m[9]).magnitude,\r\n            new Vec3(m[2], m[6], m[10]).magnitude,\r\n        )\r\n    },\r\n\r\n    getRotationMatrix: function (m: number[]) {\r\n        const s = m4.getScaleVector(m)\r\n        return [\r\n            m[0] / s.x, m[1] / s.y, m[2] / s.z, 0,\r\n            m[4] / s.x, m[5] / s.y, m[6] / s.z, 0,\r\n            m[8] / s.x, m[9] / s.y, m[10] / s.z, 0,\r\n            0, 0, 0, 1\r\n        ]\r\n    },\r\n\r\n}\r\n\r\n// export default m4\r\nexport { m4 }","import { Vec3 } from \".\"\r\n\r\nexport class Vec2 {\r\n    x: number\r\n    y: number\r\n\r\n    static arrayToVec2Array(a: number[] | Float32Array) {\r\n        let array: Vec2[] = []\r\n        for (let i = 0; i < a.length; i += 2) {\r\n            array.push(new Vec2(\r\n                a[i],\r\n                a[i + 1],\r\n            ))\r\n        }\r\n        return array\r\n    }\r\n\r\n    static vec2ArrayToArray(a: Vec2[]) {\r\n        let array: number[] = []\r\n        for (let vec of a) {\r\n            array.push(vec.x, vec.y)\r\n        }\r\n        return array\r\n    }\r\n\r\n    constructor(x: number, y: number) {\r\n        this.set(x, y)\r\n    }\r\n\r\n    set(x: number, y: number) {\r\n        this.x = x\r\n        this.y = y\r\n    }\r\n\r\n    multiply(scalar: number) {\r\n        return new Vec2(this.x * scalar, this.y * scalar)\r\n    }\r\n\r\n    add(v: Vec2) {\r\n        return new Vec2(\r\n            this.x + v.x,\r\n            this.y + v.y\r\n        )\r\n    }\r\n\r\n    map(f: (value: number) => number) {\r\n        return new Vec2(\r\n            f(this.x),\r\n            f(this.y),\r\n        )\r\n    }\r\n\r\n    multiplyByVector(v: Vec2) {\r\n        return new Vec2(this.x * v.x, this.y * v.y)\r\n    }\r\n\r\n    substract(v: Vec2) {\r\n        return new Vec2(\r\n            this.x - v.x,\r\n            this.y - v.y,\r\n        )\r\n    }\r\n\r\n    get abs() {\r\n        return this.map(v => Math.abs(v))\r\n    }\r\n\r\n    equals(v: Vec2) {\r\n        return this.x == v.x && this.y == v.y\r\n    }\r\n\r\n    toVec3() {\r\n        return new Vec3(this.x, 0, this.y)\r\n    }\r\n}","import { Vec2 } from \".\"\r\n\r\nexport class Vec3 {\r\n    x: number\r\n    y: number\r\n    z: number\r\n\r\n    static get one() {\r\n        return new Vec3(1, 1, 1)\r\n    }\r\n\r\n    static get zero() {\r\n        return new Vec3(0, 0, 0)\r\n    }\r\n\r\n    static get forward() {\r\n        return new Vec3(0, 0, 1)\r\n    }\r\n\r\n    static get backward() {\r\n        return new Vec3(0, 0, -1)\r\n    }\r\n\r\n    static get right() {\r\n        return new Vec3(1, 0, 0)\r\n    }\r\n\r\n    static get left() {\r\n        return new Vec3(-1, 0, 0)\r\n    }\r\n\r\n    static get up() {\r\n        return new Vec3(0, 1, 0)\r\n    }\r\n\r\n    static get down() {\r\n        return new Vec3(0, -1, 0)\r\n    }\r\n\r\n    static arrayToVec3Array(a: number[] | Float32Array | Uint8Array) {\r\n        let array: Vec3[] = []\r\n        for (let i = 0; i < a.length; i += 3) {\r\n            array.push(new Vec3(\r\n                a[i],\r\n                a[i + 1],\r\n                a[i + 2]\r\n            ))\r\n        }\r\n        return array\r\n    }\r\n\r\n    static vec3ArrayToArray(a: Vec3[]) {\r\n        let array: number[] = []\r\n        for (let vec of a) {\r\n            array.push(vec.x, vec.y, vec.z)\r\n        }\r\n        return array\r\n    }\r\n\r\n    constructor(x: number, y: number, z: number) {\r\n        this.set(x, y, z)\r\n    }\r\n\r\n    set(x: number, y: number, z: number) {\r\n        this.x = x\r\n        this.y = y\r\n        this.z = z\r\n    }\r\n\r\n    get copy() {\r\n        return new Vec3(this.x, this.y, this.z)\r\n    }\r\n\r\n    get xInverted() {\r\n        return new Vec3(-this.x, this.y, this.z)\r\n    }\r\n\r\n    get yInverted() {\r\n        return new Vec3(this.x, -this.y, this.z)\r\n    }\r\n\r\n    get zInverted() {\r\n        return new Vec3(this.x, this.y, -this.z)\r\n    }\r\n\r\n    multiply(scalar: number) {\r\n        return new Vec3(this.x * scalar, this.y * scalar, this.z * scalar)\r\n    }\r\n\r\n    multiplyByVector(v: Vec3) {\r\n        return new Vec3(this.x * v.x, this.y * v.y, this.z * v.z)\r\n    }\r\n\r\n    equals(v: Vec3) {\r\n        return this.x == v.x && this.y == v.y && this.z == v.z\r\n    }\r\n\r\n    isGreater(v: Vec3) {\r\n        return this.x >= v.x && this.y >= v.y && this.z >= v.z && (this.x > v.x || this.y > v.y || this.z > v.z)\r\n    }\r\n\r\n    isLess(v: Vec3) {\r\n        return this.x <= v.x && this.y <= v.y && this.z <= v.z && (this.x < v.x || this.y < v.y || this.z < v.z)\r\n    }\r\n\r\n    cross(v: Vec3) {\r\n        return new Vec3(\r\n            this.y * v.z - this.z * v.y,\r\n            this.z * v.x - this.x * v.z,\r\n            this.x * v.y - this.y * v.x,\r\n        )\r\n    }\r\n\r\n    dot(v: Vec3) {\r\n        return this.x * v.x + this.y * v.y + this.z * v.z\r\n    }\r\n\r\n    add(v: Vec3) {\r\n        return new Vec3(\r\n            this.x + v.x,\r\n            this.y + v.y,\r\n            this.z + v.z\r\n        )\r\n    }\r\n\r\n    substract(v: Vec3) {\r\n        return new Vec3(\r\n            this.x - v.x,\r\n            this.y - v.y,\r\n            this.z - v.z\r\n        )\r\n    }\r\n\r\n    distanceTo(v: Vec3) {\r\n        return Math.sqrt(\r\n            (v.x - this.x) ** 2 +\r\n            (v.y - this.y) ** 2 +\r\n            (v.z - this.z) ** 2\r\n        )\r\n    }\r\n\r\n    horizontalDistanceTo(v: Vec3) {\r\n        return this.yZeroed.distanceTo(v.yZeroed)\r\n    }\r\n\r\n    to(v: Vec3) {\r\n        return new Vec3(\r\n            v.x - this.x,\r\n            v.y - this.y,\r\n            v.z - this.z,\r\n        )\r\n    }\r\n\r\n    get inverted() {\r\n        return this.multiply(-1)\r\n    }\r\n\r\n    get normalize() {\r\n        if (this.magnitude != 0) {\r\n            const scale = 1 / this.magnitude\r\n            return this.multiply(scale)\r\n        } else {\r\n            return Vec3.zero\r\n        }\r\n    }\r\n\r\n    get magnitude() {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)\r\n    }\r\n\r\n    transformMat4(m: number[]) {\r\n        var w = m[3] * this.x + m[7] * this.y + m[11] * this.z + m[15]\r\n        w = w || 1.0\r\n        let out = Vec3.zero\r\n        out.x = (m[0] * this.x + m[4] * this.y + m[8] * this.z + m[12]) / w\r\n        out.y = (m[1] * this.x + m[5] * this.y + m[9] * this.z + m[13]) / w\r\n        out.z = (m[2] * this.x + m[6] * this.y + m[10] * this.z + m[14]) / w\r\n        return out\r\n    }\r\n\r\n    clone() {\r\n        return new Vec3(this.x, this.y, this.z)\r\n    }\r\n\r\n    static fromAngle(angle: number) {\r\n        angle = angle + 3 * Math.PI / 2\r\n        return new Vec3(Math.cos(angle), 0, Math.sin(angle))\r\n    }\r\n\r\n    map(f: (value: number) => number) {\r\n        return new Vec3(\r\n            f(this.x),\r\n            f(this.y),\r\n            f(this.z),\r\n        )\r\n    }\r\n\r\n    get yZeroed() {\r\n        return new Vec3(\r\n            this.x,\r\n            0,\r\n            this.z,\r\n        )\r\n    }\r\n\r\n    get abs() {\r\n        return this.map(v => Math.abs(v))\r\n    }\r\n\r\n    get minusOneOrZeroOrOne() {\r\n        return this.map(v => {\r\n            if (v > 0) return 1\r\n            if (v < 0) return -1\r\n            return 0\r\n        })\r\n    }\r\n\r\n    toVec2() {\r\n        return new Vec2(this.x, this.z)\r\n    }\r\n}","import { Vec3 } from '.'\r\nimport { m4 } from '.'\r\n\r\nexport class Transform {\r\n    position = Vec3.zero\r\n    rotation = Vec3.zero\r\n    scale = Vec3.one\r\n    originTranslation = Vec3.zero\r\n\r\n    reset() {\r\n        this.position = Vec3.zero\r\n        this.rotation = Vec3.zero\r\n        this.scale = Vec3.one\r\n    }\r\n\r\n    get matrix() {\r\n        let matrix = m4.identity\r\n\r\n        matrix = m4.scale(matrix, this.scale);\r\n\r\n        matrix = m4.xRotate(matrix, this.rotation.x);\r\n        matrix = m4.yRotate(matrix, this.rotation.y);\r\n        matrix = m4.zRotate(matrix, this.rotation.z);\r\n\r\n        const position = this.position.add(this.originTranslation)\r\n        matrix = m4.translate(matrix, position);\r\n\r\n        return matrix\r\n    }\r\n\r\n    clone() {\r\n        const transform = new Transform()\r\n        transform.position = this.position.clone()\r\n        transform.rotation = this.rotation.clone()\r\n        transform.scale = this.scale.clone()\r\n        return transform\r\n    }\r\n}","import { m4, Vec3, Transform } from '../../utils'\r\nimport { Program, ProgramInfo } from '../../programs/Program'\r\nimport { GridBoundingBox } from './GridBoundingBox'\r\nimport { CuboidBoundingBox } from './CuboidBoundingBox'\r\n\r\nexport default abstract class Shape {\r\n    importedTexture: string\r\n    webglTexture: WebGLTexture\r\n    protected readonly gl: WebGLRenderingContext\r\n    protected positionBuffer: WebGLBuffer\r\n    protected colorBuffer: WebGLBuffer\r\n    protected texcoordsBuffer: WebGLBuffer\r\n    protected VERTICES: Float32Array\r\n    protected COLORS: Uint8Array\r\n    protected TEXCOORDS: Float32Array\r\n    protected initialTexcoords: Float32Array\r\n    private firstBufferReady = false\r\n    transform = new Transform()\r\n    initialTransform: Transform\r\n    program: Program\r\n    bb: GridBoundingBox | CuboidBoundingBox = null\r\n\r\n    constructor(gl: WebGLRenderingContext, program: Program) {\r\n        this.gl = gl\r\n        this.program = program\r\n        setTimeout(() => {\r\n            this.updateBuffers()\r\n        })\r\n    }\r\n\r\n    get verticesTransformed() {\r\n        return this.verticesVec3Array.map(vec => {\r\n            let a = m4.identity\r\n            a = m4.translate(a, vec.multiplyByVector(this.transform.scale))\r\n            a = m4.rotate(a, this.transform.rotation)\r\n            a = m4.translate(this.transform.matrix, m4.getPositionVector(a))\r\n            return m4.getPositionVector(a)\r\n        })\r\n    }\r\n\r\n    get verticesCount() {\r\n        return this.VERTICES.length / 3\r\n    }\r\n\r\n    get verticesVec3Array() {\r\n        return Vec3.arrayToVec3Array(this.VERTICES)\r\n    }\r\n\r\n    get xVertices() {\r\n        return this.VERTICES.filter((_, index) => index % 3 == 0)\r\n    }\r\n\r\n    get yVertices() {\r\n        return this.VERTICES.filter((_, index) => index % 3 == 1)\r\n    }\r\n\r\n    get zVertices() {\r\n        return this.VERTICES.filter((_, index) => index % 3 == 2)\r\n    }\r\n\r\n    get size() {\r\n        return new Vec3(\r\n            (Math.max(...this.xVertices) - Math.min(...this.xVertices)) * this.transform.scale.x,\r\n            (Math.max(...this.yVertices) - Math.min(...this.yVertices)) * this.transform.scale.y,\r\n            (Math.max(...this.zVertices) - Math.min(...this.zVertices)) * this.transform.scale.z,\r\n        )\r\n    }\r\n\r\n    get sizeRotated() {\r\n        if (!this.transform.rotation.y) return this.size\r\n        const rotationMatrix = m4.yRotation(this.transform.rotation.y)\r\n        return this.size.transformMat4(rotationMatrix).abs\r\n    }\r\n\r\n    get halfSize() {\r\n        return this.size.multiply(0.5)\r\n    }\r\n\r\n    get halfSizeRotated() {\r\n        return this.sizeRotated.multiply(0.5)\r\n    }\r\n\r\n    texturedWidth = 1\r\n    get texturedSize() {\r\n        return this.size.multiplyByVector(Vec3.right.multiply(this.texturedWidth))\r\n    }\r\n\r\n    setInitialState() {\r\n        this.initialTransform = this.transform.clone()\r\n        this.initialTexcoords = this.TEXCOORDS.slice(0)\r\n        this.onCreation()\r\n        this.updateBuffers()\r\n    }\r\n\r\n    onCreation() { }\r\n\r\n    updateBuffers() {\r\n        if (!this.firstBufferReady) {\r\n            this.setPositionBuffer()\r\n            this.setColorBuffer()\r\n        }\r\n        if (this.TEXCOORDS) {\r\n            this.setTexcoordsBuffer()\r\n        }\r\n        this.firstBufferReady = true\r\n    }\r\n\r\n    bindGeometry(positionLocation: number) {\r\n        this.gl.enableVertexAttribArray(positionLocation);\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.positionBuffer);\r\n        const size = 3;\r\n        const type = this.gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        this.gl.vertexAttribPointer(positionLocation, size, type, normalize, stride, offset);\r\n    }\r\n\r\n    bindColors(colorLocation: number) {\r\n        // Turn on the color attribute\r\n        this.gl.enableVertexAttribArray(colorLocation);\r\n\r\n        // Bind the color buffer.\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.colorBuffer);\r\n\r\n        // Tell the attribute how to get data out of colorBuffer (ARRAY_BUFFER)\r\n        const size = 3;                 // 3 components per iteration\r\n        const type = this.gl.UNSIGNED_BYTE;  // the data is 8bit unsigned values\r\n        const normalize = true;         // normalize the data (convert from 0-255 to 0-1)\r\n        const stride = 0;               // 0 = move forward size * sizeof(type) each iteration to get the next position\r\n        const offset = 0;               // start at the beginning of the buffer\r\n        this.gl.vertexAttribPointer(colorLocation, size, type, normalize, stride, offset);\r\n    }\r\n\r\n    bindTexture(texcoordsLocation: number) {\r\n        // Turn on the color attribute\r\n        this.gl.enableVertexAttribArray(texcoordsLocation);\r\n\r\n        // Bind the color buffer.\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.texcoordsBuffer);\r\n\r\n        // Tell the attribute how to get data out of colorBuffer (ARRAY_BUFFER)\r\n        const size = 2;                 // 2 components per iteration\r\n        const type = this.gl.FLOAT;  // the data is 8bit unsigned values\r\n        const normalize = false;         // normalize the data (convert from 0-255 to 0-1)\r\n        const stride = 0;               // 0 = move forward size * sizeof(type) each iteration to get the next position\r\n        const offset = 0;               // start at the beginning of the buffer\r\n        this.gl.vertexAttribPointer(texcoordsLocation, size, type, normalize, stride, offset);\r\n    }\r\n\r\n    bindTransform(matrixLocation: WebGLUniformLocation, viewProjectionMatrix: number[]) {\r\n        let matrix = this.transform.matrix\r\n        matrix = m4.multiply(matrix, viewProjectionMatrix);\r\n\r\n        // Set the matrix.\r\n        this.gl.uniformMatrix4fv(matrixLocation, false, matrix);\r\n    }\r\n\r\n    draw(viewProjectionMatrix: number[]) {\r\n        if (!this.firstBufferReady) return\r\n        this.program.use()\r\n        this.bindGeometry(this.program.info.attributes.position)\r\n        if (this.program.info.attributes.color) {\r\n            this.bindColors(this.program.info.attributes.color)\r\n        }\r\n        if (this.program.info.attributes.texcoord) {\r\n            this.bindTexture(this.program.info.attributes.texcoord)\r\n        }\r\n        this.bindTransform(this.program.info.uniforms.matrix, viewProjectionMatrix)\r\n\r\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.webglTexture);\r\n\r\n        this._draw()\r\n    }\r\n\r\n    private _draw() {\r\n        const primitiveType = this.gl.TRIANGLES;\r\n        const offset = 0;\r\n        const count = this.verticesCount;\r\n        this.gl.drawArrays(primitiveType, offset, count);\r\n    }\r\n\r\n    private setPositionBuffer() {\r\n        this.positionBuffer = this.gl.createBuffer();\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.positionBuffer);\r\n        this.gl.bufferData(\r\n            this.gl.ARRAY_BUFFER,\r\n            this.VERTICES,\r\n            this.gl.STATIC_DRAW\r\n        );\r\n    }\r\n\r\n    private setColorBuffer() {\r\n        this.colorBuffer = this.gl.createBuffer();\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.colorBuffer);\r\n        this.gl.bufferData(\r\n            this.gl.ARRAY_BUFFER,\r\n            this.COLORS,\r\n            this.gl.STATIC_DRAW\r\n        );\r\n    }\r\n\r\n    private setTexcoordsBuffer() {\r\n        this.texcoordsBuffer = this.gl.createBuffer();\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.texcoordsBuffer);\r\n        this.gl.bufferData(\r\n            this.gl.ARRAY_BUFFER,\r\n            this.TEXCOORDS,\r\n            this.gl.STATIC_DRAW\r\n        );\r\n    }\r\n}","import Shape from \"./Shape\";\r\nimport { log, m4, Transform, Vec3 } from \"../../utils\";\r\n\r\nexport class CuboidBoundingBox {\r\n    readonly shape: Shape\r\n    readonly transform: Transform\r\n\r\n    constructor(shape: Shape) {\r\n        this.shape = shape\r\n        this.transform = shape.transform\r\n    }\r\n\r\n    get vertices() {\r\n        return this.shape.verticesTransformed\r\n    }\r\n\r\n    get size() {\r\n        return this.shape.size\r\n    }\r\n\r\n    get sizeRotated() {\r\n        return this.shape.sizeRotated\r\n    }\r\n\r\n    get halfSize() {\r\n        return this.shape.halfSize\r\n    }\r\n\r\n    get halfSizeRotated() {\r\n        return this.shape.halfSizeRotated\r\n    }\r\n\r\n    get negativeCorner() {\r\n        return this.transform.position.substract(this.halfSize)\r\n    }\r\n\r\n    get negativeCornerRotated() {\r\n        return this.transform.position.substract(this.halfSizeRotated)\r\n    }\r\n\r\n    get positiveCorner() {\r\n        return this.transform.position.add(this.halfSize)\r\n    }\r\n\r\n    get positiveCornerRotated() {\r\n        return this.transform.position.add(this.halfSizeRotated)\r\n    }\r\n\r\n    isColliding(v: Vec3) {\r\n        const pos = this.positiveCornerRotated\r\n        const neg = this.negativeCornerRotated\r\n        return neg.x <= v.x && v.x <= pos.x && neg.z <= v.z && v.z <= pos.z\r\n    }\r\n\r\n    pointSide(v: Vec3) {\r\n        const diff = this.transform.position.substract(v)\r\n        // const rotationMatrix = m4.yRotation(this.transform.rotation.y)\r\n        // const diffRotated = diff.transformMat4(rotationMatrix)\r\n        const diffRotated = diff\r\n\r\n        let pointSide = Vec3.zero\r\n        if (diffRotated.x > this.halfSizeRotated.x) {\r\n            pointSide.x = -1\r\n        }\r\n        if (diffRotated.x < -this.halfSizeRotated.x) {\r\n            pointSide.x = 1\r\n        }\r\n        if (diffRotated.z > this.halfSizeRotated.z) {\r\n            pointSide.z = -1\r\n        }\r\n        if (diffRotated.z < -this.halfSizeRotated.z) {\r\n            pointSide.z = 1\r\n        }\r\n        return pointSide\r\n    }\r\n\r\n    nearestDistanceDirection(v: Vec3) {\r\n        const side = this.pointSide(v)\r\n        if (side.x && side.z) {\r\n            return v.substract(this.nearestCorner(v)).yZeroed.normalize\r\n        } else {\r\n            return side\r\n        }\r\n    }\r\n\r\n    pointSideRotated(v: Vec3) {\r\n        const pointSide = this.pointSide(v)\r\n        const rotationMatrix = m4.yRotation(-this.transform.rotation.y)\r\n        return pointSide.transformMat4(rotationMatrix)\r\n    }\r\n    pointFarthestSideRotated(v: Vec3) {\r\n        const pointSide = this.pointFarthestSide(v)\r\n        const rotationMatrix = m4.yRotation(-this.transform.rotation.y)\r\n        return pointSide.transformMat4(rotationMatrix)\r\n    }\r\n\r\n    // only a non rotated cuboid\r\n    pointFarthestSide(v: Vec3) {\r\n        const diff = this.transform.position.substract(v)\r\n        const rotationMatrix = m4.yRotation(this.transform.rotation.y)\r\n        const diffRotated = diff.transformMat4(rotationMatrix)\r\n        let pointSide = this.pointSide(v)\r\n        if (pointSide.x && pointSide.z) {\r\n            if (Math.abs(diffRotated.x) > Math.abs(diffRotated.z)) {\r\n                pointSide.z = 0\r\n            } else {\r\n                pointSide.x = 0\r\n            }\r\n        }\r\n        return pointSide\r\n    }\r\n\r\n    // cuboid rotated by any value\r\n    nearestCorner(v: Vec3) {\r\n        const diff = this.transform.position.substract(v)\r\n        if (diff.x <= 0 && diff.z <= 0) {\r\n            return this.transform.position.substract(this.halfSizeRotated)\r\n        } else if (diff.x <= 0 && diff.z >= 0) {\r\n            const cornerRelative = new Vec3(-this.halfSizeRotated.x, 0, this.halfSizeRotated.z)\r\n            return this.transform.position.substract(cornerRelative)\r\n        } else if (diff.x >= 0 && diff.z <= 0) {\r\n            const cornerRelative = new Vec3(this.halfSizeRotated.x, 0, -this.halfSizeRotated.z)\r\n            return this.transform.position.substract(cornerRelative)\r\n        } else if (diff.x >= 0 && diff.z >= 0) {\r\n            return this.transform.position.add(this.halfSizeRotated)\r\n        }\r\n    }\r\n\r\n    basePointsYZeroed() {\r\n        const a = this.halfSizeRotated.yZeroed\r\n        return [\r\n            this.transform.position.add(a),\r\n            this.transform.position.add(a.xInverted),\r\n            this.transform.position.add(a.yInverted),\r\n            this.transform.position.substract(a),\r\n        ]\r\n    }\r\n}","import Shape from './Shape'\r\nimport { CuboidBoundingBox } from './CuboidBoundingBox'\r\nimport { Vec2 } from '../../utils'\r\n\r\nexport default abstract class Cuboid extends Shape {\r\n    VERTICES = new Float32Array([\r\n        // front    \r\n        -0.5, -0.5, 0.5,\r\n        0.5, 0.5, 0.5,\r\n        -0.5, 0.5, 0.5,\r\n        -0.5, -0.5, 0.5,\r\n        0.5, -0.5, 0.5,\r\n        0.5, 0.5, 0.5,\r\n\r\n        // back    \r\n        -0.5, -0.5, -0.5,\r\n        -0.5, 0.5, -0.5,\r\n        0.5, 0.5, -0.5,\r\n        -0.5, -0.5, -0.5,\r\n        0.5, 0.5, -0.5,\r\n        0.5, -0.5, -0.5,\r\n\r\n        // left    \r\n        -0.5, -0.5, -0.5,\r\n        -0.5, -0.5, 0.5,\r\n        -0.5, 0.5, 0.5,\r\n        -0.5, -0.5, -0.5,\r\n        -0.5, 0.5, 0.5,\r\n        -0.5, 0.5, -0.5,\r\n\r\n        // right    \r\n        0.5, -0.5, -0.5,\r\n        0.5, 0.5, 0.5,\r\n        0.5, -0.5, 0.5,\r\n        0.5, -0.5, -0.5,\r\n        0.5, 0.5, -0.5,\r\n        0.5, 0.5, 0.5,\r\n\r\n        // top    \r\n        -0.5, 0.5, -0.5,\r\n        0.5, 0.5, 0.5,\r\n        0.5, 0.5, -0.5,\r\n        -0.5, 0.5, 0.5,\r\n        0.5, 0.5, 0.5,\r\n        -0.5, 0.5, -0.5,\r\n\r\n        // bottom    \r\n        0.5, -0.5, -0.5,\r\n        0.5, -0.5, 0.5,\r\n        -0.5, -0.5, -0.5,\r\n        -0.5, -0.5, -0.5,\r\n        0.5, -0.5, 0.5,\r\n        -0.5, -0.5, 0.5,\r\n    ])\r\n\r\n    COLORS = new Uint8Array([\r\n        80, 70, 200,\r\n        80, 70, 200,\r\n        80, 70, 200,\r\n        80, 70, 200,\r\n        80, 70, 200,\r\n        80, 70, 200,\r\n\r\n        200, 70, 0.520,\r\n        200, 70, 0.520,\r\n        200, 70, 0.520,\r\n        200, 70, 0.520,\r\n        200, 70, 0.520,\r\n        200, 70, 0.520,\r\n\r\n        70, 200, 20.50,\r\n        70, 200, 20.50,\r\n        70, 200, 20.50,\r\n        70, 200, 20.50,\r\n        70, 200, 20.50,\r\n        70, 200, 20.50,\r\n\r\n        200, 200, 70,\r\n        200, 200, 70,\r\n        200, 200, 70,\r\n        200, 200, 70,\r\n        200, 200, 70,\r\n        200, 200, 70,\r\n\r\n        20.50, 0.500, 70,\r\n        20.50, 0.500, 70,\r\n        20.50, 0.500, 70,\r\n        20.50, 0.500, 70,\r\n        20.50, 0.500, 70,\r\n        20.50, 0.500, 70,\r\n\r\n        20.50, 0.560, 70,\r\n        20.50, 0.560, 70,\r\n        20.50, 0.560, 70,\r\n        20.50, 0.560, 70,\r\n        20.50, 0.560, 70,\r\n        20.50, 0.560, 70,\r\n    ])\r\n\r\n    TEXCOORDS = new Float32Array([\r\n        // front\r\n        0, 1,\r\n        1, 0,\r\n        0, 0,\r\n        0, 1,\r\n        1, 1,\r\n        1, 0,\r\n\r\n        // back\r\n        1, 1,\r\n        1, 0,\r\n        0, 0,\r\n        1, 1,\r\n        0, 0,\r\n        0, 1,\r\n\r\n        // left\r\n        0, 1,\r\n        1, 1,\r\n        1, 0,\r\n        0, 1,\r\n        1, 0,\r\n        0, 0,\r\n\r\n        // right\r\n        1, 1,\r\n        0, 0,\r\n        0, 1,\r\n        1, 1,\r\n        1, 0,\r\n        0, 0,\r\n\r\n\r\n        // top\r\n        0, 0,\r\n        1, 1,\r\n        1, 0,\r\n        0, 1,\r\n        1, 1,\r\n        0, 0,\r\n\r\n        // bottom\r\n        1, 1,\r\n        1, 0,\r\n        0, 1,\r\n        0, 1,\r\n        1, 0,\r\n        0, 0,\r\n    ])\r\n\r\n    readonly bb: CuboidBoundingBox = new CuboidBoundingBox(this)\r\n    readonly defaultColors = this.COLORS\r\n\r\n    abstract lightTexture: number\r\n    abstract darkTexture: number\r\n\r\n    onCreation() {\r\n        this.setTexture(0)\r\n    }\r\n\r\n    setColor(wall: number, color: number[]) {\r\n        this.COLORS = new Uint8Array([\r\n            ...this.COLORS.slice(0, 3 * 6 * wall),\r\n            color[0], color[1], color[2],\r\n            color[0], color[1], color[2],\r\n            color[0], color[1], color[2],\r\n            color[0], color[1], color[2],\r\n            color[0], color[1], color[2],\r\n            color[0], color[1], color[2],\r\n            ...this.COLORS.slice(3 * 6 * (wall + 1))])\r\n    }\r\n\r\n    wallTexcoords(wall: number) {\r\n        return this.TEXCOORDS.slice(2 * 6 * wall, 2 * 6 * (wall + 1))\r\n    }\r\n\r\n    initialWallTexcoords(wall: number) {\r\n        return this.initialTexcoords.slice(2 * 6 * wall, 2 * 6 * (wall + 1))\r\n    }\r\n\r\n    resetColor() {\r\n        this.COLORS = this.defaultColors\r\n    }\r\n\r\n    texturesInLine = 1\r\n    get textureSize() {\r\n        return 1 / this.texturesInLine\r\n    }\r\n\r\n    setTexture(textureNumber: number, wallNumber?: number) {\r\n        let newTexcoords = []\r\n        if (wallNumber !== undefined) {\r\n            for (let i = 0; i < 6; i++) {\r\n                if (i == wallNumber) {\r\n                    newTexcoords.push(...this.setTexcoordsToTexture(textureNumber, this.initialWallTexcoords(wallNumber)))\r\n                } else {\r\n                    newTexcoords.push(...this.wallTexcoords(i))\r\n                }\r\n            }\r\n        } else {\r\n            newTexcoords = [...this.setTexcoordsToTexture(textureNumber, this.initialTexcoords)]\r\n        }\r\n        this.TEXCOORDS = new Float32Array(newTexcoords)\r\n    }\r\n\r\n    private setTexcoordsToTexture(textureNumber: number, texcoords: Float32Array) {\r\n        let verticesVec2Array = Vec2.arrayToVec2Array(texcoords)\r\n        const texturePos = new Vec2(textureNumber % this.texturesInLine, Math.floor(textureNumber / this.texturesInLine)).multiply(this.textureSize)\r\n        verticesVec2Array = verticesVec2Array.map(vertex => vertex.multiply(this.textureSize).add(texturePos))\r\n        return Vec2.vec2ArrayToArray(verticesVec2Array)\r\n    }\r\n}","export default {\r\n    gridSize: 64,\r\n    uiScale: 2,\r\n    debug: false,\r\n    soundVolume: 0.1,\r\n    musicVolume: 0.03,\r\n}","import Config from \"./Config\"\r\n\r\nexport default class BetterAudio {\r\n    audio: HTMLAudioElement\r\n    private playLoading = false\r\n    private playPromise: Promise<void>\r\n    name\r\n\r\n    constructor(sound: string, volume?: number) {\r\n        this.audio = new Audio(sound)\r\n        this.name = sound\r\n        this.audio.volume = volume || Config.soundVolume\r\n    }\r\n\r\n    play() {\r\n        this.audio.currentTime = 0\r\n        this.playLoading = true\r\n        this.playPromise = this.audio.play()\r\n        this.playPromise.then(() => this.playLoading = false)\r\n    }\r\n\r\n    playIfNotPlayed() {\r\n        // const isPlaying = this.audio.currentTime > 0 && !this.audio.paused && !this.audio.ended && this.audio.readyState > this.audio.HAVE_CURRENT_DATA;\r\n\r\n        // if (!isPlaying) {\r\n        //     this.audio.currentTime = 0\r\n        //     this.audio.play();\r\n        // }\r\n        if (this.audio.currentTime == 0) {\r\n            this.playLoading = true\r\n            this.playPromise = this.audio.play()\r\n            this.playPromise.then(() => this.playLoading = false)\r\n        }\r\n    }\r\n\r\n    pause() {\r\n        if (this.playLoading) {\r\n            this.playPromise.then(() => this.audio.pause())\r\n        } else {\r\n            this.audio.pause();\r\n        }\r\n    }\r\n\r\n    loop() {\r\n        this.audio.loop = true\r\n    }\r\n}","import { log, m4, Vec3 } from '../../utils'\r\nimport Cuboid from './Cuboid'\r\nimport Interactable from './Interactable'\r\nimport texture from '../../../textures/wall.png'\r\nimport Config from '../../Config'\r\nimport { Program } from '../../programs/Program'\r\nimport Camera from '../../Camera'\r\nimport Enemy from './Enemy'\r\nimport openAudio from \"../../../sounds/WSND0003.wav\"\r\nimport closeAudio from \"../../../sounds/WSND0002.wav\"\r\nimport BetterAudio from '../../BetterAudio'\r\n\r\nexport default class Door extends Cuboid implements Interactable {\r\n    importedTexture = texture\r\n    openAudio = new BetterAudio(openAudio)\r\n    closeAudio = new BetterAudio(closeAudio)\r\n\r\n    get lightTexture() {\r\n        switch (this.type) {\r\n            case 'exitDoor': return 119\r\n            default: return 104\r\n        }\r\n    }\r\n    get lightSideTexture() {\r\n        switch (this.type) {\r\n            case 'exitDoor': return 119\r\n            default: return 108\r\n        }\r\n    }\r\n    get darkTexture() {\r\n        switch (this.type) {\r\n            case 'exitDoor': return 119\r\n            default: return 105\r\n        }\r\n    }\r\n    get darkSideTexture() {\r\n        switch (this.type) {\r\n            case 'exitDoor': return 119\r\n            default: return 109\r\n        }\r\n    }\r\n\r\n    private opening = false\r\n    private closing = false\r\n\r\n    private readonly openingSpeed = Config.gridSize\r\n    private readonly openingLength = Config.gridSize\r\n\r\n    private readonly hiddenInWallScaleCorrection = new Vec3(0.1, 0.1, 0)\r\n    // private readonly hiddenInWallScaleCorrection = new Vec3(10, 10, 0)\r\n\r\n    private positionFinal: Vec3\r\n\r\n    texturesInLine = 16\r\n\r\n    TEXCOORDS = new Float32Array([\r\n        // front\r\n        0, 1,\r\n        1, 0,\r\n        0, 0,\r\n        0, 1,\r\n        1, 1,\r\n        1, 0,\r\n\r\n        // back\r\n        0, 1,\r\n        0, 0,\r\n        1, 0,\r\n        0, 1,\r\n        1, 0,\r\n        1, 1,\r\n\r\n        // left\r\n        0, 1,\r\n        1, 1,\r\n        1, 0,\r\n        0, 1,\r\n        1, 0,\r\n        0, 0,\r\n\r\n        // right\r\n        1, 1,\r\n        0, 0,\r\n        0, 1,\r\n        1, 1,\r\n        1, 0,\r\n        0, 0,\r\n\r\n\r\n        // top\r\n        0, 0,\r\n        1, 1,\r\n        1, 0,\r\n        0, 1,\r\n        1, 1,\r\n        0, 0,\r\n\r\n        // bottom\r\n        1, 1,\r\n        1, 0,\r\n        0, 1,\r\n        0, 1,\r\n        1, 0,\r\n        0, 0,\r\n    ])\r\n    type: string\r\n    constructor(gl: WebGLRenderingContext, program: Program, type?: string) {\r\n        super(gl, program)\r\n        this.transform.scale = new Vec3(Config.gridSize, Config.gridSize, Config.gridSize * 6 / 64)\r\n        this.type = type\r\n    }\r\n\r\n    onCreation() {\r\n        const translationFinal = new Vec3(this.openingLength, 0, 0)\r\n        let mFinal = m4.identity\r\n        mFinal = m4.translate(mFinal, translationFinal)\r\n        mFinal = m4.yRotate(mFinal, this.transform.rotation.y)\r\n        const positionDeltaFinal = m4.getPositionVector(mFinal)\r\n        this.positionFinal = this.initialTransform.position.add(positionDeltaFinal)\r\n        if (this.transform.rotation.y) {\r\n            this.setTexture(this.darkTexture)\r\n            this.setTexture(this.lightSideTexture, 2)\r\n            this.setTexture(this.lightSideTexture, 3)\r\n        } else {\r\n            this.setTexture(this.lightTexture)\r\n            this.setTexture(this.darkSideTexture, 2)\r\n            this.setTexture(this.darkSideTexture, 3)\r\n        }\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        const translation = new Vec3(this.openingSpeed * deltaTime, 0, 0)\r\n        let m = m4.identity\r\n        m = m4.translate(m, translation)\r\n        m = m4.yRotate(m, this.transform.rotation.y)\r\n        const positionDelta = m4.getPositionVector(m)\r\n\r\n        if (this.opening) {\r\n            if (this.transform.position.equals(this.positionFinal)) {\r\n                this.opening = false\r\n                if (this.initialTransform.scale.equals(this.transform.scale)) {\r\n                    this.transform.scale = this.transform.scale.substract(this.hiddenInWallScaleCorrection)\r\n                }\r\n            } else {\r\n                if (this.positionFinal.substract(this.transform.position).isLess(positionDelta)) {\r\n                    this.transform.position = this.positionFinal.clone()\r\n                } else {\r\n                    this.transform.position = this.transform.position.add(positionDelta)\r\n                }\r\n            }\r\n        } else if (this.closing) {\r\n            if (this.transform.position.equals(this.initialTransform.position)) {\r\n                this.closing = false\r\n            } else {\r\n                if (this.transform.position.substract(this.initialTransform.position).isLess(positionDelta)) {\r\n                    this.transform.position = this.initialTransform.position.clone()\r\n                } else {\r\n                    this.transform.position = this.transform.position.substract(positionDelta)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get closed() {\r\n        return this.transform.position.equals(this.initialTransform.position)\r\n    }\r\n\r\n    get opened() {\r\n        return this.transform.position.equals(this.positionFinal)\r\n    }\r\n\r\n    toggle() {\r\n        if (this.closed) {\r\n            this.closing = false\r\n            this.opening = true\r\n            this.openAudio.play()\r\n        } else if (this.opened) {\r\n            if (this.transform.scale.add(this.hiddenInWallScaleCorrection).equals(this.initialTransform.scale)) {\r\n                this.transform.scale = this.transform.scale.add(this.hiddenInWallScaleCorrection)\r\n            }\r\n            this.opening = false\r\n            this.closing = true\r\n            this.closeAudio.play()\r\n        }\r\n    }\r\n\r\n    get canInteract() {\r\n        return this.closed\r\n    }\r\n\r\n    tryToClose(deltaTime: number, camera: Camera, enemies: Enemy[]) {\r\n        const nothingCollides = [camera, ...enemies].every(obj => obj.transform.position.yZeroed.distanceTo(this.initialTransform.position.yZeroed) > Config.gridSize * 2)\r\n        if (nothingCollides && this.opened) {\r\n            this.toggle()\r\n        }\r\n    }\r\n}","import menuUnselected from '../../../textures/menuUnselected.png'\r\nimport menuSelected from '../../../textures/menuSelected.png'\r\nimport menuSelectedBlink from '../../../textures/menuSelectedBlink.png'\r\nimport Config from '../../Config'\r\nimport { Vec2 } from '../../utils'\r\nimport BetterAudio from '../../BetterAudio'\r\nimport audioMove from '../../../sounds/M_MOVE.wav'\r\nimport audioSelect from '../../../sounds/M_SELECT.wav'\r\nimport audioBack from '../../../sounds/M_BACK.wav'\r\nimport UI from './UI'\r\n\r\nexport default class Menu {\r\n    canvas: HTMLCanvasElement\r\n    private ctx: CanvasRenderingContext2D\r\n    private menuUnselected: HTMLImageElement\r\n    private menuSelected: HTMLImageElement\r\n    private menuSelectedBlink: HTMLImageElement\r\n    audioSelect = new BetterAudio(audioSelect)\r\n    audioMove = new BetterAudio(audioMove)\r\n    audioBack = new BetterAudio(audioBack)\r\n    option = 0\r\n\r\n    constructor() {\r\n        this.canvas = document.createElement('canvas')\r\n        this.ctx = this.canvas.getContext('2d')\r\n\r\n        this.canvas.width = 640\r\n        this.canvas.height = 400\r\n        console.log('created')\r\n\r\n        this.menuUnselected = new Image();\r\n        this.menuUnselected.src = menuUnselected;\r\n\r\n        this.menuSelected = new Image();\r\n        this.menuSelected.src = menuSelected;\r\n\r\n        this.menuSelectedBlink = new Image();\r\n        this.menuSelectedBlink.src = menuSelectedBlink;\r\n\r\n        addEventListener(\"keydown\", e => {\r\n            if (UI.instance.state == \"menu\") {\r\n                if (e.code == \"ArrowDown\" || e.code == \"ArrowUp\") {\r\n                    if (this.option == 0) {\r\n                        this.option = 8\r\n                    } else {\r\n                        this.option = 0\r\n                    }\r\n                    this.audioMove.play()\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    private timeSinceLastBlink = 0\r\n    private timeSinceBlinkStart = 0\r\n    private readonly blinkInterval = 1\r\n    private readonly blinkDuration = 0.1\r\n\r\n    private readonly optionSize = new Vec2(300, 26)\r\n\r\n    update(deltaTime: number) {\r\n        this.ctx.drawImage(this.menuUnselected, 0, 0)\r\n\r\n        let image = this.menuSelected\r\n        this.timeSinceLastBlink += deltaTime\r\n        if (this.timeSinceLastBlink >= this.blinkInterval) {\r\n            image = this.menuSelectedBlink\r\n        }\r\n        if (image == this.menuSelectedBlink) {\r\n            this.timeSinceBlinkStart += deltaTime\r\n            if (this.timeSinceBlinkStart >= this.blinkDuration) {\r\n                this.timeSinceLastBlink = 0\r\n                this.timeSinceBlinkStart = 0\r\n            }\r\n        }\r\n\r\n\r\n        this.ctx.drawImage(\r\n            image,\r\n            150,\r\n            108 + this.option * this.optionSize.y,\r\n            this.optionSize.x,\r\n            this.optionSize.y,\r\n            150,\r\n            108 + this.option * this.optionSize.y,\r\n            this.optionSize.x,\r\n            this.optionSize.y\r\n        )\r\n    }\r\n}","import levelEnd from '../../../textures/levelEnd.png'\r\nimport uiElements from '../../../textures/uiElements.png'\r\nimport font from '../../../textures/font.png'\r\nimport Config from '../../Config'\r\nimport { Vec2 } from '../../utils'\r\nimport UI from './UI'\r\n\r\nexport default class LevelEnd {\r\n    canvas: HTMLCanvasElement\r\n    private ctx: CanvasRenderingContext2D\r\n    private levelEnd: HTMLImageElement\r\n    private uiElements: HTMLImageElement\r\n    private font: HTMLImageElement\r\n\r\n    private displayTime = ''\r\n    private bonusScore = 0\r\n    private animation = 0\r\n\r\n    enemiesRatio: string = '0'\r\n    secretsRatio: string = '0'\r\n    treasuresRatio: string = '0'\r\n\r\n    constructor() {\r\n        this.canvas = document.createElement('canvas')\r\n\r\n        this.ctx = this.canvas.getContext('2d')\r\n        this.ctx.imageSmoothingEnabled = false;\r\n\r\n        this.canvas.width = 320\r\n        this.canvas.height = 200\r\n\r\n        this.levelEnd = new Image();\r\n        this.levelEnd.src = levelEnd;\r\n\r\n        this.uiElements = new Image();\r\n        this.uiElements.src = uiElements;\r\n\r\n        this.font = new Image();\r\n        this.font.src = font;\r\n\r\n        setInterval(() => {\r\n            this.animation = this.animation ? 0 : 1\r\n        }, 500)\r\n    }\r\n\r\n    calculateValues() {\r\n        UI.instance.endTime = new Date()\r\n        const timeDiff = new Date(UI.instance.endTime.getTime() - UI.instance.startTime.getTime())\r\n        this.displayTime = timeDiff.toTimeString().substring(3, 8)\r\n        const playTimeSeconds = 90 - Math.floor(timeDiff.getTime() / 1000)\r\n        this.bonusScore = playTimeSeconds * 500\r\n\r\n        this.enemiesRatio = (Math.floor(UI.instance.enemiesKilled / UI.instance.enemiesCount * 100)).toString()\r\n        this.secretsRatio = (Math.floor(UI.instance.secretsFound / UI.instance.secretsCount * 100)).toString()\r\n        this.treasuresRatio = (Math.floor(UI.instance.treasuresFound / UI.instance.treasuresCount * 100)).toString()\r\n\r\n        for (let ratio of [this.enemiesRatio, this.secretsRatio, this.treasuresRatio]) {\r\n            if (ratio == '100') {\r\n                this.bonusScore += 10000\r\n            }\r\n        }\r\n        UI.instance.score += this.bonusScore\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        this.ctx.drawImage(this.levelEnd, 0, 0)\r\n        this.ctx.drawImage(this.uiElements, 81 * this.animation, 60, 81, 87, 20, 16, 81, 87)\r\n        this.drawTime()\r\n        this.drawBonusScore()\r\n        this.drawRatios()\r\n    }\r\n\r\n    drawTime() {\r\n        this.drawDigit(parseInt(this.displayTime[0]), 208 + 16 * 0, 80)\r\n        this.drawDigit(parseInt(this.displayTime[1]), 208 + 16 * 1, 80)\r\n        this.drawDigit(parseInt(this.displayTime[3]), 208 + 8 + 16 * 2, 80)\r\n        this.drawDigit(parseInt(this.displayTime[4]), 208 + 8 + 16 * 3, 80)\r\n    }\r\n\r\n    drawBonusScore() {\r\n        this.drawDigit(parseInt(this.bonusScore.toString()[0]), 208 + 16 * 0, 56)\r\n        this.drawDigit(parseInt(this.bonusScore.toString()[1]), 208 + 16 * 1, 56)\r\n        this.drawDigit(parseInt(this.bonusScore.toString()[2]), 208 + 16 * 2, 56)\r\n        this.drawDigit(parseInt(this.bonusScore.toString()[3]), 208 + 16 * 3, 56)\r\n        this.drawDigit(parseInt(this.bonusScore.toString()[4]), 208 + 16 * 4, 56)\r\n    }\r\n\r\n    drawRatios() {\r\n        for (let i = 0; i < this.enemiesRatio.length; i++) {\r\n            this.drawDigit(parseInt(this.enemiesRatio[this.enemiesRatio.length - 1 - i]), 280 - 16 * i, 112 + 16 * 0)\r\n        }\r\n        for (let i = 0; i < this.secretsRatio.length; i++) {\r\n            this.drawDigit(parseInt(this.secretsRatio[this.secretsRatio.length - 1 - i]), 280 - 16 * i, 112 + 16 * 1)\r\n        }\r\n        for (let i = 0; i < this.treasuresRatio.length; i++) {\r\n            this.drawDigit(parseInt(this.treasuresRatio[this.treasuresRatio.length - 1 - i]), 280 - 16 * i, 112 + 16 * 2)\r\n        }\r\n    }\r\n\r\n    private drawDigit(digit: number, x: number, y: number) {\r\n        this.ctx.drawImage(this.font, 16 * digit, 0, 16, 16, x, y, 16, 16)\r\n    }\r\n}","import BetterAudio from \"../../BetterAudio\"\r\nimport AudioPlayer from \"../../BetterAudio\"\r\n\r\nexport type weaponType = \"knife\" | \"pistol\" | \"machinegun\" | \"chaingun\"\r\n\r\nexport class Weapon {\r\n    type: weaponType\r\n    fireRate: number\r\n    damage: number\r\n    initTextures: number[]\r\n    loopTextures: number[]\r\n    shootTexture: number\r\n    audio: BetterAudio\r\n\r\n    range: number = 1000000\r\n\r\n    shooting = false\r\n    willShoot = false\r\n    justShot = false\r\n\r\n    private textureIndex: number = 0\r\n    private currentTextures: number[]\r\n\r\n    constructor(\r\n        type: weaponType,\r\n        fireRate: number,\r\n        damage: number,\r\n        initTextures: number[],\r\n        loopTextures: number[],\r\n        shootTexture: number,\r\n        audio: string,\r\n    ) {\r\n        this.type = type\r\n        this.fireRate = fireRate\r\n        this.damage = damage\r\n        this.initTextures = initTextures\r\n        this.loopTextures = loopTextures\r\n        this.shootTexture = shootTexture\r\n        this.audio = new BetterAudio(audio)\r\n\r\n        this.currentTextures = initTextures\r\n    }\r\n\r\n    get isAutomatic() {\r\n        return this.loopTextures.length > 0\r\n    }\r\n\r\n    get isTextureLastInit() {\r\n        return this.textureIndex\r\n    }\r\n\r\n    get framesCount() {\r\n        if (this.isAutomatic) {\r\n            return this.loopTextures.length\r\n        } else {\r\n            return this.initTextures.length\r\n        }\r\n    }\r\n\r\n    getNextTexture() {\r\n        this.justShot = false\r\n        if (!this.isAutomatic) {\r\n            if (this.willShoot) {\r\n                return this.getNextShootingTexture()\r\n            } else {\r\n                return this.initTextures[0]\r\n            }\r\n        } else {\r\n            if (this.shooting) {\r\n                return this.getNextShootingTexture()\r\n            } else {\r\n                return this.getNextStoppedShootingTexture()\r\n            }\r\n        }\r\n    }\r\n\r\n    getNextShootingTexture() {\r\n        this.textureIndex++\r\n        if (this.textureIndex >= this.currentTextures.length) {\r\n            if (this.currentTextures == this.initTextures && this.isAutomatic) {\r\n                this.currentTextures = this.loopTextures\r\n            } else {\r\n                this.willShoot = false\r\n            }\r\n            this.textureIndex = 0\r\n        }\r\n        const texture = this.currentTextures[this.textureIndex]\r\n        if (texture == this.shootTexture) {\r\n            this.justShot = true\r\n        }\r\n        return texture\r\n    }\r\n\r\n    getNextStoppedShootingTexture() {\r\n        if (this.currentTextures == this.loopTextures) {\r\n            this.currentTextures = this.initTextures\r\n            this.textureIndex = this.initTextures.length - 1\r\n        }\r\n        let texture = this.currentTextures[this.textureIndex]\r\n        this.textureIndex--\r\n        if (this.textureIndex < 0) {\r\n            this.textureIndex = 0\r\n        }\r\n        return texture\r\n    }\r\n}","import { degToRad, m4, Vec2, Vec3 } from '../../utils'\r\nimport { Weapon, weaponType } from './Weapon'\r\nimport texture from '../../../textures/weapons.png'\r\nimport Config from '../../Config'\r\nimport Input from '../../Input'\r\nimport UI from './UI'\r\nimport knife from \"../../../sounds/DSWKNIF.wav\"\r\nimport pistol from \"../../../sounds/WSND0005.wav\"\r\nimport machinegun from \"../../../sounds/WSND0004.wav\"\r\nimport chaingun from \"../../../sounds/WSND0006.wav\"\r\n\r\n\r\nexport default class Weapons {\r\n    importedTexture = texture\r\n\r\n    availableTypes: weaponType[] = ['knife', 'pistol']\r\n    // availableTypes: weaponType[] = ['knife', 'pistol', 'machinegun', 'chaingun']\r\n\r\n    private weapons: Weapon[] = []\r\n    private texturesCount = new Vec2(8, 4)\r\n    private textureNumber: number\r\n    private texture: HTMLImageElement\r\n\r\n    private timeSinceLastUpdate = 0\r\n\r\n    constructor() {\r\n        this.texture = new Image()\r\n        this.texture.src = texture\r\n\r\n        this.weapons.push(new Weapon(\"knife\", 2.4, 40, [0, 1, 2, 3, 4], [], 3, knife))\r\n        this.weapons[0].range = Config.gridSize * 0.75\r\n        this.weapons.push(new Weapon(\"pistol\", 2.4, 70, [8, 9, 10, 11, 12], [], 10, pistol))\r\n        this.weapons.push(new Weapon(\"machinegun\", 6, 70, [16, 17], [18, 19], 19, machinegun))\r\n        this.weapons.push(new Weapon(\"chaingun\", 12, 70, [24, 25], [26, 27], 26, chaingun))\r\n\r\n        this.textureNumber = this.currentWeapon.initTextures[0]\r\n    }\r\n\r\n    get textureSize() {\r\n        return this.texturesCount.map(v => 1 / v)\r\n    }\r\n\r\n    get currentWeapon() {\r\n        return this.weapons.find(weapon => weapon.type == UI.instance.weapon)\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        this.timeSinceLastUpdate += deltaTime\r\n\r\n        if (0 < Input.instance.lastNumber && Input.instance.lastNumber <= this.weapons.length) {\r\n            for (let i = 0; i < this.weapons.length; i++) {\r\n                if (Input.instance.lastNumber == i + 1) {\r\n                    if (this.availableTypes.includes(this.weapons[i].type)) {\r\n                        UI.instance.weapon = this.weapons[i].type\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setShooting(Input.instance.shooting && UI.instance.ammo > 0)\r\n        if (Input.instance.shot && (UI.instance.ammo > 0 || this.currentWeapon.type == 'knife')) {\r\n            this.shoot()\r\n            Input.instance.justShot = true\r\n        }\r\n\r\n        if (this.currentWeapon.justShot) {\r\n            this.decreaseAmmo()\r\n            this.currentWeapon.audio.play()\r\n        }\r\n\r\n        const frameTime = 1 / (this.currentWeapon.fireRate * this.currentWeapon.framesCount)\r\n\r\n        this.currentWeapon.justShot = false\r\n\r\n        if (this.timeSinceLastUpdate >= frameTime) {\r\n            this.timeSinceLastUpdate = 0\r\n            this.textureNumber = this.currentWeapon.getNextTexture()\r\n        }\r\n\r\n    }\r\n\r\n    private decreaseAmmo() {\r\n        if (this.currentWeapon.type != 'knife') {\r\n            if (UI.instance.ammo > 0) {\r\n                UI.instance.ammo--\r\n            }\r\n        }\r\n    }\r\n\r\n    private shoot() {\r\n        if (!this.currentWeapon.isAutomatic) {\r\n            this.currentWeapon.willShoot = true\r\n        }\r\n    }\r\n\r\n    private setShooting(shooting: boolean) {\r\n        if (this.currentWeapon.isAutomatic) {\r\n            this.currentWeapon.shooting = shooting\r\n        }\r\n    }\r\n\r\n    draw(context: CanvasRenderingContext2D) {\r\n        // x 322 - pół szerokości\r\n        // y 312 - wysokość\r\n        const width = 64\r\n        const height = 64\r\n        const row = Math.floor(this.textureNumber / this.texturesCount.x)\r\n        const col = this.textureNumber % this.texturesCount.x\r\n        // console.log(this.textureNumber)\r\n        context.drawImage(\r\n            this.texture,\r\n            64 * col,\r\n            64 * row,\r\n            64,\r\n            64,\r\n            (317.5 - (width * 4.8 / 2)) * Config.uiScale,\r\n            (312 - (height * 4.8)) * Config.uiScale,\r\n            width * Config.uiScale * 4.8,\r\n            height * Config.uiScale * 4.8\r\n        )\r\n    }\r\n}","import uiElements from '../../../textures/uiElements.png'\r\nimport Config from '../../Config'\r\nimport UI from './UI'\r\n\r\nexport default class LoadingScreen {\r\n    canvas: HTMLCanvasElement\r\n    private ctx: CanvasRenderingContext2D\r\n    private uiElements: HTMLImageElement\r\n    private progress = 0\r\n    private state = \"beforeLoading\"\r\n    private readonly loadingTime = 1\r\n    private readonly beforeLoadingDelay = 0.3\r\n    private readonly afterLoadingDelay = 0.3\r\n\r\n    constructor() {\r\n        this.canvas = document.createElement('canvas')\r\n\r\n        this.ctx = this.canvas.getContext('2d')\r\n        this.ctx.imageSmoothingEnabled = false;\r\n\r\n        this.canvas.width = 320\r\n        this.canvas.height = 200\r\n\r\n        this.uiElements = new Image();\r\n        this.uiElements.src = uiElements;\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        if (UI.instance.state != 'loading') return\r\n        this.ctx.fillStyle = \"#004141\"\r\n        this.ctx.fillRect(0, 0, 320, 160)\r\n        this.ctx.drawImage(\r\n            this.uiElements,\r\n            0,\r\n            160,\r\n            224,\r\n            48,\r\n            96 / 2,\r\n            112 / 2,\r\n            224,\r\n            48\r\n        )\r\n        if (this.state == 'beforeLoading') {\r\n            this.progress += deltaTime\r\n            if (this.progress >= this.beforeLoadingDelay) {\r\n                this.state = \"loading\"\r\n                this.progress = 0\r\n            }\r\n        } else if (this.state == 'loading') {\r\n            this.progress += deltaTime / this.loadingTime\r\n            if (this.progress >= 1) {\r\n                this.progress = 0\r\n                this.state = \"afterLoading\"\r\n            }\r\n        } else if (this.state == 'afterLoading') {\r\n            this.progress += deltaTime\r\n            if (this.progress >= this.afterLoadingDelay) {\r\n                this.progress = 0\r\n                UI.instance.state = 'game'\r\n                UI.instance.startTime = new Date()\r\n            }\r\n        }\r\n\r\n        if (this.state != 'beforeLoading') {\r\n            let width = 214 * this.progress\r\n            if (this.state == 'afterLoading') {\r\n                width = 214\r\n            }\r\n            if (width > 0) {\r\n                this.ctx.fillStyle = \"#ff0000\"\r\n                this.ctx.fillRect(53, 101, width, 2)\r\n                this.ctx.fillStyle = \"#ff9e9e\"\r\n                this.ctx.fillRect(53, 101, width - 1, 1)\r\n            }\r\n        }\r\n    }\r\n}","export default class DeathScreen {\r\n    canvas: HTMLCanvasElement\r\n    private ctx: CanvasRenderingContext2D\r\n    private pixels: ImageData\r\n    private frame = 0\r\n    private started = false\r\n    private reversed = false\r\n    private interval: NodeJS.Timer\r\n\r\n    constructor() {\r\n        this.canvas = document.createElement('canvas')\r\n\r\n        this.ctx = this.canvas.getContext('2d')\r\n        this.ctx.imageSmoothingEnabled = false;\r\n\r\n        this.canvas.width = 320\r\n        this.canvas.height = 200\r\n\r\n        this.pixels = this.ctx.createImageData(this.canvas.width, this.canvas.height);\r\n    }\r\n\r\n    start() {\r\n        if (!this.started) {\r\n            this.started = true\r\n            this.interval = setInterval(() => this.update(), 1);\r\n        }\r\n    }\r\n\r\n    /* Write a pixel, just set alpha and RGB channels. */\r\n    private setPixelRed(x: number, y: number) {\r\n        var offset = x * 4 + y * 4 * this.canvas.width;\r\n        this.pixels.data[offset + 3] = 255;\r\n        this.pixels.data[offset + 0] = 255;\r\n        this.pixels.data[offset + 1] = 0;\r\n        this.pixels.data[offset + 2] = 0;\r\n    }\r\n    private setPixelTransparent(x: number, y: number) {\r\n        var offset = x * 4 + y * 4 * this.canvas.width;\r\n        this.pixels.data[offset + 3] = 0;\r\n        this.pixels.data[offset + 0] = 0;\r\n        this.pixels.data[offset + 1] = 0;\r\n        this.pixels.data[offset + 2] = 0;\r\n    }\r\n\r\n    /* Transforms the 16 bit input into another seemingly psenduo random number\r\n     * in the same range. Every input 16 bit input will generate a different\r\n     * 16 bit output. This is called a Feistel network. */\r\n    private feistelNet(input: number) {\r\n        var l = input & 0xff;\r\n        var r = input >> 8;\r\n        for (var i = 0; i < 8; i++) {\r\n            var nl = r;\r\n            var F = (((r * 11) + (r >> 5) + 7 * 127) ^ r) & 0xff;\r\n            r = l ^ F;\r\n            l = nl;\r\n        }\r\n        return ((r << 8) | l) & 0xffff;\r\n    }\r\n\r\n    /* Called once every millisecond, sets 100 pixels. */\r\n    private update() {\r\n        /* Set 100 pixels per iteration otherwise it's too slow. */\r\n        for (let j = 0; j < 200; j++) {\r\n            if (this.frame == 65536) {\r\n                setTimeout(() => {\r\n                    this.reversed = true\r\n                    setTimeout(() => {\r\n                        this.frame = 0\r\n                        this.started = false\r\n                        this.reversed = false\r\n                        clearInterval(this.interval)\r\n                        this.interval = null\r\n                    }, 10000)\r\n                }, 2000)\r\n            }\r\n            var fn = this.feistelNet(this.frame);\r\n            var x = fn % this.canvas.width;\r\n            var y = Math.floor(fn / this.canvas.width);\r\n            if (x < this.canvas.width && y < this.canvas.height) {\r\n                if (this.reversed) {\r\n                    this.setPixelTransparent(x, y);\r\n                } else {\r\n                    this.setPixelRed(x, y);\r\n                }\r\n            }\r\n            this.frame++;\r\n        }\r\n        this.ctx.fillStyle = \"green\"\r\n        this.ctx.fillRect(0, 0, 100, 100)\r\n        this.ctx.putImageData(this.pixels, 0, 0);\r\n    }\r\n\r\n}","import Config from '../../Config';\r\nimport uiTexture from '../../../textures/ui.png'\r\nimport uiElements from '../../../textures/uiElements.png'\r\nimport startScreen from '../../../textures/startScreen.png'\r\nimport Menu from './Menu';\r\n\r\nimport audioSplash from \"../../../sounds/theme_splash.mp3\"\r\nimport audioMenu from \"../../../sounds/theme_menu.mp3\"\r\nimport audioLevel from \"../../../sounds/theme_level.mp3\"\r\nimport BetterAudio from '../../BetterAudio'\r\nimport LevelEnd from './LevelEnd';\r\nimport Weapons from './Weapons';\r\nimport LoadingScreen from './LoadingScreen';\r\nimport DeathScreen from './DeathScreen';\r\n\r\n\r\ntype FaceDirection = \"left\" | \"normal\" | \"right\"\r\ntype FaceState = \"normal\" | \"dead\" | \"win\"\r\ntype FaceAnimationStep = {\r\n    direction: FaceDirection,\r\n    duration: number,\r\n}\r\n\r\nexport default class UI {\r\n    static instance = new this\r\n    texture: HTMLImageElement\r\n    elements: HTMLImageElement\r\n    startScreen: HTMLImageElement\r\n    context: CanvasRenderingContext2D\r\n    weapons: Weapons\r\n    loadingScreen: LoadingScreen\r\n\r\n    audioSplash = new BetterAudio(audioSplash, Config.musicVolume)\r\n    audioMenu = new BetterAudio(audioMenu, Config.musicVolume)\r\n    audioLevel = new BetterAudio(audioLevel, Config.musicVolume)\r\n\r\n    floor: number = 1\r\n    score: number = 0\r\n    lives: number = 3\r\n    health: number = 100\r\n    ammo: number = 8\r\n    weapon: string = 'pistol'\r\n\r\n    faceDirection: FaceDirection = \"right\"\r\n    faceState: FaceState = \"normal\"\r\n    faceAnimationSteps: FaceAnimationStep[] = []\r\n    lastFaceAnimationStepsCount: number = null\r\n\r\n    showingMenu = true\r\n\r\n    state = 'startScreen'\r\n\r\n    menu: Menu\r\n    levelEnd: LevelEnd\r\n    deathScreen: DeathScreen\r\n\r\n    flashing = false\r\n    flashCompletion = 0\r\n    flashDuration = 0.2\r\n    flashColor: string\r\n    flashIntensity: number\r\n\r\n    startTime: Date\r\n    endTime: Date\r\n\r\n    enemiesKilled: number = 0\r\n    secretsFound: number = 0\r\n    treasuresFound: number = 0\r\n\r\n    enemiesCount: number\r\n    secretsCount: number\r\n    treasuresCount: number\r\n\r\n    constructor() {\r\n        this.menu = new Menu()\r\n        this.loadingScreen = new LoadingScreen()\r\n        this.levelEnd = new LevelEnd()\r\n        this.deathScreen = new DeathScreen()\r\n        this.audioSplash.loop()\r\n        this.audioMenu.loop()\r\n        this.audioLevel.loop()\r\n    }\r\n\r\n    init() {\r\n        this.texture = new Image();\r\n        this.texture.src = uiTexture;\r\n\r\n        this.elements = new Image();\r\n        this.elements.src = uiElements;\r\n\r\n        this.startScreen = new Image();\r\n        this.startScreen.src = startScreen;\r\n\r\n        const uiCanvas = document.getElementById(\"uiCanvas\") as HTMLCanvasElement\r\n        uiCanvas.width = 640 * Config.uiScale\r\n        uiCanvas.height = 400 * Config.uiScale\r\n\r\n        this.context = uiCanvas.getContext('2d') as CanvasRenderingContext2D\r\n        this.context.imageSmoothingEnabled = false;\r\n\r\n        document.onclick = e => { if (this.state == \"startScreen\") this.audioSplash.playIfNotPlayed() }\r\n        document.onkeydown = e => { if (this.state == \"startScreen\" && e.code == \"Space\") this.audioSplash.playIfNotPlayed() }\r\n        document.onkeyup = e => { if (this.state == \"startScreen\" && e.code == \"Space\") this.audioSplash.playIfNotPlayed() }\r\n        this.weapons = new Weapons()\r\n    }\r\n\r\n    takeLife() {\r\n        if (this.lives == 0) {\r\n            this.floor = 1\r\n            this.lives = 3\r\n        } else {\r\n            this.lives--\r\n        }\r\n        this.health = 100\r\n        this.ammo = 8\r\n        this.weapon = \"pistol\"\r\n        this.score = 0\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        this.weapons.update(deltaTime)\r\n        this.loadingScreen.update(deltaTime)\r\n        const currentStep = this.faceAnimationSteps[0]\r\n        if (currentStep) {\r\n            currentStep.duration -= deltaTime\r\n            if (currentStep.duration <= 0) {\r\n                this.faceAnimationSteps.shift()\r\n            }\r\n            if (this.faceAnimationSteps.length == 0) {\r\n                this.startFaceAnimation()\r\n            }\r\n            this.faceDirection = this.faceAnimationSteps[0].direction\r\n        }\r\n        if (!currentStep) {\r\n            this.startFaceAnimation()\r\n        }\r\n        this.menu.update(deltaTime)\r\n        this.levelEnd.update(deltaTime)\r\n        if (this.flashing) {\r\n            this.flashCompletion += deltaTime / this.flashDuration\r\n            if (this.flashCompletion >= 1) {\r\n                this.flashCompletion = 0\r\n                this.flashing = false\r\n            }\r\n        }\r\n    }\r\n\r\n    startFaceAnimation() {\r\n        const stepsCount = this.lastFaceAnimationStepsCount == 3 ? 5 : 3\r\n        for (let i = 0; i < stepsCount; i++) {\r\n            const min = 0.5\r\n            const max = 1.5\r\n            const duration = Math.random() * (max - min) + min;\r\n            let direction: FaceDirection\r\n            if (i % 2) {\r\n                direction = 'right'\r\n            } else {\r\n                direction = 'left'\r\n            }\r\n            this.faceAnimationSteps.push({ direction, duration })\r\n        }\r\n        this.lastFaceAnimationStepsCount = this.faceAnimationSteps.length\r\n        this.faceAnimationSteps.push({ direction: 'normal', duration: 2 })\r\n    }\r\n\r\n    draw(canvas: HTMLCanvasElement) {\r\n        this.context.clearRect(0, 0, this.context.canvas.width, this.context.canvas.height);\r\n        this.context.drawImage(canvas, 16 * Config.uiScale, 8 * Config.uiScale, 608 * Config.uiScale, 304 * Config.uiScale)\r\n        this.context.drawImage(this.texture, 0, 0, 640 * Config.uiScale, 400 * Config.uiScale)\r\n        this.drawNumber(this.floor, 64, 352)\r\n        this.drawNumber(this.score, 192, 352)\r\n        this.drawNumber(this.lives, 240, 352)\r\n        this.drawNumber(this.health, 384, 352)\r\n        this.drawNumber(this.ammo, 464, 352)\r\n        this.drawWeaponUI()\r\n        this.weapons.draw(this.context)\r\n        this.drawFace()\r\n        if (this.flashing) {\r\n            this.context.fillStyle = `rgba(${this.flashColor}, ${(1 - this.flashCompletion) * this.flashIntensity})`\r\n            // this.context.fillStyle = `rgba(${this.flashColor}, ${(1 - this.flashCompletion) * 0.6})`\r\n            this.context.fillRect(0, 0, this.context.canvas.width, this.context.canvas.height);\r\n        }\r\n        if (this.state == \"startScreen\") {\r\n            this.context.drawImage(this.startScreen, 0, 0, 640 * Config.uiScale, 400 * Config.uiScale)\r\n        } else if (this.state == \"menu\") {\r\n            this.context.drawImage(this.menu.canvas, 0, 0, 640 * Config.uiScale, 400 * Config.uiScale)\r\n        } else if (this.state == \"loading\") {\r\n            this.context.drawImage(this.loadingScreen.canvas, 0, 0, 640 * Config.uiScale, 400 * Config.uiScale)\r\n        } else if (this.state == \"end\") {\r\n            this.context.drawImage(this.levelEnd.canvas, 0, 0, 640 * Config.uiScale, 400 * Config.uiScale)\r\n        } else if (this.state == \"dead\") {\r\n            setTimeout(() => this.deathScreen.start(), 1500)\r\n        }\r\n        this.context.drawImage(this.deathScreen.canvas, 16 * Config.uiScale, 8 * Config.uiScale, 608 * Config.uiScale, 304 * Config.uiScale)\r\n    }\r\n\r\n    drawFace() {\r\n        let faceColumn = 0\r\n        let faceRow = 0\r\n        if (this.health == 0) {\r\n            faceRow = 7\r\n            faceColumn = 1\r\n        } else if (this.faceState == 'normal') {\r\n            if (this.faceDirection == 'left') {\r\n                faceColumn = 0\r\n            } else if (this.faceDirection == 'normal') {\r\n                faceColumn = 1\r\n            } else if (this.faceDirection == 'right') {\r\n                faceColumn = 2\r\n            }\r\n\r\n            faceRow = Math.floor(this.health / (100 / 7))\r\n            if (faceRow == 7) {\r\n                faceRow = 6\r\n            }\r\n            faceRow = 6 - faceRow\r\n        } else if (this.faceState == 'win') {\r\n            faceRow = 7\r\n            faceColumn = 0\r\n        }\r\n\r\n        this.context.drawImage(\r\n            this.elements,\r\n            240 + 24 * faceColumn,\r\n            31 * faceRow,\r\n            24,\r\n            31,\r\n            274 * Config.uiScale,\r\n            330 * Config.uiScale,\r\n            48 * Config.uiScale,\r\n            62 * Config.uiScale\r\n        )\r\n    }\r\n\r\n    drawWeaponUI() {\r\n        let weaponNumber = 0\r\n        if (this.weapon == 'knife') {\r\n            weaponNumber = 0\r\n        } else if (this.weapon == 'pistol') {\r\n            weaponNumber = 1\r\n        } else if (this.weapon == 'machinegun') {\r\n            weaponNumber = 2\r\n        } else if (this.weapon == 'chaingun') {\r\n            weaponNumber = 3\r\n        }\r\n        this.context.drawImage(\r\n            this.elements,\r\n            48 * weaponNumber,\r\n            0,\r\n            48,\r\n            24,\r\n            512 * Config.uiScale,\r\n            336 * Config.uiScale,\r\n            96 * Config.uiScale,\r\n            48 * Config.uiScale\r\n        )\r\n    }\r\n\r\n    private drawNumber(number: number, x: number, y: number) {\r\n        const digits = number.toString().split('').reverse().map(digit => parseInt(digit))\r\n        const digitWidth = 16\r\n        for (let [i, digit] of digits.entries()) {\r\n            this.drawDigit(digit, x - digitWidth * (i + 1), y)\r\n        }\r\n    }\r\n\r\n    private drawDigit(digit: number, x: number, y: number) {\r\n        this.context.drawImage(\r\n            this.elements,\r\n            8 * digit,\r\n            32,\r\n            8,\r\n            16,\r\n            x * Config.uiScale,\r\n            y * Config.uiScale,\r\n            16 * Config.uiScale,\r\n            32 * Config.uiScale\r\n        )\r\n    }\r\n\r\n    flashRed() {\r\n        this.flashColor = \"255, 0, 0\"\r\n        this.flashIntensity = 0.3\r\n        this.flashing = true\r\n    }\r\n\r\n    flashYellow() {\r\n        this.flashColor = \"255, 255, 0\"\r\n        this.flashIntensity = 0.2\r\n        this.flashing = true\r\n    }\r\n}","import Config from './Config'\r\nimport UI from './shapes/ui/UI'\r\nimport { Vec3 } from './utils'\r\n\r\nexport default class Input {\r\n    static instance = new this\r\n\r\n    direction = Vec3.zero\r\n    rotation = 0\r\n\r\n    sprinting = false\r\n    shooting = false\r\n    shot = false\r\n    justShot = true\r\n\r\n    interacting = false\r\n    justInteracted = false\r\n\r\n    noclip = false\r\n\r\n    renderWalls = true\r\n    justChangedRenderWalls = false\r\n\r\n    lastNumber: number = null\r\n\r\n    private pressedKeys: string[] = []\r\n\r\n    constructor() {\r\n        this.addKeyUpListener()\r\n        this.addKeyDownListener()\r\n        this.addAdditionalListeners()\r\n    }\r\n\r\n    get inputsBlocked() {\r\n        // return !UI.instance.health || UI.instance.showingMenu\r\n        return UI.instance.state != \"game\"\r\n    }\r\n\r\n    update() {\r\n        this.direction = Vec3.zero\r\n\r\n        this.rotation = 0\r\n\r\n        this.shooting = false\r\n\r\n        this.shot = false\r\n\r\n        this.interacting = false\r\n\r\n        this.noclip = false\r\n\r\n        this.sprinting = false\r\n\r\n        this.lastNumber = null\r\n\r\n        // console.log(this.inputsBlocked)\r\n        if (!this.inputsBlocked) {\r\n            if ((this.isPressed('ArrowUp') || this.isPressed('KeyW')) && !this.isPressed('KeyS') && !this.isPressed('ArrowDown')) this.direction.z = 1\r\n            if ((this.isPressed('ArrowDown') || this.isPressed('KeyS')) && !this.isPressed('KeyW') && !this.isPressed('ArrowUp')) this.direction.z = -1\r\n            // if (this.isPressed('KeyA') && !this.isPressed('KeyD')) this.direction.x = 1\r\n            // if (this.isPressed('KeyD') && !this.isPressed('KeyA')) this.direction.x = -1\r\n            this.direction = this.direction.normalize\r\n\r\n            if ((this.isPressed('KeyA') || this.isPressed('ArrowLeft')) && !this.isPressed('ArrowRight') && !this.isPressed('KeyD')) this.rotation = -1\r\n            if ((this.isPressed('KeyD') || this.isPressed('ArrowRight')) && !this.isPressed('ArrowLeft') && !this.isPressed('KeyA')) this.rotation = 1\r\n\r\n            if (this.isPressed('Space')) this.shooting = true\r\n\r\n            if (this.isPressed('Space')) {\r\n                if (!this.justShot) {\r\n                    this.shot = true\r\n                }\r\n            } else {\r\n                this.justShot = false\r\n            }\r\n\r\n            if (this.isPressed('KeyE')) {\r\n                if (!this.justInteracted) {\r\n                    this.interacting = true\r\n                }\r\n            } else {\r\n                this.justInteracted = false\r\n            }\r\n\r\n            if (Config.debug) {\r\n                if (this.isPressed('KeyC')) {\r\n                    this.noclip = true\r\n                }\r\n                if (this.isPressed('ShiftLeft')) {\r\n                    this.sprinting = true\r\n                }\r\n            }\r\n\r\n            if (this.isPressed('Digit0')) this.lastNumber = 0\r\n            if (this.isPressed('Digit1')) this.lastNumber = 1\r\n            if (this.isPressed('Digit2')) this.lastNumber = 2\r\n            if (this.isPressed('Digit3')) this.lastNumber = 3\r\n            if (this.isPressed('Digit4')) this.lastNumber = 4\r\n            if (this.isPressed('Digit5')) this.lastNumber = 5\r\n            if (this.isPressed('Digit6')) this.lastNumber = 6\r\n            if (this.isPressed('Digit7')) this.lastNumber = 7\r\n            if (this.isPressed('Digit8')) this.lastNumber = 8\r\n            if (this.isPressed('Digit9')) this.lastNumber = 9\r\n        }\r\n    }\r\n\r\n    private isPressed(key: string) {\r\n        return this.pressedKeys.includes(key)\r\n    }\r\n\r\n    private addKeyUpListener() {\r\n        addEventListener('keyup', e => {\r\n            if (this.pressedKeys.includes(e.code)) {\r\n                this.pressedKeys = this.pressedKeys.filter(key => key != e.code)\r\n            }\r\n        })\r\n    }\r\n\r\n    private addKeyDownListener() {\r\n        addEventListener('keydown', e => {\r\n            if (!this.pressedKeys.includes(e.code)) {\r\n                this.pressedKeys.push(e.code)\r\n            }\r\n        })\r\n    }\r\n\r\n    private addAdditionalListeners() {\r\n        addEventListener('keydown', e => {\r\n            if (e.code == \"Minus\") {\r\n                Config.uiScale -= 0.1\r\n            } else if (e.code == \"Equal\") {\r\n                Config.uiScale += 0.1\r\n            } else if (e.code == \"Backspace\") {\r\n                Config.uiScale = 1\r\n            } else if (e.code == \"KeyV\" && Config.debug) {\r\n                this.renderWalls = !this.renderWalls\r\n            } else if (e.code == 'Space' || e.code == \"Enter\") {\r\n                if (UI.instance.state == \"startScreen\") {\r\n                    UI.instance.state = \"menu\"\r\n                    UI.instance.audioSplash.pause()\r\n                    UI.instance.audioMenu.play()\r\n                } else if (UI.instance.state == \"menu\") {\r\n                    if (UI.instance.menu.option == 0) {\r\n                        UI.instance.menu.audioSelect.play()\r\n                        UI.instance.audioLevel.play()\r\n                        UI.instance.audioMenu.pause()\r\n                        UI.instance.state = \"loading\"\r\n                        // UI.instance.state = \"game\"\r\n                    } else if (UI.instance.menu.option == 8) {\r\n                        UI.instance.menu.audioSelect.play()\r\n                        UI.instance.audioMenu.pause()\r\n                        UI.instance.audioSplash.play()\r\n                        UI.instance.state = \"startScreen\"\r\n                    }\r\n                }\r\n            } else if (e.code == \"Escape\") {\r\n                if (UI.instance.state == \"menu\") {\r\n                    UI.instance.menu.audioBack.play()\r\n                    UI.instance.audioMenu.pause()\r\n                    UI.instance.audioSplash.play()\r\n                    UI.instance.state = \"startScreen\"\r\n                }\r\n            }\r\n        })\r\n    }\r\n}","import { Vec3, Transform, radToDeg, m4, degToRad, log, Vec2 } from './utils'\r\nimport Shape from './shapes/level/Shape'\r\nimport Interactable from './shapes/level/Interactable'\r\nimport Enemy from './shapes/level/Enemy'\r\nimport Door from './shapes/level/Door'\r\nimport Config from './Config'\r\nimport Weapons from './shapes/ui/Weapons'\r\nimport { Program } from './programs/Program'\r\nimport Input from './Input'\r\nimport BetterAudio from './BetterAudio'\r\nimport audioHit from '../sounds/WSND0014.wav'\r\nimport audioDeath from '../sounds/DSDEATH.wav'\r\n\r\nexport default class Camera {\r\n    transform = new Transform\r\n    initialTransform: Transform\r\n    projectionMatrix: number[]\r\n    collidingShapes: Shape[]\r\n    killer: Enemy = null\r\n\r\n    audioHit = new BetterAudio(audioHit)\r\n    audioDeath = new BetterAudio(audioDeath)\r\n    readonly weapons: Weapons\r\n    private readonly fov = 60\r\n    private readonly zNear = Config.gridSize / 64\r\n    private readonly zFar = Config.gridSize * 48\r\n    private readonly rotationSpeed = 1.6\r\n    private readonly movementSpeed = Config.gridSize * 5\r\n    private readonly collisionRadius = Config.gridSize / 3\r\n    private readonly interactionDistance = Config.gridSize * 1.5\r\n    private readonly gl: WebGLRenderingContext\r\n\r\n    private blockedDirections: Vec3[] = []\r\n\r\n    constructor(gl: WebGLRenderingContext, program: Program) {\r\n        this.gl = gl\r\n        this.updateProjectionMatrix()\r\n        this.transform.rotation.y = degToRad(90)\r\n    }\r\n\r\n    get matrix() {\r\n        let cameraMatrix = m4.identity\r\n        cameraMatrix = m4.translate(cameraMatrix, this.transform.position.inverted)\r\n        cameraMatrix = m4.yRotate(cameraMatrix, this.transform.rotation.y)\r\n        return cameraMatrix\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        this.rotate(Input.instance.rotation * deltaTime)\r\n        let speed = Input.instance.direction.multiply(deltaTime)\r\n        if (Input.instance.sprinting) {\r\n            speed = speed.multiply(5)\r\n        }\r\n        if (Input.instance.noclip) {\r\n            this.move(speed)\r\n        } else {\r\n            this.move(speed, this.collidingShapes)\r\n        }\r\n    }\r\n\r\n    nearest(shapes: Shape[]) {\r\n        const sorted = shapes.sort((a, b) => {\r\n            return (\r\n                a.initialTransform.position.distanceTo(this.transform.position) -\r\n                b.initialTransform.position.distanceTo(this.transform.position)\r\n            )\r\n        })\r\n        return sorted[0]\r\n    }\r\n\r\n    inInteractionDistance(shape: Interactable) {\r\n        return shape.initialTransform.position.distanceTo(this.transform.position) <= this.interactionDistance\r\n    }\r\n\r\n    rotate(rotation: number) {\r\n        this.transform.rotation.y += rotation * this.rotationSpeed\r\n    }\r\n\r\n    move(direction: Vec3, collidingShapes?: Shape[]) {\r\n        const transformMatrix = m4.yRotation(-this.transform.rotation.y)\r\n        let deltaPosition = direction.inverted.multiply(this.movementSpeed).transformMat4(transformMatrix)\r\n\r\n        for (let blockedDirection of this.blockedDirections) {\r\n            // corner shorter side selection\r\n            if (blockedDirection.x && blockedDirection.z) {\r\n                if (Math.abs(blockedDirection.x) > Math.abs(blockedDirection.z)) {\r\n                    blockedDirection.x = 0\r\n                } else {\r\n                    blockedDirection.z = 0\r\n                }\r\n            }\r\n\r\n            // different sign\r\n            if (blockedDirection.z * deltaPosition.z < 0) deltaPosition.z = 0\r\n            if (blockedDirection.x * deltaPosition.x < 0) deltaPosition.x = 0\r\n        }\r\n\r\n        if (collidingShapes) {\r\n            this.checkCollisions(collidingShapes.filter(c => c.transform.position.distanceTo(this.transform.position) < Config.gridSize * 2))\r\n        } else {\r\n            this.blockedDirections = []\r\n        }\r\n\r\n        this.transform.position = this.transform.position.add(deltaPosition)\r\n    }\r\n\r\n    angleTo(targetPosition: Vec3) {\r\n        let toTargetDir = targetPosition.substract(this.transform.position).yZeroed.normalize\r\n        let lookingAtDir = Vec3.fromAngle(this.transform.rotation.y)\r\n        let toTargetAngle = Math.atan2(toTargetDir.z, toTargetDir.x)\r\n        let lookingAtAngle = Math.atan2(lookingAtDir.z, lookingAtDir.x)\r\n        let angleDiff = radToDeg(lookingAtAngle - toTargetAngle)\r\n        if (angleDiff > 180) angleDiff -= 360\r\n        if (angleDiff < -180) angleDiff += 360\r\n        return angleDiff\r\n    }\r\n\r\n    cuboidCollisionSide(cuboid: Shape) {\r\n        const cameraToWall = this.transform.position.yZeroed.to(cuboid.transform.position.yZeroed)\r\n        const cameraToWallDirection = cameraToWall.normalize\r\n\r\n        let steps = 1\r\n        if (cuboid instanceof Door) {\r\n            steps = 10\r\n        }\r\n\r\n        let collisionCandidates = [this.transform.position]\r\n        for (let i = this.collisionRadius; i > 0; i -= this.collisionRadius / steps) {\r\n            const currentRadius = i\r\n            const collidingPointTranslation = cameraToWallDirection.multiply(currentRadius)\r\n            const collidingPoint = this.transform.position.add(collidingPointTranslation)\r\n            collisionCandidates.push(collidingPoint)\r\n        }\r\n        for (let candidate of collisionCandidates) {\r\n            if (cuboid.bb.isColliding(candidate)) {\r\n                let collisionSide = cuboid.bb.nearestDistanceDirection(this.transform.position)\r\n                if (collisionSide.x && collisionSide.z) {\r\n                    const nearestCorner = cuboid.bb.nearestCorner(candidate)\r\n                    const nearestCornerDiff = this.transform.position.substract(nearestCorner).abs\r\n                    if (nearestCornerDiff.x > nearestCornerDiff.z) {\r\n                        collisionSide.z = 0\r\n                    } else {\r\n                        collisionSide.x = 0\r\n                    }\r\n                }\r\n                // log('col side', collisionSide)\r\n\r\n                // this.transform.position = this.transform.position.add(collisionSide)\r\n                return collisionSide\r\n            }\r\n        }\r\n        return null\r\n    }\r\n\r\n    checkCollisions(shapes: Shape[]) {\r\n        const collidingSides = shapes\r\n            .map(c => this.cuboidCollisionSide(c))\r\n            .filter(side => side !== null)\r\n        // const blockedDirections = collidingSides.map(side => side.inverted)\r\n        const blockedDirections = collidingSides\r\n        const uniqueBlockedDirections = blockedDirections.filter((direction, index, self) =>\r\n            index === self.findIndex(d => d.equals(direction))\r\n        )\r\n        this.blockedDirections = uniqueBlockedDirections\r\n    }\r\n\r\n    isLookingAt(enemy: Enemy) {\r\n        const lookingAtDir = Vec3.fromAngle(this.transform.rotation.y)\r\n        const targetXDir = Vec3.up.cross(lookingAtDir).normalize\r\n\r\n        const enemyLeft = enemy.transform.position.add(targetXDir.multiply(enemy.texturedSize.x / 2))\r\n        const enemyRight = enemy.transform.position.substract(targetXDir.multiply(enemy.texturedSize.x / 2))\r\n\r\n        const angleLeft = this.angleTo(enemyLeft)\r\n        const angleRight = this.angleTo(enemyRight)\r\n\r\n        const lookingAtEnemy = 0 < angleLeft && angleLeft < 90 && -90 < angleRight && angleRight < 0\r\n\r\n        return lookingAtEnemy\r\n    }\r\n\r\n    get viewProjectionMatrix() {\r\n        return m4.multiply(this.matrix, this.projectionMatrix);\r\n    }\r\n\r\n    updateProjectionMatrix() {\r\n        const fieldOfViewRadians = degToRad(this.fov)\r\n        // const aspect = this.gl.canvas.clientWidth / this.gl.canvas.clientHeight\r\n        const aspect = 2\r\n        const zNear = this.zNear\r\n        const zFar = this.zFar\r\n        this.projectionMatrix = m4.perspective(fieldOfViewRadians, aspect, zNear, zFar);\r\n    }\r\n\r\n    lookAt(target: Vec3) {\r\n        let toTargetDir = target.substract(this.transform.position).yZeroed.normalize\r\n        let toTargetAngle = Math.atan2(toTargetDir.z, toTargetDir.x)\r\n        this.transform.rotation.y = toTargetAngle + degToRad(90)\r\n    }\r\n\r\n    lookAtKillerStep(deltaTime: number) {\r\n        const angle = this.angleTo(this.killer.transform.position)\r\n        if (Math.abs(angle) < Math.abs(radToDeg(this.rotationSpeed * deltaTime))) {\r\n            this.lookAt(this.killer.transform.position)\r\n        } else {\r\n            if (angle > 0) {\r\n                this.rotate(-1 * deltaTime)\r\n            } else if (angle < 0) {\r\n                this.rotate(1 * deltaTime)\r\n            }\r\n        }\r\n    }\r\n}","import Shape from \"./shapes/level/Shape\"\r\n\r\nexport default class Textures {\r\n    private readonly gl: WebGLRenderingContext\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this.gl = gl\r\n    }\r\n\r\n    load(shapes: Shape[], callback?: () => void) {\r\n        let alreadyCreatedTextures: Map<string, WebGLTexture> = new Map()\r\n        const textures = [...new Set(shapes.map(shape => shape.importedTexture))]\r\n        this.loadHtmlImages(textures, textureToHtmlImageMap => {\r\n            for (let shape of shapes) {\r\n                if (!alreadyCreatedTextures.has(shape.importedTexture)) {\r\n                    const webglTexture = this.gl.createTexture()\r\n                    this.gl.bindTexture(this.gl.TEXTURE_2D, webglTexture)\r\n                    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST)\r\n                    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST_MIPMAP_LINEAR)\r\n                    // this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST)\r\n                    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE)\r\n                    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE)\r\n                    this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, textureToHtmlImageMap.get(shape.importedTexture))\r\n                    this.gl.generateMipmap(this.gl.TEXTURE_2D)\r\n                    alreadyCreatedTextures.set(shape.importedTexture, webglTexture)\r\n                }\r\n                shape.webglTexture = alreadyCreatedTextures.get(shape.importedTexture)\r\n            }\r\n            callback?.()\r\n        })\r\n    }\r\n\r\n    private loadHtmlImages(importedTextures: string[], callback: (map: Map<string, HTMLImageElement>) => void) {\r\n        let htmlImages: HTMLImageElement[] = []\r\n        let imagesToLoad = importedTextures.length\r\n\r\n        const onImageLoad = () => {\r\n            if (--imagesToLoad == 0) {\r\n                const map = new Map();\r\n                for (let i = 0; i < importedTextures.length; i++) {\r\n                    map.set(importedTextures[i], htmlImages[i]);\r\n                };\r\n                callback(map)\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < imagesToLoad; i++) {\r\n            const image = new Image()\r\n            image.src = importedTextures[i]\r\n            htmlImages.push(image)\r\n            image.onload = onImageLoad\r\n        }\r\n    }\r\n}","import { Vec2, Vec3 } from '../../utils'\r\nimport Cuboid from './Cuboid'\r\nimport texture from '../../../textures/wall.png'\r\nimport Config from '../../Config'\r\nimport { Program } from '../../programs/Program'\r\n\r\nexport default class Wall extends Cuboid {\r\n    importedTexture = texture\r\n    texturesInLine = 16\r\n\r\n    value: string\r\n\r\n    constructor(gl: WebGLRenderingContext, program: Program, value: string) {\r\n        super(gl, program)\r\n        this.value = value\r\n    }\r\n\r\n    nearDoorLightTexture = 106\r\n    nearDoorDarkTexture = 107\r\n\r\n    onCreation() {\r\n        this.transform.scale = Vec3.one.multiply(Config.gridSize)\r\n        this.setTexture(this.lightTexture)\r\n        this.setTexture(this.darkTexture, 2)\r\n        this.setTexture(this.darkTexture, 3)\r\n    }\r\n\r\n    get textureColor() {\r\n        for (let color of ['gray', 'blue', 'brown']) {\r\n            if (this.value.toLowerCase().includes(color)) {\r\n                return color\r\n            }\r\n        }\r\n        return 'gray'\r\n    }\r\n\r\n    get textureName() {\r\n        for (let lastLetter of ['F', 'E', 'H', 'B', 'S', 'E', 'H']) {\r\n            if (this.value.substr(-1) == lastLetter) {\r\n                return lastLetter\r\n            }\r\n        }\r\n        return null\r\n    }\r\n\r\n\r\n    get lightTexture(): number {\r\n        if (this.transform.rotation.y) {\r\n            return this._darkTexture\r\n        } else {\r\n            return this._lightTexture\r\n        }\r\n    }\r\n\r\n    get darkTexture() {\r\n        if (this.transform.rotation.y) {\r\n            return this._lightTexture\r\n        } else {\r\n            return this._darkTexture\r\n        }\r\n    }\r\n\r\n    private get _lightTexture() {\r\n        switch (this.value) {\r\n            case 'exitRailWall': return 100\r\n            case 'secretExitRailWall': return 122\r\n        }\r\n        switch (this.textureColor) {\r\n            case 'gray':\r\n                switch (this.textureName) {\r\n                    case 'F': return 4      //flag\r\n                    case 'H': return 16     //hitler\r\n                    case 'E': return 20     //eagle\r\n                    default: return 0\r\n                }\r\n            case 'blue':\r\n                switch (this.textureName) {\r\n                    case 'B': return 18    //bars\r\n                    case 'S': return 32     //skeleton bars\r\n                    default: return 34\r\n                }\r\n            case 'brown':\r\n                switch (this.textureName) {\r\n                    case 'E': return 48     //eagle\r\n                    case 'H': return 50     //hitler\r\n                    default: return 52\r\n                }\r\n        }\r\n    }\r\n\r\n    private get _darkTexture() {\r\n        switch (this.value) {\r\n            case 'exitRailWall': return this._lightTexture\r\n            case 'secretExitRailWall': return this._lightTexture\r\n            default: return this._lightTexture + 1\r\n        }\r\n    }\r\n}","export default [\r\n    'lamp',\r\n    'goldenLamp',\r\n    'puddle',\r\n    'bucket',\r\n    'skeleton',\r\n    'bones',\r\n    'bones1',\r\n    'bones2',\r\n    'bones3',\r\n    'bloodBones',\r\n    'enemy',\r\n    'enemyXWalking',\r\n    'enemyYWalking',\r\n    'enemyUp',\r\n    'enemyDown',\r\n    'enemyLeft',\r\n    'enemyRight',\r\n    'dogFood',\r\n    'food',\r\n    'health',\r\n    'ammo',\r\n    'powerUp',\r\n    'machinegun',\r\n    'chaingun',\r\n]","import { EvalDevToolModulePlugin } from \"webpack\"\r\nimport FieldData from \"../../common/FieldData\"\r\nimport NotCollidingFieldValues from \"../../common/NotCollidingFieldValues\"\r\nimport Config from \"./Config\"\r\nimport Level from \"./Level\"\r\nimport Shape from \"./shapes/level/Shape\"\r\nimport { log, Vec2, Vec3 } from \"./utils\"\r\n\r\nexport interface PathfinderFieldData {\r\n    subGridPos: Vec3\r\n    shape: string\r\n    realPos: Vec3\r\n}\r\n\r\nexport default class Pathfinder {\r\n    static instance = new this\r\n\r\n    private allSubFieldsCreated: PathField[] = []\r\n    private envFields: FieldData[] = []\r\n\r\n    private open: PathField[] = []\r\n    private closed: PathField[] = []\r\n\r\n    private readonly subdivisions = 3\r\n\r\n    get subGridSize() {\r\n        return Config.gridSize / this.subdivisions\r\n    }\r\n\r\n    prepareLevel(level: Level) {\r\n        this.envFields = level.gridFields\r\n        this.allSubFieldsCreated = []\r\n    }\r\n\r\n    private subFieldPosData(position: Vec2) {\r\n        const gridPos = this.subGridPosToGridPos(position)\r\n        const envField = this.envFields.find(f => new Vec2(f.x, f.y).equals(gridPos))\r\n        return {\r\n            walkable: !envField || NotCollidingFieldValues.includes(envField.value) || envField.value.toLowerCase().includes('door'),\r\n            shape: envField?.value\r\n        }\r\n    }\r\n\r\n    private subGridPosToGridPos(pos: Vec2) {\r\n        return pos.map(v => Math.floor(v / this.subdivisions))\r\n    }\r\n\r\n    private gridPosToRealPos(pos: Vec2) {\r\n        const realPosVec2 = pos.map(v => v * Config.gridSize + Config.gridSize / 2)\r\n        const gridPosVec3 = new Vec3(realPosVec2.x, 0, realPosVec2.y)\r\n        return gridPosVec3\r\n\r\n    }\r\n\r\n    private realPosToSubGridPos(v: Vec3) {\r\n        const gridPosVec3 = v.map(v => Math.floor(v / this.subGridSize))\r\n        const gridPosVec2 = new Vec2(gridPosVec3.x, gridPosVec3.z)\r\n        return gridPosVec2\r\n    }\r\n\r\n    getAllPathLocations(from: Vec3, to: Vec3) {\r\n        const subGridFrom = this.realPosToSubGridPos(from)\r\n        const subGridTo = this.realPosToSubGridPos(to)\r\n        const subGridPath = this._getAllPathfindLocations(subGridFrom, subGridTo)\r\n\r\n        const realPath: PathfinderFieldData[] = subGridPath.map(subGridField => {\r\n            return {\r\n                subGridPos: this.subGridPosToRealPos(subGridField.position),\r\n                shape: subGridField.shape,\r\n                realPos: this.gridPosToRealPos(this.subGridPosToGridPos(subGridField.position)),\r\n            }\r\n        })\r\n        return realPath\r\n    }\r\n\r\n    private subGridPosToRealPos(v: Vec2) {\r\n        const realPosVec2 = v.map(v => v * this.subGridSize + this.subGridSize / 2)\r\n        const gridPosVec3 = new Vec3(realPosVec2.x, 0, realPosVec2.y)\r\n        return gridPosVec3\r\n    }\r\n\r\n    private _getAllPathfindLocations(subGridFrom: Vec2, subGridTo: Vec2) {\r\n        this.open = []\r\n        this.closed = []\r\n\r\n        const startField = new PathField(subGridFrom, true)\r\n        this.open.push(startField)\r\n\r\n        const { walkable, shape } = this.subFieldPosData(subGridTo)\r\n        const endField = new PathField(subGridTo, walkable, shape)\r\n        if (!endField.walkable) {\r\n            return []\r\n        }\r\n\r\n        while (true) {\r\n            if (this.open.length == 0) {\r\n                return []\r\n            }\r\n            const current = this.leastFCostField()\r\n            if (current.position.equals(endField.position)) {\r\n                if (startField.position.equals(endField.position)) {\r\n                    return []\r\n                } else {\r\n                    return this.getPathUsingParents(current)\r\n                }\r\n            } else {\r\n                const validNeighbours = this.getValidNeighbours(current)\r\n                for (let neighbour of validNeighbours) {\r\n                    this.calculateCost(neighbour, current, endField)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private leastFCostField() {\r\n        const current = this.open.reduce((acc, loc) => acc.fCost < loc.fCost ? acc : loc)\r\n        this.open = this.open.filter(field => field != current)\r\n        this.closed.push(current)\r\n        return current\r\n    }\r\n\r\n    private calculateCost(neighbour: PathField, current: PathField, endField: PathField) {\r\n        if (!this.open.includes(neighbour) || neighbour.gCostWithParent(current) < neighbour.gCost) {\r\n            neighbour.parent = current\r\n            const hDiff = endField.position.substract(neighbour.position).abs\r\n            neighbour.hCost = (hDiff.x + hDiff.y) * 10\r\n            if (this.open.every(f => !f.position.equals(neighbour.position))) {\r\n                this.open.push(neighbour)\r\n            }\r\n        }\r\n    }\r\n\r\n    private getValidNeighbours(field: PathField) {\r\n        const neighbourDiffs = [\r\n            new Vec2(-1, -1),\r\n            new Vec2(-1, 0),\r\n            new Vec2(-1, 1),\r\n            new Vec2(0, -1),\r\n            new Vec2(0, 1),\r\n            new Vec2(1, -1),\r\n            new Vec2(1, 0),\r\n            new Vec2(1, 1),\r\n        ]\r\n        const neighbours = neighbourDiffs.map(diff => {\r\n            const neighbourPos = field.position.add(diff)\r\n            const subFieldAlreadyCreated = this.allSubFieldsCreated.find(field => field.position.equals(neighbourPos))\r\n            if (subFieldAlreadyCreated) {\r\n                return subFieldAlreadyCreated\r\n            } else {\r\n                let { walkable, shape } = this.subFieldPosData(neighbourPos)\r\n                if (diff.x && diff.y && walkable) {\r\n                    const possibleCorners = [\r\n                        new Vec2(neighbourPos.x, field.position.y),\r\n                        new Vec2(field.position.x, neighbourPos.y),\r\n                    ]\r\n                    const allWalkable = possibleCorners.every(corner => {\r\n                        const { walkable, shape } = this.subFieldPosData(corner)\r\n                        return walkable\r\n                    })\r\n                    if (!allWalkable) {\r\n                        walkable = false\r\n                    }\r\n                }\r\n                const subField = new PathField(neighbourPos, walkable, shape)\r\n                this.allSubFieldsCreated.push(subField)\r\n                return subField\r\n            }\r\n        })\r\n        const validNeighbours = neighbours\r\n            .filter(f => f.walkable && !this.closed.includes(f))\r\n        // .filter(f => {\r\n        //     const diff = f.position.substract(field.position)\r\n        //     if (diff.x && diff.y) {\r\n        //         const possibleCorners = [\r\n        //             new Vec2(f.position.x, field.position.y),\r\n        //             new Vec2(field.position.x, f.position.y),\r\n        //         ]\r\n        //         return possibleCorners.every(pos => this.isSubFieldPosWalkable(pos))\r\n        //     }\r\n        // })\r\n        return validNeighbours\r\n    }\r\n\r\n    private getPathUsingParents(end: PathField) {\r\n        let path = []\r\n        path.push(end)\r\n        while (end.parent) {\r\n            end = end.parent\r\n            path.push(end)\r\n        }\r\n        path.reverse()\r\n        path.shift()\r\n        return path\r\n    }\r\n}\r\n\r\nclass PathField {\r\n    position: Vec2\r\n    walkable: boolean\r\n    shape: string\r\n\r\n    parent: PathField\r\n    hCost: number\r\n\r\n    get gCost(): number {\r\n        if (this.parent) {\r\n            return this.gCostWithParent(this.parent)\r\n        } else {\r\n            return 0\r\n        }\r\n    }\r\n\r\n    gCostWithParent(parent: PathField) {\r\n        const diff = parent.position.substract(this.position)\r\n        if (diff.x && diff.y) {\r\n            return parent.gCost + 14\r\n        } else {\r\n            return parent.gCost + 10\r\n        }\r\n    }\r\n\r\n    get fCost() {\r\n        return this.gCost + this.hCost\r\n    }\r\n\r\n    constructor(position: Vec2, walkable: boolean, shape?: string) {\r\n        this.position = position\r\n        this.walkable = walkable\r\n        this.shape = shape\r\n    }\r\n}","import Config from \"./Config\"\r\nimport Shape from \"./shapes/level/Shape\"\r\nimport { Vec3 } from \"./utils\"\r\n\r\nexport default class Raycaster {\r\n    from: Vec3\r\n    dir: Vec3\r\n    private squareGenerator: Generator<Vec3, void, unknown>\r\n\r\n    private constructor(from: Vec3, dir: Vec3) {\r\n        this.from = from.clone()\r\n        this.dir = dir.clone()\r\n        this.squareGenerator = this.nextSquareGenerator()\r\n    }\r\n\r\n    static fromDir(from: Vec3, dir: Vec3) {\r\n        return new Raycaster(from, dir)\r\n    }\r\n\r\n    static fromTo(from: Vec3, to: Vec3) {\r\n        const dir = to.substract(from).yZeroed.normalize\r\n        return new Raycaster(from, dir)\r\n    }\r\n\r\n    private nextSquare() {\r\n        return this.squareGenerator.next().value\r\n    }\r\n\r\n    nextShape(shapes: Shape[]) {\r\n        let nextSquare = this.nextSquare()\r\n        const limit = 100\r\n        for (let i = 0; i < limit * 2; i++) {\r\n            if (nextSquare) {\r\n                for (let shape of shapes) {\r\n                    if (shape.transform.position.yZeroed.equals(nextSquare.yZeroed)) {\r\n                        return shape\r\n                    }\r\n                }\r\n                nextSquare = this.nextSquare()\r\n            }\r\n        }\r\n        return null\r\n    }\r\n\r\n    private * nextSquareGenerator() {\r\n        let startClone = this.from.clone()\r\n        let dirClone = this.dir.clone()\r\n        const gridSize = Config.gridSize\r\n        const firstTileCenter = startClone.map(v => Math.floor(v / gridSize) * gridSize + gridSize / 2).yZeroed\r\n        yield firstTileCenter\r\n        let firstYield = true\r\n        while (true) {\r\n            const [nextTileCenter, nextIntersection] = this.nextSquareInner(startClone, dirClone)\r\n            if (firstYield) {\r\n                firstYield = false\r\n            }\r\n            yield nextTileCenter\r\n            startClone = nextIntersection\r\n        }\r\n    }\r\n\r\n    private nextSquareInner(start: Vec3, dir: Vec3) {\r\n        const gridSize = Config.gridSize\r\n        if (dir.x >= 0) {\r\n            start.x += gridSize * 0.0001\r\n        } else {\r\n            start.x -= gridSize * 0.0001\r\n        }\r\n        if (dir.z >= 0) {\r\n            start.z += gridSize * 0.0001\r\n        } else {\r\n            start.z -= gridSize * 0.0001\r\n        }\r\n        const firstTileCenter = start.map(v => Math.floor(v / gridSize) * gridSize + gridSize / 2).yZeroed\r\n        let nextIntersectingAxes = Vec3.zero\r\n        if (start.x * dir.x > 0) {\r\n            nextIntersectingAxes.x = Math.ceil(start.x / gridSize) * gridSize\r\n        } else {\r\n            nextIntersectingAxes.x = Math.floor(start.x / gridSize) * gridSize\r\n        }\r\n        if (start.z * dir.z > 0) {\r\n            nextIntersectingAxes.z = Math.ceil(start.z / gridSize) * gridSize\r\n        } else {\r\n            nextIntersectingAxes.z = Math.floor(start.z / gridSize) * gridSize\r\n        }\r\n        const diff = start.substract(nextIntersectingAxes).abs\r\n        const diffRatio = Math.abs(diff.z / diff.x)\r\n        const dirRatio = Math.abs(dir.z / dir.x)\r\n        let nextSquareInDirection, nextIntersection\r\n        if (diffRatio > dirRatio) {\r\n            nextSquareInDirection = new Vec3(1, 0, 0)\r\n            nextIntersection = new Vec3(\r\n                nextIntersectingAxes.x,\r\n                0,\r\n                start.z + (dir.z / dir.x) * (nextIntersectingAxes.x - start.x),\r\n            )\r\n        } else {\r\n            if (diffRatio < dirRatio) {\r\n                nextSquareInDirection = new Vec3(0, 0, 1)\r\n            } else {\r\n                nextSquareInDirection = new Vec3(1, 0, 1)\r\n            }\r\n            nextIntersection = new Vec3(\r\n                start.x + (dir.x / dir.z) * (nextIntersectingAxes.z - start.z),\r\n                0,\r\n                nextIntersectingAxes.z,\r\n            )\r\n        }\r\n        const nextSquare = new Vec3(\r\n            dir.x > 0 ? nextSquareInDirection.x : -nextSquareInDirection.x,\r\n            0,\r\n            dir.z > 0 ? nextSquareInDirection.z : -nextSquareInDirection.z,\r\n        )\r\n        const nextTileCenter = firstTileCenter.add(nextSquare.multiply(gridSize))\r\n        return [nextTileCenter, nextIntersection]\r\n    }\r\n}","import texture from '../../../textures/uvTest.png'\r\nimport { hexToRgb, Vec3 } from '../../utils'\r\nimport Shape from './Shape'\r\nimport Config from '../../Config'\r\nimport { Program } from '../../programs/Program'\r\n\r\nexport default class Plane extends Shape {\r\n    VERTICES = new Float32Array([\r\n        0.5, 0, 0.5,\r\n        -0.5, 0, -0.5,\r\n        -0.5, 0, 0.5,\r\n        0.5, 0, -0.5,\r\n        -0.5, 0, -0.5,\r\n        0.5, 0, 0.5,\r\n    ])\r\n\r\n    TEXCOORDS = new Float32Array([\r\n        1, 1,\r\n        0, 0,\r\n        0, 1,\r\n        1, 0,\r\n        0, 0,\r\n        1, 1,\r\n    ])\r\n\r\n    COLORS = new Uint8Array([\r\n        80, 70, 200,\r\n        80, 70, 200,\r\n        80, 70, 200,\r\n        80, 70, 200,\r\n        80, 70, 200,\r\n        80, 70, 200,\r\n    ])\r\n\r\n    importedTexture = texture\r\n\r\n    constructor(gl: WebGLRenderingContext, program: Program) {\r\n        super(gl, program)\r\n        this.transform.scale.set(Config.gridSize, 1, Config.gridSize)\r\n    }\r\n\r\n    setColor(color: string) {\r\n        let colors = Vec3.arrayToVec3Array(this.COLORS)\r\n        colors = colors.map(c => hexToRgb(color))\r\n        this.COLORS = new Uint8Array(Vec3.vec3ArrayToArray(colors))\r\n    }\r\n}","import texture from '../../../../textures/objects.png'\r\nimport AudioPlayer from '../../../BetterAudio'\r\nimport Camera from '../../../Camera'\r\nimport Config from '../../../Config'\r\nimport { Program } from '../../../programs/Program'\r\nimport { degToRad, Vec2, Vec3 } from '../../../utils'\r\nimport Plane from '../Plane'\r\nimport BetterAudio from '../../../BetterAudio'\r\nimport UI from '../../ui/UI'\r\n\r\nexport default abstract class Pickup extends Plane {\r\n    importedTexture = texture\r\n    abstract audio: BetterAudio\r\n\r\n    pickupRange = Config.gridSize * 0.5\r\n    pickedUp = false\r\n\r\n    private firstTextureSet = false\r\n    protected abstract textureNumber: number\r\n\r\n    onCreation() {\r\n        this.transform.scale = Vec3.one.multiply(Config.gridSize)\r\n        this.transform.rotation.x = degToRad(90)\r\n        this.setTexture(this.textureNumber)\r\n    }\r\n\r\n    lookAtCamera(cameraY: number) {\r\n        this.transform.rotation.y = -cameraY\r\n    }\r\n\r\n    private texturesInLine = 8\r\n\r\n    get textureSize() {\r\n        return 1 / this.texturesInLine\r\n    }\r\n\r\n    canBePickedUp(camera: Camera) {\r\n        return true\r\n    }\r\n\r\n    pickUp(camera: Camera) {\r\n        if (!this.pickedUp && this.canBePickedUp(camera)) {\r\n            this.onPickedUp(camera)\r\n            this.audio.play()\r\n            UI.instance.flashYellow()\r\n            this.pickedUp = true\r\n        }\r\n    }\r\n\r\n    onPickedUp(camera: Camera) { }\r\n\r\n    setTexture(textureNumber: number) {\r\n        if (textureNumber == this.textureNumber && this.firstTextureSet) return\r\n        this.textureNumber = textureNumber\r\n        let verticesVec2Array = Vec2.arrayToVec2Array(this.initialTexcoords)\r\n        const texturePos = new Vec2(textureNumber % this.texturesInLine, Math.floor(textureNumber / this.texturesInLine)).multiply(this.textureSize)\r\n        verticesVec2Array = verticesVec2Array.map(vertex => vertex.multiply(this.textureSize).add(texturePos))\r\n        this.TEXCOORDS = new Float32Array(Vec2.vec2ArrayToArray(verticesVec2Array))\r\n        if (!this.firstTextureSet) {\r\n            this.firstTextureSet = true\r\n            this.updateBuffers()\r\n        }\r\n    }\r\n}","import Camera from '../../../Camera'\r\nimport { degToRad, Vec2, Vec3 } from '../../../utils'\r\nimport UI from '../../ui/UI'\r\nimport Pickup from './Pickup'\r\nimport audio from \"../../../../sounds/P_AMMO.wav\"\r\nimport BetterAudio from '../../../BetterAudio'\r\n\r\nexport default class Ammo extends Pickup {\r\n    textureNumber = 43\r\n    ammoCount = 4\r\n    audio = new BetterAudio(audio)\r\n\r\n    onPickedUp(camera: Camera) {\r\n        UI.instance.ammo += this.ammoCount\r\n    }\r\n}","import Camera from '../../../Camera'\r\nimport Config from '../../../Config'\r\nimport { degToRad, Vec2, Vec3 } from '../../../utils'\r\nimport Pickup from './Pickup'\r\nimport audio from \"../../../../sounds/P_AMMO.wav\"\r\nimport BetterAudio from '../../../BetterAudio'\r\n\r\nexport default class Flag extends Pickup {\r\n    textureNumber = 6\r\n    audio = new BetterAudio(audio)\r\n    onCreation() {\r\n        super.onCreation()\r\n        const scale = 0.5\r\n        this.transform.scale = this.transform.scale.multiply(scale)\r\n        this.transform.position.y = -50\r\n    }\r\n\r\n    onPickedUp(camera: Camera) {\r\n    }\r\n}","import FieldData from '../../../../common/FieldData'\r\nimport texture from '../../../textures/guard.png'\r\nimport BetterAudio from '../../BetterAudio'\r\nimport Camera from '../../Camera'\r\nimport Config from '../../Config'\r\nimport Pathfinder from '../../Pathfinder'\r\nimport { PathfinderFieldData } from '../../Pathfinder'\r\nimport { Program } from '../../programs/Program'\r\nimport Raycaster from '../../Raycaster'\r\nimport { degToRad, log, radToDeg, Vec2, Vec3 } from '../../utils'\r\nimport UI from '../ui/UI'\r\nimport Door from './Door'\r\nimport Ammo from './pickups/Ammo'\r\nimport Flag from './pickups/Flag'\r\nimport Plane from './Plane'\r\nimport Shape from './Shape'\r\nimport audioShot from \"../../../sounds/WSND0021.wav\"\r\n\r\nimport audioDie1 from \"../../../sounds/WSND0012.wav\"\r\nimport audioDie2 from \"../../../sounds/WSND0013.wav\"\r\nimport audioDie4 from \"../../../sounds/WSND0034.wav\"\r\nimport audioDie5 from \"../../../sounds/WSND0035.wav\"\r\nimport audioDie6 from \"../../../sounds/WSND0039.wav\"\r\nimport audioDie7 from \"../../../sounds/WSND0040.wav\"\r\nimport audioDie8 from \"../../../sounds/WSND0041.wav\"\r\nimport audioDie9 from \"../../../sounds/WSND0042.wav\"\r\nimport audioSight from \"../../../sounds/WSND0000.wav\"\r\n\r\nexport default class Enemy extends Plane {\r\n    loot: Ammo\r\n    tempFlag: Flag\r\n    pathfinderFields: PathfinderFieldData[] = []\r\n    score = 100\r\n    followingPlayer: Camera\r\n    importedTexture = texture\r\n    texturedWidth = 28 / 64\r\n\r\n    private textureRotation = 0\r\n    private texturesInLine = 8\r\n    private textureNumber: number\r\n    private readonly stateToTextureMap = new Map([\r\n        ['shooting', [48, 49, 50]],\r\n        ['standing', [0]],\r\n        ['walking', [8, 16, 24, 32]],\r\n        ['dying', [40, 41, 42, 43, 44]],\r\n        ['hit', [47, 0]],\r\n        ['dead', [44]],\r\n    ])\r\n\r\n    shotNoticeDistance = Config.gridSize * 10\r\n    private dir = Vec3.zero\r\n    private shootingDistance = Config.gridSize * 5\r\n    private damageDealed = 8\r\n    private walkingDirection = Vec3.zero\r\n    state = 'standing'\r\n    private timeSinceLastUpdate = 0\r\n    private hp = 100\r\n    private followingSpeed = Config.gridSize * 1.25\r\n    private nextDir: Vec3 = null\r\n    private timeSinceLastPathfinding = 0\r\n    private readonly initialState\r\n    private readonly pathfindingDelay = 0.5\r\n    private readonly frameTime = 0.2\r\n    readonly audioSight = new BetterAudio(audioSight)\r\n    private readonly audiosDie = [\r\n        new BetterAudio(audioDie1),\r\n        new BetterAudio(audioDie2),\r\n        new BetterAudio(audioDie4),\r\n        new BetterAudio(audioDie5),\r\n        new BetterAudio(audioDie6),\r\n        new BetterAudio(audioDie7),\r\n        new BetterAudio(audioDie8),\r\n        new BetterAudio(audioDie9),\r\n    ]\r\n    private readonly audioShot = new BetterAudio(audioShot)\r\n\r\n    constructor(gl: WebGLRenderingContext, program: Program, type?: string) {\r\n        super(gl, program)\r\n        this.loot = new Ammo(this.gl, program)\r\n        this.tempFlag = new Flag(this.gl, program)\r\n        this.tempFlag.setInitialState()\r\n        this.transform.rotation.x = degToRad(90)\r\n        if (type == \"x\") {\r\n            this.walkingDirection = Vec3.right\r\n            this.state = \"walking\"\r\n            this.dir = this.walkingDirection\r\n        } else if (type == \"z\") {\r\n            this.walkingDirection = Vec3.forward\r\n            this.state = \"walking\"\r\n            this.dir = this.walkingDirection\r\n        } else if (type == \"up\") {\r\n            this.dir = Vec3.forward\r\n        } else if (type == \"down\") {\r\n            this.dir = Vec3.backward\r\n        } else if (type == \"left\") {\r\n            this.dir = Vec3.left\r\n        } else if (type == \"right\") {\r\n            this.dir = Vec3.right\r\n        }\r\n        this.initialState = this.state\r\n    }\r\n\r\n    get isDead() {\r\n        return this.hp <= 0\r\n    }\r\n\r\n    update(deltaTime: number, camera: Camera) {\r\n        if (UI.instance.state == 'end') {\r\n            this.followingPlayer = null\r\n        } else {\r\n            this.timeSinceLastUpdate += deltaTime\r\n            const frameTime = this.state == \"shooting\" ? 0.3 : this.frameTime\r\n            if (this.timeSinceLastUpdate > frameTime) {\r\n                this.timeSinceLastUpdate = 0\r\n                const textures = this.stateToTextureMap.get(this.state)\r\n                const index = textures.indexOf(this.textureNumber) + 1\r\n                if (index < textures.length) {\r\n                    this.setTexture(textures[index])\r\n                } else {\r\n                    this.textureNumber = 0\r\n                    if (this.state == 'dying') {\r\n                        this.state = 'dead'\r\n                        UI.instance.enemiesKilled++\r\n                    } else if (this.state == 'hit') {\r\n                        this.state = 'walking'\r\n                    } else {\r\n                        this.setTexture(textures[0])\r\n                    }\r\n                }\r\n                if (this.state == \"shooting\" && index == textures.length - 1) {\r\n                    if (UI.instance.health > 0) {\r\n                        UI.instance.health -= Math.floor(Math.random() * (this.damageDealed * 2 - this.damageDealed * 0.75)) + this.damageDealed * 0.75\r\n                        UI.instance.flashRed()\r\n                        this.audioShot.play()\r\n                        camera.audioHit.play()\r\n                        if (UI.instance.health <= 0) {\r\n                            UI.instance.health = 0\r\n                            camera.killer = this\r\n                        }\r\n                    }\r\n                }\r\n                if (this.followingPlayer && UI.instance.health == 0) {\r\n                    this.followingPlayer = null\r\n                    this.dir = this.transform.position.to(camera.transform.position)\r\n                    this.state = \"standing\"\r\n                }\r\n            }\r\n            this.updateBuffers()\r\n        }\r\n    }\r\n\r\n    damage(value: number) {\r\n        if (['dying', 'dead'].includes(this.state)) return\r\n        this.hp -= value\r\n        this.state = 'hit'\r\n        this.timeSinceLastUpdate = 0\r\n        if (this.hp <= 0) {\r\n            this.hp = 0\r\n            this.state = 'dying'\r\n            this.audiosDie[Math.floor(Math.random() * this.audiosDie.length)].play()\r\n        } else {\r\n            // this.audioPain.play()\r\n        }\r\n    }\r\n\r\n    lookAtCamera(cameraY: number) {\r\n        this.transform.rotation.y = -cameraY\r\n    }\r\n\r\n    pathfind(destination: Vec3) {\r\n\r\n    }\r\n\r\n    makeStepTowardsPlayer(deltaTime: number, doors: Door[]) {\r\n        this.timeSinceLastPathfinding += deltaTime\r\n        if (this.followingPlayer) {\r\n            if (this.timeSinceLastPathfinding >= this.pathfindingDelay) {\r\n                this.timeSinceLastPathfinding = 0\r\n                if (this.pathfinderFields.length <= 80) {\r\n                    this.pathfinderFields = Pathfinder.instance.getAllPathLocations(this.transform.position, this.followingPlayer.transform.position)\r\n                    this.pathfinderFields = this.pathfinderFields.map(v => {\r\n                        return {\r\n                            subGridPos: new Vec3(v.subGridPos.x, -30, v.subGridPos.z),\r\n                            shape: v.shape,\r\n                            realPos: v.realPos,\r\n                        }\r\n                    })\r\n                } else {\r\n                    this.state = \"standing\"\r\n                    this.followingPlayer = null\r\n                    this.pathfinderFields = []\r\n                }\r\n            }\r\n            if (this.pathfinderFields.length <= 1) return\r\n            this.dir = this.pathfinderFields[1].subGridPos.substract(this.transform.position).yZeroed.normalize\r\n            for (let i = 1; i < 3; i++) {\r\n                const futureField = this.pathfinderFields[i]\r\n                if (futureField && futureField.shape == \"door\") {\r\n                    const door = doors.find(d => d.initialTransform.position.yZeroed.equals(futureField.realPos.yZeroed))\r\n                    if (door) {\r\n                        if (door.canInteract) {\r\n                            door.toggle()\r\n                        }\r\n                    }\r\n                    break\r\n                }\r\n            }\r\n            this.transform.position = this.transform.position.add(this.dir.multiply(this.followingSpeed * deltaTime))\r\n            // this.followingPlayer = null\r\n        }\r\n    }\r\n\r\n    makeStepIfWalking(deltaTime: number, shapes: Shape[]) {\r\n        if (!this.followingPlayer && this.initialState == \"walking\" && this.state == \"walking\") {\r\n            const raycaster = Raycaster.fromDir(this.transform.position, this.dir)\r\n            const nextShape = raycaster.nextShape(shapes)\r\n            if (nextShape) {\r\n                const distance = this.transform.position.distanceTo(nextShape.transform.position)\r\n                if (distance <= Config.gridSize && !this.nextDir) {\r\n                    this.nextDir = this.dir.inverted\r\n                    this.state = \"standing\"\r\n                    setTimeout(() => {\r\n                        this.dir = this.nextDir\r\n                        setTimeout(() => {\r\n                            this.state = \"walking\"\r\n                            this.nextDir = null\r\n                        }, 500)\r\n                    }, 1000)\r\n                }\r\n                this.transform.position = this.transform.position.add(this.dir.multiply(this.followingSpeed * deltaTime))\r\n            }\r\n        }\r\n    }\r\n\r\n    rotateTexture(targetPosition: Vec3) {\r\n        let toTargetDir = targetPosition.substract(this.transform.position).yZeroed.normalize\r\n        let toTargetAngle = Math.atan2(toTargetDir.z, toTargetDir.x)\r\n        let walkingAngle = Math.atan2(this.dir.z, this.dir.x)\r\n        let angleDiff = radToDeg(walkingAngle - toTargetAngle)\r\n        if (angleDiff > 180) angleDiff -= 360\r\n        if (angleDiff < -180) angleDiff += 360\r\n        const correctedDiff = angleDiff > 0 ? angleDiff + 22.5 : angleDiff - 22.5\r\n        this.textureRotation = parseInt((correctedDiff / 45).toString())\r\n        return angleDiff\r\n    }\r\n\r\n    canSee(target: Vec3, shapes: Shape[]) {\r\n        const raycaster = Raycaster.fromTo(this.transform.position, target.yZeroed)\r\n        const nextShape = raycaster.nextShape(shapes)\r\n        if (!nextShape) return false\r\n        return nextShape.transform.position.yZeroed.distanceTo(this.transform.position.yZeroed) > this.transform.position.yZeroed.distanceTo(target.yZeroed)\r\n    }\r\n\r\n    tryToShoot(camera: Camera, shapes: Shape[]) {\r\n        if (this.state == 'dead' || this.state == \"dying\" || this.state == \"hit\" || !this.followingPlayer) return false\r\n        if (UI.instance.health > 0) {\r\n            if (\r\n                this.transform.position.distanceTo(camera.transform.position) <= this.shootingDistance\r\n                && this.canSee(camera.transform.position, shapes)\r\n            ) {\r\n                this.state = \"shooting\"\r\n                return true\r\n            } else {\r\n                this.state = \"walking\"\r\n                return false\r\n            }\r\n            // this.state = 'walking'\r\n        } else {\r\n            this.state = 'standing'\r\n            this.followingPlayer = null\r\n        }\r\n        return false\r\n    }\r\n\r\n    private get textureSize() {\r\n        return 1 / this.texturesInLine\r\n    }\r\n\r\n    private setTexture(textureNumber: number) {\r\n        // if (textureNumber == this.textureNumber) {\r\n        //     console.log('olewam', textureNumber)\r\n        //     return\r\n\r\n        // }\r\n        this.textureNumber = textureNumber\r\n\r\n        if (this.state == 'walking' || this.state == 'standing') {\r\n            if (this.textureRotation >= 0) {\r\n                textureNumber += this.textureRotation\r\n            } else {\r\n                textureNumber += this.textureRotation + this.texturesInLine\r\n            }\r\n        }\r\n\r\n        let verticesVec2Array = Vec2.arrayToVec2Array(this.initialTexcoords)\r\n        const texturePos = new Vec2(textureNumber % this.texturesInLine, Math.floor(textureNumber / this.texturesInLine)).multiply(this.textureSize)\r\n        verticesVec2Array = verticesVec2Array.map(vertex => vertex.multiply(this.textureSize).add(texturePos))\r\n        this.TEXCOORDS = new Float32Array(Vec2.vec2ArrayToArray(verticesVec2Array))\r\n    }\r\n}","import BetterAudio from '../../../BetterAudio'\r\nimport Camera from '../../../Camera'\r\nimport { degToRad, Vec2, Vec3 } from '../../../utils'\r\nimport UI from '../../ui/UI'\r\nimport Pickup from './Pickup'\r\n\r\nexport default abstract class HealthItem extends Pickup {\r\n    abstract healthRestored: number\r\n    abstract audio: BetterAudio\r\n\r\n    onPickedUp(camera: Camera) {\r\n        UI.instance.health += this.healthRestored\r\n        if (UI.instance.health > 100) {\r\n            UI.instance.health = 100\r\n        }\r\n    }\r\n\r\n    canBePickedUp(camera: Camera) {\r\n        return UI.instance.health < 100\r\n    }\r\n}","import HealthItem from './HealthItem'\r\nimport audio from \"../../../../sounds/P_FOOD.wav\"\r\nimport BetterAudio from '../../../BetterAudio'\r\n\r\nexport default class DogFood extends HealthItem {\r\n    healthRestored = 4\r\n    textureNumber = 11\r\n    audio = new BetterAudio(audio)\r\n}","import HealthItem from './HealthItem'\r\nimport audio from \"../../../../sounds/P_FOOD.wav\"\r\nimport BetterAudio from '../../../BetterAudio'\r\n\r\nexport default class Food extends HealthItem {\r\n    healthRestored = 10\r\n    textureNumber = 41\r\n    audio = new BetterAudio(audio)\r\n}","import HealthItem from './HealthItem'\r\nimport audio from \"../../../../sounds/P_MEDKIT.wav\"\r\nimport BetterAudio from '../../../BetterAudio'\r\n\r\nexport default class HealthPack extends HealthItem {\r\n    healthRestored = 25\r\n    textureNumber = 42\r\n    audio = new BetterAudio(audio)\r\n}","import Camera from '../../../Camera'\r\nimport { degToRad, Vec2, Vec3 } from '../../../utils'\r\nimport UI from '../../ui/UI'\r\nimport Pickup from './Pickup'\r\nimport audio from \"../../../../sounds/P_MGUN.wav\"\r\nimport BetterAudio from '../../../BetterAudio'\r\n\r\nexport default class Machinegun extends Pickup {\r\n    textureNumber = 44\r\n    audio = new BetterAudio(audio)\r\n\r\n    onPickedUp(camera: Camera) {\r\n        UI.instance.weapons.availableTypes.push('machinegun')\r\n        UI.instance.weapon = 'machinegun'\r\n    }\r\n}","export default new Map([\r\n    ['demo', 0],\r\n    ['deathcam', 1],\r\n    ['puddle', 2],\r\n    ['greenBarrel', 3],\r\n    ['table', 4],\r\n    ['blood', 5],\r\n    ['flag', 6],\r\n    ['standingLamp', 8],\r\n    ['goldenLamp', 9],\r\n    ['hangingSkeleton', 10],\r\n    ['pillar', 12],\r\n    ['bones1', 13],\r\n    ['pots', 14],\r\n    ['furnance', 15],\r\n    ['greenPlant', 16],\r\n    ['skeleton', 17],\r\n    ['sink', 18],\r\n    ['brownPlant', 19],\r\n    ['urn', 20],\r\n    ['bones2', 21],\r\n    ['bones3', 22],\r\n    ['table', 24],\r\n    ['lamp', 25],\r\n    ['morePots', 26],\r\n    ['armor', 27],\r\n    ['cage', 28],\r\n    ['spears', 29],\r\n    ['vines', 30],\r\n    ['skeletonCage', 32],\r\n    ['bones', 33],\r\n    ['bed', 36],\r\n    ['bucket', 40],\r\n    ['bloodBones', 57],\r\n    ['brownBarrel', 58],\r\n    ['well', 59],\r\n    ['emptyWell', 60],\r\n])","import { log, m4, Transform, Vec3 } from \"../../utils\";\r\n\r\nexport class GridBoundingBox {\r\n    center: Vec3\r\n    size: Vec3\r\n\r\n    constructor(center: Vec3, size: Vec3) {\r\n        this.center = center\r\n        this.size = size\r\n    }\r\n\r\n    get halfSize() {\r\n        return this.size.multiply(0.5)\r\n    }\r\n\r\n    get negativeCorner() {\r\n        return this.center.substract(this.halfSize)\r\n    }\r\n\r\n    get positiveCorner() {\r\n        return this.center.add(this.halfSize)\r\n    }\r\n\r\n    isColliding(v: Vec3) {\r\n        const pos = this.positiveCorner\r\n        const neg = this.negativeCorner\r\n        return neg.x <= v.x && v.x <= pos.x && neg.z <= v.z && v.z <= pos.z\r\n    }\r\n\r\n    pointSide(v: Vec3) {\r\n        const diff = this.center.substract(v)\r\n        const diffRotated = diff\r\n\r\n        let pointSide = Vec3.zero\r\n        if (diffRotated.x > this.halfSize.x) {\r\n            pointSide.x = -1\r\n        }\r\n        if (diffRotated.x < -this.halfSize.x) {\r\n            pointSide.x = 1\r\n        }\r\n        if (diffRotated.z > this.halfSize.z) {\r\n            pointSide.z = -1\r\n        }\r\n        if (diffRotated.z < -this.halfSize.z) {\r\n            pointSide.z = 1\r\n        }\r\n        return pointSide\r\n    }\r\n\r\n    nearestDistanceDirection(v: Vec3) {\r\n        const side = this.pointSide(v)\r\n        if (side.x && side.z) {\r\n            return v.substract(this.nearestCorner(v)).yZeroed.normalize\r\n        } else {\r\n            return side\r\n        }\r\n    }\r\n\r\n    // only a non rotated cuboid\r\n    pointFarthestSide(v: Vec3) {\r\n        const diff = this.center.substract(v)\r\n        let pointSide = this.pointSide(v)\r\n        if (pointSide.x && pointSide.z) {\r\n            if (Math.abs(diff.x) > Math.abs(diff.z)) {\r\n                pointSide.z = 0\r\n            } else {\r\n                pointSide.x = 0\r\n            }\r\n        }\r\n        return pointSide\r\n    }\r\n\r\n    // cuboid rotated by any value\r\n    nearestCorner(v: Vec3) {\r\n        const diff = this.center.substract(v)\r\n        if (diff.x <= 0 && diff.z <= 0) {\r\n            return this.center.substract(this.halfSize)\r\n        } else if (diff.x <= 0 && diff.z >= 0) {\r\n            const cornerRelative = new Vec3(-this.halfSize.x, 0, this.halfSize.z)\r\n            return this.center.substract(cornerRelative)\r\n        } else if (diff.x >= 0 && diff.z <= 0) {\r\n            const cornerRelative = new Vec3(this.halfSize.x, 0, -this.halfSize.z)\r\n            return this.center.substract(cornerRelative)\r\n        } else if (diff.x >= 0 && diff.z >= 0) {\r\n            return this.center.add(this.halfSize)\r\n        }\r\n    }\r\n\r\n    basePointsYZeroed() {\r\n        const a = this.halfSize.yZeroed\r\n        return [\r\n            this.center.add(a),\r\n            this.center.add(a.xInverted),\r\n            this.center.add(a.yInverted),\r\n            this.center.substract(a),\r\n        ]\r\n    }\r\n}","import texture from '../../../../textures/objects.png'\r\nimport Config from '../../../Config'\r\nimport { Program } from '../../../programs/Program'\r\nimport { degToRad, Vec2, Vec3 } from '../../../utils'\r\nimport Plane from '../Plane'\r\nimport DecorationMap from '../../../../../common/DecorationMap'\r\nimport { GridBoundingBox } from '../GridBoundingBox'\r\n\r\nexport default class Decoration extends Plane {\r\n    type: string\r\n    bb: GridBoundingBox\r\n\r\n    constructor(gl: WebGLRenderingContext, program: Program, type: string) {\r\n        super(gl, program)\r\n        this.type = type\r\n    }\r\n\r\n    createBB() {\r\n        this.bb = new GridBoundingBox(this.transform.position, Vec3.one.multiply(Config.gridSize))\r\n    }\r\n\r\n    get textureNumber() {\r\n        return DecorationMap.get(this.type)\r\n    }\r\n\r\n    importedTexture = texture\r\n\r\n    private firstTextureSet = false\r\n\r\n    onCreation() {\r\n        this.transform.scale = Vec3.one.multiply(Config.gridSize)\r\n        this.transform.rotation.x = degToRad(90)\r\n        this.setTexture(this.textureNumber)\r\n    }\r\n\r\n    lookAtCamera(cameraY: number) {\r\n        this.transform.rotation.y = -cameraY\r\n    }\r\n\r\n    private texturesInLine = 8\r\n\r\n    get textureSize() {\r\n        return 1 / this.texturesInLine\r\n    }\r\n\r\n    setTexture(textureNumber: number) {\r\n        let verticesVec2Array = Vec2.arrayToVec2Array(this.initialTexcoords)\r\n        const texturePos = new Vec2(textureNumber % this.texturesInLine, Math.floor(textureNumber / this.texturesInLine)).multiply(this.textureSize)\r\n        verticesVec2Array = verticesVec2Array.map(vertex => vertex.multiply(this.textureSize).add(texturePos))\r\n        this.TEXCOORDS = new Float32Array(Vec2.vec2ArrayToArray(verticesVec2Array))\r\n        if (!this.firstTextureSet) {\r\n            this.firstTextureSet = true\r\n            this.updateBuffers()\r\n        }\r\n    }\r\n}","import Camera from '../../../Camera'\r\nimport UI from '../../ui/UI'\r\nimport Pickup from './Pickup'\r\n\r\nexport default abstract class PointItem extends Pickup {\r\n    abstract textureNumber: number\r\n    abstract givenScore: number\r\n\r\n    onPickedUp(camera: Camera) {\r\n        UI.instance.score += this.givenScore\r\n        UI.instance.treasuresFound++\r\n    }\r\n}","import PointItem from './PointItem'\r\nimport audio from \"../../../../sounds/T_CROSS.wav\"\r\nimport BetterAudio from '../../../BetterAudio'\r\n\r\nexport default class GoldenCross extends PointItem {\r\n    textureNumber = 49\r\n    givenScore = 100\r\n    audio = new BetterAudio(audio)\r\n}","import PointItem from './PointItem'\r\nimport audio from \"../../../../sounds/T_CUP.wav\"\r\nimport BetterAudio from '../../../BetterAudio'\r\n\r\nexport default class GoldenCup extends PointItem {\r\n    textureNumber = 50\r\n    givenScore = 500\r\n    audio = new BetterAudio(audio)\r\n}","import PointItem from './PointItem'\r\nimport audio from \"../../../../sounds/T_CHEST.wav\"\r\nimport BetterAudio from '../../../BetterAudio'\r\n\r\nexport default class GoldenBox extends PointItem {\r\n    textureNumber = 51\r\n    givenScore = 1000\r\n    audio = new BetterAudio(audio)\r\n}","import PointItem from './PointItem'\r\nimport audio from \"../../../../sounds/T_CROWN.wav\"\r\nimport BetterAudio from '../../../BetterAudio'\r\n\r\nexport default class GoldenCrown extends PointItem {\r\n    textureNumber = 52\r\n    givenScore = 5000\r\n    audio = new BetterAudio(audio)\r\n}","import Camera from '../../../Camera'\r\nimport UI from '../../ui/UI'\r\nimport Pickup from './Pickup'\r\nimport audio from \"../../../../sounds/P_LIFE.wav\"\r\nimport BetterAudio from '../../../BetterAudio'\r\n\r\nexport default class PowerUp extends Pickup {\r\n    textureNumber = 56\r\n    audio = new BetterAudio(audio)\r\n    onPickedUp(camera: Camera) {\r\n        UI.instance.health = 100\r\n        UI.instance.ammo += 25\r\n        UI.instance.lives++\r\n    }\r\n}","import { Vec2, Vec3 } from '../../utils'\r\nimport Cuboid from './Cuboid'\r\nimport texture from '../../../textures/wall.png'\r\nimport Config from '../../Config'\r\nimport { Program } from '../../programs/Program'\r\nimport Interactable from './Interactable'\r\nimport UI from '../ui/UI'\r\nimport BetterAudio from '../../BetterAudio'\r\nimport audio from \"../../../sounds/WSND0030.wav\"\r\n\r\nexport default class Lever extends Cuboid implements Interactable {\r\n    importedTexture = texture\r\n    texturesInLine = 16\r\n    audio = new BetterAudio(audio)\r\n    value: string\r\n\r\n    constructor(gl: WebGLRenderingContext, program: Program, value: string) {\r\n        super(gl, program)\r\n        this.value = value\r\n    }\r\n\r\n    canInteract = true\r\n\r\n    lightTexture = 101\r\n    pressedTexture = 113\r\n\r\n    onCreation() {\r\n        this.transform.scale = Vec3.one.multiply(Config.gridSize)\r\n        this.setTexture(this.lightTexture)\r\n    }\r\n\r\n    updateBuffers() {\r\n        super.updateBuffers()\r\n    }\r\n\r\n    get darkTexture() {\r\n        return this.lightTexture\r\n    }\r\n\r\n    toggle() {\r\n        if (UI.instance.state != 'end') {\r\n            this.audio.play()\r\n            this.setTexture(this.pressedTexture)\r\n            UI.instance.state = 'end'\r\n            UI.instance.levelEnd.calculateValues()\r\n            UI.instance.endTime = new Date()\r\n            this.updateBuffers()\r\n        }\r\n    }\r\n}","import { Vec2, Vec3 } from '../../utils'\r\nimport Config from '../../Config'\r\nimport Wall from './Wall'\r\nimport Interactable from './Interactable'\r\nimport Camera from '../../Camera'\r\nimport audio from \"../../../sounds/WSND0015.wav\"\r\nimport BetterAudio from '../../BetterAudio'\r\nimport UI from '../ui/UI'\r\n\r\n\r\nexport default class WallSecretDoor extends Wall implements Interactable {\r\n    canInteract = true\r\n    dirToCalculate = false\r\n\r\n    private dir: Vec3\r\n    private opening = false\r\n    private openingSpeed = Config.gridSize * 0.7\r\n    audio = new BetterAudio(audio)\r\n\r\n    toggle() {\r\n        if (!this.opening) {\r\n            this.opening = true\r\n            UI.instance.secretsFound++\r\n            this.audio.play()\r\n        }\r\n    }\r\n\r\n    update(deltaTime: number, camera: Camera) {\r\n        if (this.opening) {\r\n            if (this.dirToCalculate) {\r\n                this.calculateDir(camera)\r\n            }\r\n            this.transform.position = this.transform.position.add(this.dir.multiply(deltaTime * this.openingSpeed))\r\n            if (this.initialTransform.position.distanceTo(this.transform.position) >= Config.gridSize * 2) {\r\n                this.opening = false\r\n                this.canInteract = false\r\n            }\r\n        }\r\n    }\r\n\r\n    calculateDir(camera: Camera) {\r\n        this.dir = Vec3.fromAngle(this.transform.rotation.y)\r\n        const toCamera = camera.transform.position.substract(this.transform.position)\r\n        if ((this.dir.x > 0 && toCamera.x > 0) || (this.dir.x < 0 && toCamera.x < 0)) {\r\n            this.dir.x = -this.dir.x\r\n        }\r\n        if ((this.dir.z > 0 && toCamera.z > 0) || (this.dir.z < 0 && toCamera.z < 0)) {\r\n            this.dir.z = -this.dir.z\r\n        }\r\n        this.dirToCalculate = false\r\n    }\r\n}","import FieldData from '../../common/FieldData';\r\nimport { degToRad, Vec3 } from './utils';\r\nimport Wall from './shapes/level/Wall'\r\nimport Enemy from './shapes/level/Enemy'\r\nimport Cuboid from './shapes/level/Cuboid';\r\nimport Door from './shapes/level/Door';\r\nimport Plane from './shapes/level/Plane';\r\nimport Shape from './shapes/level/Shape';\r\nimport Interactable from './shapes/level/Interactable';\r\n\r\nimport Pickup from './shapes/level/pickups/Pickup';\r\nimport Ammo from './shapes/level/pickups/Ammo'\r\n\r\nimport Config from './Config'\r\nimport { TextureProgram } from './programs/TextureProgram';\r\nimport { ColorProgram } from './programs/ColorProgram';\r\nimport { Program } from './programs/Program';\r\nimport DogFood from './shapes/level/pickups/DogFood';\r\nimport Food from './shapes/level/pickups/Food';\r\nimport HealthPack from './shapes/level/pickups/HealthPack';\r\nimport Machinegun from './shapes/level/pickups/Machinegun';\r\n\r\nimport Decoration from './shapes/level/decorations/Decoration';\r\nimport DecorationMap from '../../common/DecorationMap'\r\nimport NotCollidingFieldValues from '../../common/NotCollidingFieldValues';\r\nimport GoldenCross from './shapes/level/pickups/GoldenCross';\r\nimport GoldenCup from './shapes/level/pickups/GoldenCup';\r\nimport GoldenBox from './shapes/level/pickups/GoldenBox';\r\nimport GoldenCrown from './shapes/level/pickups/GoldenCrown';\r\nimport PowerUp from './shapes/level/pickups/PowerUp';\r\nimport Pathfinder from './Pathfinder';\r\nimport Lever from './shapes/level/Lever';\r\nimport WallSecretDoor from './shapes/level/WallSecretDoor';\r\nimport UI from './shapes/ui/UI';\r\nimport PointItem from './shapes/level/pickups/PointItem';\r\n\r\n\r\nexport default class Level {\r\n    width: number\r\n    height: number\r\n    center: Vec3\r\n    playerPosition: Vec3\r\n    enemies: Enemy[] = []\r\n    walls: Wall[] = []\r\n    secretWalls: WallSecretDoor[] = []\r\n    doors: Door[] = []\r\n    shapes: Shape[] = []\r\n    floor: Plane\r\n    ceiling: Plane\r\n    exits: Lever[]\r\n    collidingCuboids: Cuboid[] = []\r\n    interactables: Interactable[] = []\r\n    textureProgram: TextureProgram\r\n    colorProgram: ColorProgram\r\n    pickups: Pickup[] = []\r\n    decorations: Decoration[] = []\r\n\r\n    private readonly gl: WebGLRenderingContext\r\n    private fields: FieldData[]\r\n    gridFields: FieldData[]\r\n\r\n    constructor(gl: WebGLRenderingContext, textureProgram: TextureProgram, colorProgram: ColorProgram) {\r\n        this.gl = gl\r\n        this.textureProgram = textureProgram\r\n        this.colorProgram = colorProgram\r\n    }\r\n\r\n    load(level: number, callback?: () => void) {\r\n        this.loadLevel(level, () => {\r\n            this.createObjects()\r\n            Pathfinder.instance.prepareLevel(this)\r\n            callback?.()\r\n        })\r\n    }\r\n\r\n    spawnLoot(enemy: Enemy) {\r\n        if (enemy.loot) {\r\n            this.pickups.push(enemy.loot)\r\n            enemy.loot.transform.position = enemy.transform.position.clone()\r\n            // enemy.loot.transform.position.x += 30\r\n            // enemy.loot.transform.position.z += 30\r\n            enemy.loot.setInitialState()\r\n        }\r\n    }\r\n\r\n    get verticesCount() {\r\n        return this.shapes.map(el => el.verticesCount).reduce((a, b) => a + b)\r\n    }\r\n\r\n    private loadLevel(number: number, callback?: () => void) {\r\n        import(`../levels/${number}.json`)\r\n            .then(({ default: level }) => {\r\n                this.width = level.width\r\n                this.height = level.height\r\n                this.center = new Vec3(this.width * Config.gridSize / 2, 0, this.height * Config.gridSize / 2)\r\n                this.fields = JSON.parse(JSON.stringify(level.fields))\r\n                this.checkWallsDirections()\r\n                this.changeWallsNeighboursTextures()\r\n                this.applyGridSize()\r\n                this.gridFields = JSON.parse(JSON.stringify(level.fields))\r\n                callback?.()\r\n            });\r\n    }\r\n\r\n    private checkWallsDirections() {\r\n        for (let door of this.fields.filter(f => f.value == 'door' || f.value == \"exitDoor\" || (f.value.toLowerCase().includes('secret') && f.value.toLowerCase().includes('wall')))) {\r\n            const horizontalNeighbours = this.fields\r\n                .filter(f => f.y == door.y && (f.x == door.x + 1 || f.x == door.x - 1))\r\n                .filter(f => f.value.toLowerCase().includes('wall'))\r\n            const verticalNeighbours = this.fields\r\n                .filter(f => f.x == door.x && (f.y == door.y + 1 || f.y == door.y - 1))\r\n                .filter(f => f.value.toLowerCase().includes('wall'))\r\n            if (horizontalNeighbours.length == 2 && verticalNeighbours.length == 0) {\r\n                door.rotation = 0\r\n            } else if (horizontalNeighbours.length == 0 && verticalNeighbours.length == 2) {\r\n                door.rotation = 270\r\n            }\r\n        }\r\n    }\r\n\r\n    private changeWallsNeighboursTextures() {\r\n        for (let door of this.fields.filter(f => f.value == 'door' || f.value == 'exitDoor')) {\r\n            for (let direction of [[0, -1], [0, 1], [-1, 0], [1, 0]]) {\r\n                const neighbour = this.fields.find(f => {\r\n                    return f.x == door.x + direction[0] && f.y == door.y + direction[1]\r\n                })\r\n                if (neighbour) {\r\n                    neighbour.wallDirection = direction\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private applyGridSize() {\r\n        for (let field of this.fields) {\r\n            field.x = (field.x * Config.gridSize) + Config.gridSize / 2\r\n            field.y = (field.y * Config.gridSize) + Config.gridSize / 2\r\n        }\r\n    }\r\n\r\n    private createObjects() {\r\n        const playerPositionData = this.fields.find(f => f.value == 'player')\r\n        this.playerPosition = new Vec3(playerPositionData.x, 0, playerPositionData.y)\r\n\r\n        this.walls = this.getLevelObjectsList('wall', Wall) as Wall[]\r\n        this.enemies = this.getLevelObjectsList('enemy', Enemy) as Enemy[]\r\n        this.doors = this.getLevelObjectsList('door', Door) as Door[]\r\n        const ammos = this.getLevelObjectsList('ammo', Ammo) as Ammo[]\r\n        const dogFoods = this.getLevelObjectsList('dogFood', DogFood) as DogFood[]\r\n        const foods = this.getLevelObjectsList('food', Food) as Food[]\r\n        const healthPacks = this.getLevelObjectsList('health', HealthPack) as HealthPack[]\r\n        const powerUps = this.getLevelObjectsList('powerUp', PowerUp) as PowerUp[]\r\n        const machineguns = this.getLevelObjectsList('machinegun', Machinegun) as Machinegun[]\r\n        const goldenCrosses = this.getLevelObjectsList('goldCross', GoldenCross) as GoldenCross[]\r\n        const goldenCups = this.getLevelObjectsList('goldCup', GoldenCup) as GoldenCup[]\r\n        const goldenBoxes = this.getLevelObjectsList('goldBox', GoldenBox) as GoldenBox[]\r\n        const goldenCrowns = this.getLevelObjectsList('goldCrown', GoldenCrown) as GoldenCrown[]\r\n\r\n        this.exits = []\r\n        this.exits.push(...this.getLevelObjectsList('exitLever', Lever) as Lever[])\r\n        this.exits.push(...this.getLevelObjectsList('secretExitLever', Lever) as Lever[])\r\n\r\n        this.decorations = []\r\n        for (let decorationName of DecorationMap.keys()) {\r\n            this.decorations.push(...this.getLevelObjectsList(decorationName, Decoration) as Decoration[])\r\n        }\r\n        this.decorations.filter(d => !NotCollidingFieldValues.includes(d.type)).forEach(d => d.createBB())\r\n\r\n        this.secretWalls = this.walls.filter(w => w instanceof WallSecretDoor).map(w => w as WallSecretDoor)\r\n        this.walls = this.walls.filter(w => !(w instanceof WallSecretDoor))\r\n        this.collidingCuboids = []\r\n        this.collidingCuboids.push(...this.walls)\r\n        this.collidingCuboids.push(...this.secretWalls)\r\n        this.collidingCuboids.push(...this.doors)\r\n        this.collidingCuboids.push(...this.exits)\r\n        this.interactables = []\r\n        this.interactables.push(...this.doors)\r\n        this.interactables.push(...this.secretWalls)\r\n        this.interactables.push(...this.exits)\r\n        this.pickups = []\r\n        this.pickups.push(...ammos)\r\n        this.pickups.push(...dogFoods)\r\n        this.pickups.push(...foods)\r\n        this.pickups.push(...healthPacks)\r\n        this.pickups.push(...powerUps)\r\n        this.pickups.push(...machineguns)\r\n        this.pickups.push(...goldenCrosses)\r\n        this.pickups.push(...goldenCups)\r\n        this.pickups.push(...goldenBoxes)\r\n        this.pickups.push(...goldenCrowns)\r\n\r\n        // this.doors[0].transform.position.x += 45\r\n\r\n        this.floor = new Plane(this.gl, this.colorProgram)\r\n        this.floor.setColor(\"#707070\")\r\n        this.floor.transform.position = this.center.clone()\r\n        this.floor.transform.position.y = -Config.gridSize / 2\r\n        this.floor.transform.scale.set(this.width * Config.gridSize, 1, this.height * Config.gridSize)\r\n\r\n        this.ceiling = new Plane(this.gl, this.colorProgram)\r\n        this.ceiling.setColor(\"#383838\")\r\n        this.ceiling.transform.position = this.center.clone()\r\n        this.ceiling.transform.position.y = Config.gridSize / 2\r\n        this.ceiling.transform.scale.set(this.width * Config.gridSize, 1, this.height * Config.gridSize)\r\n        this.ceiling.transform.rotation.z = degToRad(180)\r\n\r\n        // {\r\n        //     const health = new DogFood(this.gl, this.textureProgram)\r\n        //     health.transform.position.x = 1888\r\n        //     health.transform.position.z = 1344\r\n        //     health.setInitialState()\r\n        //     this.pickups.push(health)\r\n        // }\r\n        // {\r\n        //     const health = new Food(this.gl, this.textureProgram)\r\n        //     health.transform.position.x = 1888 - Config.gridSize * 1\r\n        //     health.transform.position.z = 1344\r\n        //     health.setInitialState()\r\n        //     this.pickups.push(health)\r\n        // }\r\n        // {\r\n        //     const health = new HealthPack(this.gl, this.textureProgram)\r\n        //     health.transform.position.x = 1888 - Config.gridSize * 2\r\n        //     health.transform.position.z = 1344\r\n        //     health.setInitialState()\r\n        //     this.pickups.push(health)\r\n        // }\r\n\r\n        UI.instance.enemiesCount = this.enemies.length\r\n        UI.instance.secretsCount = this.secretWalls.length\r\n        UI.instance.treasuresCount = this.pickups.filter(p => p instanceof PointItem).length\r\n\r\n        this.shapes = [\r\n            ...this.walls,\r\n            ...this.secretWalls,\r\n            ...this.enemies,\r\n            ...this.doors,\r\n            ...this.pickups,\r\n            ...this.decorations,\r\n            ...this.exits,\r\n            this.floor,\r\n            this.ceiling,\r\n        ]\r\n    }\r\n\r\n    private getLevelObjectsList<T extends Shape>(value: string, SpecificShape: new (gl: WebGLRenderingContext, program: Program, type?: string) => T) {\r\n        const objects: Shape[] = []\r\n        for (let field of this.fields.filter(f => f.value.toLowerCase().includes(value.toLowerCase()))) {\r\n            let shape\r\n            if (field.value.toLowerCase().includes('wall')) {\r\n                if (field.value.toLowerCase().includes('wallsecret')) {\r\n                    shape = new WallSecretDoor(this.gl, this.textureProgram, field.value)\r\n                } else {\r\n                    shape = new Wall(this.gl, this.textureProgram, field.value)\r\n                }\r\n            } else if (field.value.toLowerCase().includes(\"walking\")) {\r\n                if (field.value == 'enemyZWalking') {\r\n                    shape = new Enemy(this.gl, this.textureProgram, 'z')\r\n                } else if (field.value == 'enemyXWalking') {\r\n                    shape = new Enemy(this.gl, this.textureProgram, 'x')\r\n                }\r\n            } else if (field.value.toLowerCase().includes(\"door\")) {\r\n                if (field.value == 'exitDoor') {\r\n                    shape = new Door(this.gl, this.textureProgram, field.value)\r\n                } else {\r\n                    shape = new Door(this.gl, this.textureProgram)\r\n                }\r\n            } else if (field.value.toLowerCase().includes(\"enemy\")) {\r\n                for (let dir of ['up', 'down', 'left', 'right']) {\r\n                    if (field.value.toLowerCase().includes(dir)) {\r\n                        shape = new Enemy(this.gl, this.textureProgram, dir)\r\n                    }\r\n                }\r\n            } else {\r\n                shape = new SpecificShape(this.gl, this.textureProgram)\r\n            }\r\n            shape.transform.position.x = field.x\r\n            shape.transform.position.z = field.y\r\n            if (field.rotation) {\r\n                shape.transform.rotation.y = degToRad(field.rotation)\r\n            }\r\n            if (field.value.toLowerCase().includes('wall')) {\r\n                if (field.value.toLowerCase().includes('wallsecret')) {\r\n                    (shape as WallSecretDoor).dirToCalculate = true\r\n                }\r\n            }\r\n            shape.setInitialState()\r\n            if (field.wallDirection && shape instanceof Wall) {\r\n                const dir = new Vec3(field.wallDirection[0], 0, field.wallDirection[1])\r\n                if (dir.equals(Vec3.backward)) {\r\n                    shape.setTexture(shape.nearDoorDarkTexture, 0)\r\n                }\r\n                if (dir.equals(Vec3.forward)) {\r\n                    shape.setTexture(shape.nearDoorDarkTexture, 1)\r\n                }\r\n                if (dir.equals(Vec3.left)) {\r\n                    shape.setTexture(shape.nearDoorLightTexture, 3)\r\n                }\r\n                if (dir.equals(Vec3.right)) {\r\n                    shape.setTexture(shape.nearDoorLightTexture, 2)\r\n                }\r\n            } else if (shape instanceof Decoration) {\r\n                shape.type = value\r\n                shape.setTexture(shape.textureNumber)\r\n            }\r\n            objects.push(shape)\r\n        }\r\n        return objects\r\n    }\r\n}","import { Program } from '../../programs/Program'\r\nimport { m4, Vec3 } from '../../utils'\r\nimport Shape from '../level/Shape'\r\n\r\nexport default class Crosshair extends Shape {\r\n    readonly VERTICES = new Float32Array([\r\n        1, 1, 0,\r\n        -1, 1, 0,\r\n        -1, -1, 0,\r\n        -1, -1, 0,\r\n        1, -1, 0,\r\n        1, 1, 0,\r\n    ])\r\n\r\n    readonly COLORS = new Uint8Array([\r\n        200, 70, 0.520,\r\n        200, 70, 0.520,\r\n        200, 70, 0.520,\r\n        200, 70, 0.520,\r\n        200, 70, 0.520,\r\n        200, 70, 0.520,\r\n    ])\r\n\r\n    constructor(gl: WebGLRenderingContext, program: Program) {\r\n        super(gl, program)\r\n        this.transform.scale = Vec3.one.multiply(0.01)\r\n        this.transform.position.z = -2\r\n    }\r\n}","import { ColorProgram } from './programs/ColorProgram'\r\nimport { TextureProgram } from './programs/TextureProgram'\r\n\r\nimport { degToRad, log, m4, radToDeg, Vec3 } from './utils'\r\nimport Camera from './Camera'\r\nimport Input from './Input'\r\nimport Textures from './Textures'\r\n\r\nimport Level from './Level'\r\n\r\nimport Crosshair from './shapes/ui/Crosshair'\r\nimport Interactable from './shapes/level/Interactable'\r\nimport Config from './Config'\r\nimport UI from './shapes/ui/UI'\r\nimport Raycaster from './Raycaster'\r\n\r\n\r\nexport default class Game {\r\n    private readonly colorProgram: ColorProgram\r\n    private readonly textureProgram: TextureProgram\r\n    private readonly camera: Camera\r\n    private readonly textures: Textures\r\n    private readonly level: Level\r\n    private readonly crosshair: Crosshair\r\n    private readonly fixedUpdateInterval = 20\r\n    private gl: WebGLRenderingContext\r\n    private canvas: HTMLCanvasElement\r\n    private currentLevel = 1\r\n    private state = \"startScreen\"\r\n    private firstLevelLoaded = false\r\n\r\n    constructor() {\r\n\r\n        this.initWebgl()\r\n        this.colorProgram = new ColorProgram(this.gl)\r\n        this.textureProgram = new TextureProgram(this.gl)\r\n\r\n        this.camera = new Camera(this.gl, this.textureProgram)\r\n        this.camera.updateProjectionMatrix()\r\n        this.textures = new Textures(this.gl)\r\n        this.level = new Level(this.gl, this.textureProgram, this.colorProgram)\r\n        this.crosshair = new Crosshair(this.gl, this.colorProgram)\r\n        this.loadLevel(this.currentLevel)\r\n    }\r\n\r\n    private loadLevel(number: number) {\r\n        this.level.load(number, () => {\r\n            let shapes = []\r\n            shapes.push(...this.level.enemies.map(enemy => enemy.loot))\r\n            shapes.push(...this.level.enemies.map(enemy => enemy.tempFlag))\r\n            shapes.push(...this.level.shapes)\r\n            this.textures.load(shapes, () => {\r\n                this.camera.transform.position = this.level.playerPosition\r\n                this.camera.initialTransform = this.camera.transform.clone()\r\n                this.camera.collidingShapes = [...this.level.collidingCuboids, ...this.level.decorations.filter(decoration => decoration.bb)]\r\n                if (!this.firstLevelLoaded) {\r\n                    this.firstLevelLoaded = true\r\n                    this.startGameLoop()\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    private startGameLoop() {\r\n        let then = 0\r\n        const render = (now: number) => {\r\n            now *= 0.001  // convert to seconds\r\n            const deltaTime = now - then\r\n            then = now\r\n\r\n            this.draw(deltaTime)\r\n\r\n            requestAnimationFrame(render)\r\n        }\r\n        requestAnimationFrame(render)\r\n\r\n        const fixedDeltaTime = this.fixedUpdateInterval * 0.001\r\n        setInterval(() => {\r\n            this.fixedUpdate(fixedDeltaTime)\r\n        }, this.fixedUpdateInterval)\r\n    }\r\n\r\n    private fixedUpdate(deltaTime: number) {\r\n        if (Input.instance.interacting) {\r\n            const nearestInteractable = this.camera.nearest(\r\n                this.level.interactables\r\n                    .filter(i => i.canInteract)\r\n                    .filter(i => {\r\n                        const angle = this.camera.angleTo(i.transform.position)\r\n                        return Math.abs(angle) < 60\r\n                    })\r\n            ) as Interactable\r\n            if (nearestInteractable && this.camera.inInteractionDistance(nearestInteractable)) {\r\n                nearestInteractable.toggle()\r\n                Input.instance.justInteracted = true\r\n            }\r\n        }\r\n\r\n        this.camera.update(deltaTime)\r\n\r\n        for (let pickup of this.level.pickups.filter(pickup => !pickup.pickedUp)) {\r\n            if (this.camera.transform.position.horizontalDistanceTo(pickup.transform.position) <= pickup.pickupRange) {\r\n                pickup.pickUp(this.camera)\r\n            }\r\n        }\r\n\r\n        for (let door of this.level.doors) {\r\n            door.update(deltaTime)\r\n            if (door.opened) {\r\n                door.tryToClose(deltaTime, this.camera, this.level.enemies)\r\n            }\r\n        }\r\n        for (let secretWall of this.level.secretWalls) {\r\n            secretWall.update(deltaTime, this.camera)\r\n        }\r\n\r\n        const raycaster = Raycaster.fromDir(this.camera.transform.position, Vec3.fromAngle(this.camera.transform.rotation.y))\r\n        const shapeLookedAt = raycaster.nextShape(this.level.collidingCuboids)\r\n        for (let enemy of this.level.enemies) {\r\n            enemy.update(deltaTime, this.camera)\r\n            if (this.camera.isLookingAt(enemy) && shapeLookedAt) {\r\n                const enemyDistance = this.camera.transform.position.horizontalDistanceTo(enemy.transform.position)\r\n                const shapeLookedAtDistance = this.camera.transform.position.horizontalDistanceTo(shapeLookedAt.transform.position)\r\n                if (enemyDistance < shapeLookedAtDistance) {\r\n                    if (UI.instance.weapons.currentWeapon.justShot) {\r\n                        const distance = this.camera.transform.position.horizontalDistanceTo(enemy.transform.position)\r\n                        if (distance <= UI.instance.weapons.currentWeapon.range && !enemy.isDead) {\r\n                            enemy.damage(UI.instance.weapons.currentWeapon.damage)\r\n                            UI.instance.score += enemy.score\r\n                        }\r\n                        if (enemy.isDead) {\r\n                            this.level.spawnLoot(enemy)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (enemy.isDead) {\r\n                enemy.followingPlayer = null\r\n            } else {\r\n                const angleDiff = enemy.rotateTexture(this.camera.transform.position)\r\n                if (!enemy.followingPlayer) {\r\n                    let startFollowing = false\r\n\r\n\r\n                    // inShotNoticeDistance(camera: Camera) {\r\n                    //     return this.transform.position.horizontalDistanceTo(camera.transform.position) <= this.shotNoticeDistance\r\n                    // }\r\n                    const distance = enemy.transform.position.horizontalDistanceTo(this.camera.transform.position)\r\n                    if (enemy.canSee(this.camera.transform.position, this.level.collidingCuboids)) {\r\n                        if (UI.instance.weapons.currentWeapon.justShot) {\r\n                            startFollowing = true\r\n                        } else if (Math.abs(angleDiff) <= 90) {\r\n\r\n                            startFollowing = true\r\n                        } else if (distance <= Config.gridSize * 2) {\r\n\r\n                            startFollowing = true\r\n                        }\r\n                    }\r\n                    if (startFollowing) {\r\n                        enemy.followingPlayer = this.camera\r\n                        if (UI.instance.health > 0) {\r\n                            enemy.audioSight.play()\r\n                        }\r\n                        enemy.state = \"walking\"\r\n                    }\r\n                }\r\n                const canShot = enemy.tryToShoot(this.camera, this.level.collidingCuboids)\r\n                // console.log(enemy.state)\r\n                if (!canShot) {\r\n                    enemy.makeStepTowardsPlayer(deltaTime, this.level.doors)\r\n                }\r\n                enemy.makeStepIfWalking(deltaTime, this.level.collidingCuboids)\r\n            }\r\n        }\r\n\r\n        if (UI.instance.health == 0 && UI.instance.state == \"game\") {\r\n            this.camera.audioDeath.play()\r\n            UI.instance.state = \"dead\"\r\n            setTimeout(() => {\r\n                UI.instance.takeLife()\r\n                this.camera.transform = this.camera.initialTransform\r\n                UI.instance.state = \"game\"\r\n                this.camera.killer = null\r\n                this.loadLevel(this.currentLevel)\r\n            }, 4000)\r\n        }\r\n        if (this.camera.killer) {\r\n            this.camera.lookAtKillerStep(deltaTime)\r\n        }\r\n        UI.instance.update(deltaTime)\r\n        // console.log(this.state)\r\n        // console.log(UI.instance.health)\r\n    }\r\n\r\n    private draw(deltaTime: number) {\r\n        this.setDrawSettings()\r\n        // this.level.shapes.forEach(s => s.updateBuffers())\r\n\r\n        // this.crosshair.draw(this.camera.projectionMatrix)\r\n        this.level.floor.draw(this.camera.viewProjectionMatrix)\r\n        this.level.ceiling.draw(this.camera.viewProjectionMatrix)\r\n\r\n        for (let pickup of this.level.pickups.filter(pickup => !pickup.pickedUp)) {\r\n            pickup.lookAtCamera(this.camera.transform.rotation.y)\r\n            pickup.draw(this.camera.viewProjectionMatrix)\r\n        }\r\n\r\n        for (let decoration of this.level.decorations) {\r\n            decoration.lookAtCamera(this.camera.transform.rotation.y)\r\n            decoration.draw(this.camera.viewProjectionMatrix)\r\n        }\r\n\r\n        if (Input.instance.renderWalls) {\r\n            for (let wall of this.level.walls) {\r\n                wall.draw(this.camera.viewProjectionMatrix)\r\n            }\r\n            for (let wall of this.level.secretWalls) {\r\n                wall.draw(this.camera.viewProjectionMatrix)\r\n            }\r\n        }\r\n\r\n        for (let exit of this.level.exits) {\r\n            exit.draw(this.camera.viewProjectionMatrix)\r\n        }\r\n\r\n        for (let door of this.level.doors) {\r\n            door.draw(this.camera.viewProjectionMatrix)\r\n        }\r\n\r\n        for (let enemy of this.level.enemies) {\r\n            enemy.lookAtCamera(this.camera.transform.rotation.y)\r\n            enemy.draw(this.camera.viewProjectionMatrix)\r\n            for (let field of enemy.pathfinderFields) {\r\n                enemy.tempFlag.transform.position = field.subGridPos\r\n                enemy.tempFlag.lookAtCamera(this.camera.transform.rotation.y)\r\n                enemy.tempFlag.draw(this.camera.viewProjectionMatrix)\r\n            }\r\n        }\r\n        UI.instance.draw(this.canvas)\r\n    }\r\n\r\n    private initWebgl() {\r\n        this.canvas = document.getElementById(\"canvas\") as HTMLCanvasElement\r\n        this.canvas.width = 608 * Config.uiScale\r\n        this.canvas.height = 304 * Config.uiScale;\r\n\r\n        UI.instance.init();\r\n\r\n        this.gl = this.canvas.getContext(\"webgl\")\r\n\r\n        if (!this.gl) {\r\n            alert(\"No webgl for you\")\r\n        }\r\n\r\n        this.gl.clearColor(0, 0, 0, 0)\r\n\r\n        this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\r\n        this.gl.enable(this.gl.BLEND);\r\n\r\n        this.gl.enable(this.gl.CULL_FACE)\r\n        this.gl.enable(this.gl.DEPTH_TEST)\r\n    }\r\n\r\n    private setDrawSettings() {\r\n        this.resizeCanvasToDisplaySize(this.gl.canvas)\r\n\r\n        this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height)\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT)\r\n\r\n        Input.instance.update()\r\n    }\r\n\r\n    private resizeCanvasToDisplaySize(canvas: HTMLCanvasElement) {\r\n        // const displayWidth = canvas.clientWidth\r\n        // const displayHeight = canvas.clientHeight\r\n        const displayWidth = 608 * Config.uiScale\r\n        const displayHeight = 304 * Config.uiScale\r\n\r\n        const resizeNeeded = canvas.width !== displayWidth || canvas.height !== displayHeight\r\n\r\n        if (resizeNeeded) {\r\n            canvas.width = displayWidth\r\n            canvas.height = displayHeight\r\n            this.camera.updateProjectionMatrix()\r\n        }\r\n\r\n        return resizeNeeded\r\n    }\r\n}","import \"./style.css\";\r\nimport Game from \"./components/Game\";\r\nimport favicon from \"./favicon.ico\"\r\n\r\nwindow.onload = () => {\r\n    new Game()\r\n}"],"names":["leafPrototypes","getProto","inProgress","dataWebpackPrefix","___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","_i","_i2","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","sourceURLs","sources","source","sourceRoot","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","code","ids","t","keys","Object","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","m","n","getter","__esModule","d","a","getPrototypeOf","value","mode","ns","create","r","def","current","indexOf","getOwnPropertyNames","forEach","key","definition","defineProperty","enumerable","get","f","chunkId","all","reduce","promises","u","prop","prototype","hasOwnProperty","call","l","url","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","timeout","nc","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","fn","setTimeout","bind","type","Symbol","toStringTag","p","installedChunks","j","installedChunkData","promise","reject","error","errorType","realSrc","message","name","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","self","Program","constructor","gl","vertexShaderSource","fragmentShaderSource","vertexShader","createShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","program","createProgram","use","useProgram","attribute","getAttribLocation","uniform","getUniformLocation","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","deleteShader","attachShader","linkProgram","getProgramParameter","LINK_STATUS","deleteProgram","ColorProgram","super","info","position","color","uniforms","matrix","TextureProgram","texcoord","loadTexture","callback","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","Uint8Array","image","Image","addEventListener","radToDeg","Math","PI","degToRad","m4","translation","v","x","y","z","identity","rotate","mTarget","multiply","xRotation","yRotation","zRotation","angleInRadians","c","cos","sin","scaling","translate","xRotate","yRotate","zRotate","scale","perspective","fieldOfViewInRadians","aspect","near","far","tan","rangeInv","makeZToWMatrix","fudgeFactor","b","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyScalar","scalar","el","det","m11","m12","m13","m14","m21","m22","m23","m24","m31","m32","m33","m34","m41","m42","m43","m44","inverse","dst","Array","m00","m01","m02","m03","m10","m20","m30","tmp_0","tmp_1","tmp_2","tmp_3","tmp_4","tmp_5","tmp_6","tmp_7","tmp_8","tmp_9","tmp_10","tmp_11","tmp_12","tmp_13","tmp_14","tmp_15","tmp_16","tmp_17","tmp_18","tmp_19","tmp_20","tmp_21","tmp_22","tmp_23","t0","t1","t2","t3","lookAt","zAxis","substract","normalize","xAxis","yAxis","cross","getPositionVector","getScaleVector","magnitude","getRotationMatrix","Vec2","set","static","array","vec","add","multiplyByVector","abs","equals","toVec3","one","zero","forward","backward","right","left","up","down","copy","xInverted","yInverted","zInverted","isGreater","isLess","dot","distanceTo","sqrt","horizontalDistanceTo","yZeroed","to","inverted","transformMat4","w","out","clone","angle","minusOneOrZeroOrOne","toVec2","Transform","rotation","originTranslation","reset","transform","Shape","firstBufferReady","bb","texturedWidth","updateBuffers","verticesTransformed","verticesVec3Array","verticesCount","VERTICES","xVertices","filter","_","yVertices","zVertices","size","max","min","sizeRotated","rotationMatrix","halfSize","halfSizeRotated","texturedSize","setInitialState","initialTransform","initialTexcoords","TEXCOORDS","slice","onCreation","setPositionBuffer","setColorBuffer","setTexcoordsBuffer","bindGeometry","positionLocation","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","positionBuffer","FLOAT","vertexAttribPointer","bindColors","colorLocation","colorBuffer","texcoordsLocation","texcoordsBuffer","bindTransform","matrixLocation","viewProjectionMatrix","uniformMatrix4fv","draw","webglTexture","_draw","primitiveType","TRIANGLES","drawArrays","createBuffer","bufferData","STATIC_DRAW","COLORS","CuboidBoundingBox","shape","vertices","negativeCorner","negativeCornerRotated","positiveCorner","positiveCornerRotated","isColliding","pos","neg","pointSide","diffRotated","nearestDistanceDirection","side","nearestCorner","pointSideRotated","pointFarthestSideRotated","pointFarthestSide","diff","cornerRelative","basePointsYZeroed","Cuboid","Float32Array","defaultColors","texturesInLine","setTexture","setColor","wall","wallTexcoords","initialWallTexcoords","resetColor","textureSize","textureNumber","wallNumber","newTexcoords","setTexcoordsToTexture","texcoords","verticesVec2Array","arrayToVec2Array","texturePos","floor","vertex","vec2ArrayToArray","gridSize","uiScale","debug","soundVolume","musicVolume","BetterAudio","sound","volume","playLoading","audio","Audio","Config","play","currentTime","playPromise","playIfNotPlayed","pause","loop","Door","importedTexture","openAudio","closeAudio","opening","closing","openingSpeed","openingLength","hiddenInWallScaleCorrection","lightTexture","lightSideTexture","darkTexture","darkSideTexture","translationFinal","mFinal","positionDeltaFinal","positionFinal","deltaTime","positionDelta","closed","opened","toggle","canInteract","tryToClose","camera","enemies","every","Menu","audioSelect","audioMove","audioBack","option","timeSinceLastBlink","timeSinceBlinkStart","blinkInterval","blinkDuration","optionSize","canvas","ctx","getContext","width","height","console","log","menuUnselected","menuSelected","menuSelectedBlink","UI","instance","state","drawImage","LevelEnd","displayTime","bonusScore","animation","enemiesRatio","secretsRatio","treasuresRatio","imageSmoothingEnabled","levelEnd","uiElements","font","setInterval","calculateValues","endTime","Date","timeDiff","getTime","startTime","toTimeString","substring","playTimeSeconds","enemiesKilled","enemiesCount","secretsFound","secretsCount","treasuresFound","treasuresCount","ratio","score","drawTime","drawBonusScore","drawRatios","drawDigit","parseInt","digit","Weapon","fireRate","damage","initTextures","loopTextures","shootTexture","range","shooting","willShoot","justShot","textureIndex","currentTextures","isAutomatic","isTextureLastInit","framesCount","getNextTexture","getNextShootingTexture","getNextStoppedShootingTexture","Weapons","availableTypes","weapons","texturesCount","timeSinceLastUpdate","currentWeapon","find","weapon","Input","lastNumber","includes","setShooting","ammo","shot","shoot","decreaseAmmo","frameTime","context","row","col","LoadingScreen","progress","loadingTime","beforeLoadingDelay","afterLoadingDelay","fillStyle","fillRect","DeathScreen","frame","started","reversed","pixels","createImageData","start","interval","setPixelRed","offset","setPixelTransparent","feistelNet","input","nl","clearInterval","putImageData","audioSplash","audioMenu","audioLevel","lives","health","faceDirection","faceState","faceAnimationSteps","lastFaceAnimationStepsCount","showingMenu","flashing","flashCompletion","flashDuration","menu","loadingScreen","deathScreen","init","ui","elements","startScreen","uiCanvas","getElementById","onclick","onkeydown","onkeyup","takeLife","currentStep","duration","shift","startFaceAnimation","direction","stepsCount","random","clearRect","drawNumber","drawWeaponUI","drawFace","flashColor","flashIntensity","faceColumn","faceRow","weaponNumber","number","digits","split","reverse","entries","flashRed","flashYellow","sprinting","interacting","justInteracted","noclip","renderWalls","justChangedRenderWalls","pressedKeys","addKeyUpListener","addKeyDownListener","addAdditionalListeners","inputsBlocked","isPressed","Camera","killer","audioHit","audioDeath","fov","zNear","zFar","rotationSpeed","movementSpeed","collisionRadius","interactionDistance","blockedDirections","updateProjectionMatrix","cameraMatrix","speed","move","collidingShapes","nearest","shapes","sort","inInteractionDistance","transformMatrix","deltaPosition","blockedDirection","checkCollisions","angleTo","targetPosition","toTargetDir","lookingAtDir","toTargetAngle","atan2","angleDiff","cuboidCollisionSide","cuboid","cameraToWallDirection","steps","collisionCandidates","currentRadius","collidingPointTranslation","collidingPoint","candidate","collisionSide","nearestCornerDiff","uniqueBlockedDirections","findIndex","isLookingAt","enemy","targetXDir","enemyLeft","enemyRight","angleLeft","angleRight","projectionMatrix","fieldOfViewRadians","lookAtKillerStep","Textures","load","alreadyCreatedTextures","Map","textures","Set","loadHtmlImages","textureToHtmlImageMap","has","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","NEAREST_MIPMAP_LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","generateMipmap","importedTextures","htmlImages","imagesToLoad","onImageLoad","Wall","nearDoorLightTexture","nearDoorDarkTexture","textureColor","toLowerCase","textureName","lastLetter","substr","_darkTexture","_lightTexture","Pathfinder","allSubFieldsCreated","envFields","open","subdivisions","subGridSize","prepareLevel","level","gridFields","subFieldPosData","gridPos","subGridPosToGridPos","envField","walkable","NotCollidingFieldValues","gridPosToRealPos","realPosVec2","realPosToSubGridPos","gridPosVec3","getAllPathLocations","from","subGridFrom","subGridTo","_getAllPathfindLocations","subGridField","subGridPos","subGridPosToRealPos","realPos","startField","PathField","endField","leastFCostField","getPathUsingParents","validNeighbours","getValidNeighbours","neighbour","calculateCost","acc","loc","fCost","field","gCostWithParent","gCost","parent","hDiff","hCost","neighbourPos","subFieldAlreadyCreated","allWalkable","corner","subField","end","path","Raycaster","dir","squareGenerator","nextSquareGenerator","nextSquare","next","nextShape","limit","startClone","dirClone","firstTileCenter","firstYield","nextTileCenter","nextIntersection","nextSquareInner","nextIntersectingAxes","ceil","diffRatio","dirRatio","nextSquareInDirection","Plane","colors","hexToRgb","exec","Pickup","pickupRange","pickedUp","firstTextureSet","lookAtCamera","cameraY","canBePickedUp","pickUp","onPickedUp","Ammo","ammoCount","Flag","Enemy","pathfinderFields","textureRotation","stateToTextureMap","shotNoticeDistance","shootingDistance","damageDealed","walkingDirection","hp","followingSpeed","nextDir","timeSinceLastPathfinding","pathfindingDelay","audioSight","audiosDie","audioShot","loot","tempFlag","initialState","isDead","followingPlayer","pathfind","destination","makeStepTowardsPlayer","doors","futureField","door","makeStepIfWalking","fromDir","rotateTexture","correctedDiff","canSee","fromTo","tryToShoot","HealthItem","healthRestored","DogFood","Food","HealthPack","Machinegun","GridBoundingBox","center","Decoration","createBB","DecorationMap","PointItem","givenScore","GoldenCross","GoldenCup","GoldenBox","GoldenCrown","PowerUp","Lever","pressedTexture","WallSecretDoor","dirToCalculate","calculateDir","toCamera","Level","textureProgram","colorProgram","walls","secretWalls","collidingCuboids","interactables","pickups","decorations","loadLevel","createObjects","spawnLoot","default","fields","parse","checkWallsDirections","changeWallsNeighboursTextures","applyGridSize","horizontalNeighbours","verticalNeighbours","wallDirection","playerPositionData","playerPosition","getLevelObjectsList","ammos","dogFoods","foods","healthPacks","powerUps","machineguns","goldenCrosses","goldenCups","goldenBoxes","goldenCrowns","exits","decorationName","ceiling","SpecificShape","objects","Crosshair","Game","fixedUpdateInterval","currentLevel","firstLevelLoaded","initWebgl","crosshair","decoration","startGameLoop","render","now","requestAnimationFrame","fixedDeltaTime","fixedUpdate","nearestInteractable","pickup","secretWall","shapeLookedAt","startFollowing","distance","setDrawSettings","exit","alert","clearColor","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","enable","BLEND","CULL_FACE","DEPTH_TEST","resizeCanvasToDisplaySize","viewport","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","displayWidth","displayHeight","resizeNeeded"],"sourceRoot":""}